{"version":3,"sources":["components/edit/LocaleSelect.js","components/SidebarContent.module.css","components/BlockTree.module.css","components/BlockTree.js","components/BlocksLoader.js","components/SidebarContent.js"],"names":["locales","_","en","de","es","pt","fr","it","nl","da","sv","nb","fi","se","lt","mt","pl","uk","ru","bg","tr","ar","el","ro","sl","cy","localesArray","Object","entries","map","code","nativeName","defaultOptions","keys","LocaleSelect","defaultValue","onChange","options","style","undefined","hasOwnProperty","length","useState","changedLocale","setChangedLocale","handleLocaleChange","useCallback","newLocale","trigger","triggerProps","isOpen","className","margin","flexShrink","width","textAlign","path","mdiTranslate","toUpperCase","marginLeft","lineHeight","verticalAlign","paperProps","sx","maxHeight","close","padding","filter","includes","onClick","selected","module","exports","treeWalker","getViewportHeight","Math","max","document","documentElement","clientHeight","window","innerHeight","treeRoots","stack","treeRootsSorted","sort","a","b","block","metadata","modified","europaIndex","findIndex","root","properties","slug","slice","unshift","nestingLevel","node","f","pop","children","_id","isLeaf","childrenSorted","i","push","BlockRow","index","data","items","props","createBlock","toggleOpenById","refetchData","showBlockMenu","setItemSize","itemRef","useRef","useEffect","current","height","getBoundingClientRect","blockMenuIsOpen","setBlockMenuIsOpen","onBlockMenuToogle","newValue","setTimeout","toggleOpen","onReloadContext","force","rowContent","ViewerAuto","dragable","size","flexGrow","classes","blockRowActions","BlockMenu","onToogle","inset","ref","display","alignItems","flexDirection","minWidth","blockRow","fakeHover","BlockTree","scrollContainer","outerTreeRef","innerTreeRef","outerHeight","setOuterHeight","bottomMargin","setBottomMargin","nodes","setNodes","openById","setOpenById","treeNodes","setTreeNodes","viewportHeight","setHeight","timeoutId","resizeListener","clearTimeout","addEventListener","removeEventListener","useViewportHeight","updateHeight","outerBounds","top","fullHeight","isNaN","newHeight","min","useScrollPosition","updateTree","parentBlock","parent","find","n","buildTree","JSON","parse","stringify","flatTree","walker","done","next","new_done","value","getFlatTree","loadBlocks","useLoadBlocks","types","archived","roots","roles","then","loadedBlocks","catch","error","console","listRef","React","itemSizes","setSize","sizes","resetAfterIndex","getItemSize","refetchDataWithFilter","marginRight","marginBottom","overflowY","overflowX","itemSize","itemData","itemCount","innerRef","estimatedItemSize","itemKey","fontWeight","Localized","id","BlocksLoader","slugs","mountedRef","blocks","setBlocks","apollo_client","useApolloClient","Array","isArray","query","getBlocks_Query","variables","errors","Error","e","message","join","typeIcons","redirect","page","person","poster","definition","SidebarContent","mounted","favoriteBlocks","setFavoriteBlocks","loadFavoriteBlocks","loadFavoriteBlockIds","icon","emoji","reactionFor","ids","useLocalization","getString","userLocales","showBlockTree","setShowBlockTree","efficientSetShowBlockTree","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","debounce","loggedIn","useUser","toggleSidebar","useSidebarContext","matchesStartpage","useMatch","saveBlock","useSaveBlock","navigate","useNavigate","type","gottenBlock","scrollContainerRef","newEvent","CustomEvent","detail","locale","bubbles","cancelable","dispatchEvent","searchButtonRef","searchButtonSize","target","useLayoutEffect","useResizeObserver","entry","contentRect","useSize","isMacLike","test","navigator","userAgent","toLowerCase","ui_locales","choose_locale_information_string","content","header","headerBar","MenuOpen","AddMenu","Add","MenuList","maxWidth","MenuItem","event","justifyContent","boxShadow","background","borderRadius","ListItemIcon","Search","ListItemText","secondary","Twemoji","emojiClassName","opacity","Boolean","Divider","to","primaryTypographyProps","fontFamily","primary","fontSize","whiteSpace","href","domains","backend","encodeURIComponent","location","toString","Logout","Login"],"mappings":"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","file":"static/js/8.836927cf.chunk.js","sourcesContent":["import { useState, useCallback } from 'react'\n\nimport {\n  MenuItem,\n} from '@mui/material'\n\nimport PopoverMenu from '../PopoverMenu.js'\n\nimport MdiIcon from '@mdi/react'\nimport {\n  mdiTranslate,\n} from '@mdi/js'\n\nconst locales = {\n  _: '??',\n  en: 'English',\n  de: 'Deutsch (German)',\n  es: 'Español (Spanish)',\n  pt: 'Português (Portuguese)',\n  fr: 'Français (French)',\n  it: 'Italiano (Italian)',\n  nl: 'Dutch (Nederlands)',\n  da: 'Dansk (Danish)',\n  sv: 'Svenska (Swedish)',\n  nb: 'Norsk bokmål (Norwegian)',\n  fi: 'Suomi (Finish)',\n  se: 'Davvisámegiella (Northern Sámi)',\n  lt: 'Lietuviškai (Lithuanian)',\n  mt: 'Malti (Maltese)',\n  pl: 'Język polski (Polish)',\n  uk: 'украї́нська мо́ва (Ukrainian)',\n  ru: 'русский язык (Russian)',\n  bg: 'български език (Bulgarian)',\n  tr: 'Türkçe (Turkish)',\n  ar: 'اَلْعَرَبِيَّة (Arabic)',\n  el: 'ελληνικά (Greek)',\n  ro: 'limba română (Romanian)',\n  sl: 'slovenščina (Slovenian)',\n  cy: 'Cymraeg (Welsh)',\n}\n\nconst localesArray = Object.entries(locales)\n.map(([code, nativeName]) => ({code, nativeName}))\n\nconst defaultOptions = Object.keys(locales)\n\nfunction LocaleSelect({\n  defaultValue,\n  onChange,\n  options = defaultOptions,\n  style,\n}) {\n  if (\n    defaultValue === null\n    || defaultValue === undefined\n    || defaultValue === ''\n    || locales.hasOwnProperty(defaultValue) === false\n  ) {\n    if (options.length > 0) {\n      defaultValue = options[0]\n    } else {\n      defaultValue = '_'\n    }\n  }\n\n  const [changedLocale, setChangedLocale] = useState(defaultValue)\n\n  const handleLocaleChange = useCallback(newLocale => {\n    // TODO: get best match with fluent\n\n    setChangedLocale(newLocale)\n    \n    if (newLocale === '_') {\n      newLocale = null\n    }\n\n    if (onChange) {\n      onChange(newLocale)\n    }\n  }, [ setChangedLocale, onChange ])\n\n  return (\n    <PopoverMenu\n      trigger={(triggerProps, { isOpen }) => (\n        <button\n          {...triggerProps}\n          className=\"default hasIcon\"\n          style={{\n            margin: '0',\n            flexShrink: '0',\n            ...style,\n          }}\n        >\n          <span style={{ width: '100%', textAlign: 'start' }}>\n          {\n            changedLocale === '_'\n            ? <MdiIcon\n              path={mdiTranslate}\n              className=\"icon\"\n            />\n            : changedLocale.toUpperCase()\n          }\n          </span>\n          <span style={{\n            marginLeft: 'var(--basis)',\n            lineHeight: '1',\n            verticalAlign: 'text-top',\n          }}>\n            { isOpen ? '▴' : '▾' }\n          </span>\n        </button>\n      )}\n      paperProps={{\n        sx: {\n          maxHeight: '300px',\n        }\n      }}\n    >\n      {({ close }) => (\n        <div style={{\n          padding: 'var(--basis_x2) 0',\n        }}>\n          {\n            localesArray\n            .filter(({ code }) => options.includes(code))\n            .map(({ code, nativeName }) => (\n              <MenuItem\n                key={code}\n                onClick={() => {\n                  handleLocaleChange(code)\n                  close()\n                }}\n                className=\"roundMenuItem\"\n                selected={code === changedLocale}\n              >\n                {code === '_' ? nativeName : `${code.toUpperCase()} — ${nativeName}`}\n              </MenuItem>\n            ))\n          }\n        </div>\n      )}\n    </PopoverMenu>    \n  )\n}\n\nexport default LocaleSelect\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"SidebarContent_content__RAi8X\",\"header\":\"SidebarContent_header__1pYRG\",\"headerBar\":\"SidebarContent_headerBar__2xkje\",\"scrollContainer\":\"SidebarContent_scrollContainer__2eS9U\",\"emoji\":\"SidebarContent_emoji__3twKX\",\"blockRow\":\"SidebarContent_blockRow__TQD-T\",\"blockRowActions\":\"SidebarContent_blockRowActions__2Q6XU\",\"fakeHover\":\"SidebarContent_fakeHover__3q4dQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockRow\":\"BlockTree_blockRow__80Vim\",\"blockRowActions\":\"BlockTree_blockRowActions__GDOGf\",\"fakeHover\":\"BlockTree_fakeHover__TKaWl\"};","import React, { useCallback, useEffect, useState, useRef } from 'react'\nimport { VariableSizeList } from 'react-window'\n\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position'\n\nimport BlockMenu from './edit/BlockMenu.js'\nimport ViewerAuto from './view/ViewerAuto.js'\n\nimport { Localized } from '../fluent/Localized.js'\n\nimport classes from './BlockTree.module.css'\n\nimport {\n  MoreVertSharp as BlockMenuIcon,\n  ArrowDropDownSharp as ExpandLessIcon,\n  ArrowRightSharp as ExpandMoreIcon,\n} from '@mui/icons-material'\n\nimport useLoadBlocks from '../hooks/useLoadBlocks.js'\n\nconst minItemSize = 41\n\n// const getWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n// const getHeight = () => window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n\n// const getViewportWidth = () => Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\nconst getViewportHeight = () => Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)\n\nfunction useViewportHeight() {\n  // save current window width in the state object\n  let [height, setHeight] = useState(getViewportHeight())\n\n  // in this case useEffect will execute only once because\n  // it does not have any dependencies.\n  useEffect(() => {\n    // timeoutId for debounce mechanism\n    let timeoutId = null\n    const resizeListener = () => {\n      // prevent execution of previous setTimeout\n      clearTimeout(timeoutId)\n      // change width from the state object after 150 milliseconds\n      timeoutId = setTimeout(() => {\n        setHeight(getViewportHeight())\n      }, 150)\n    }\n    // set resize listener\n    window.addEventListener('resize', resizeListener)\n\n    // clean up function\n    return () => {\n      // remove resize listener\n      window.removeEventListener('resize', resizeListener)\n    }\n  }, [])\n\n  return { height }\n}\n\nfunction buildTree(nodes){\n  // Build a tree from the blocks.\n  // Where each block has a parentId property.\n  // Each tree item should have the block itself, a list of children and a nesting level.\n  \n  const treeRoots = []\n\n  for (let node of nodes) {\n    let parentBlock = null\n    if (node.block.parent) {\n      parentBlock = nodes.find(n => n._id === node.block.parent)\n      // if (!parentBlock) {\n      //   console.error('Invalid parent:')\n      //   console.error('parentBlockt', parentBlock)\n      //   console.error('node.block.parent', node.block.parent)\n      // }\n    }\n\n    if (!parentBlock) {\n      treeRoots.push(node)\n    } else {\n      // If the parentBlock has no children, create the children array.\n      if (!parentBlock.children) {\n        parentBlock.children = []\n      }\n      parentBlock.children.push(node)\n    }\n  }\n\n  return treeRoots\n}\n\nfunction* treeWalker(treeRoots) {\n  const stack = []\n \n  let treeRootsSorted = treeRoots\n    .sort((a, b) => b.block.metadata.modified > a.block.metadata.modified ? 1 : -1)\n\n  // find the index of the root with block.properties.slug === 'europa'\n  const europaIndex = treeRootsSorted.findIndex(root => root?.block?.properties?.slug === 'europa')\n\n  // remove the root at index europaIndex\n  if (europaIndex > -1) {\n    treeRootsSorted[europaIndex] = {\n      ...treeRootsSorted[europaIndex],\n      isOpen: true,\n    }\n\n    treeRootsSorted = [\n      treeRootsSorted[europaIndex],\n      ...treeRootsSorted.slice(0, europaIndex),\n      ...treeRootsSorted.slice(europaIndex + 1)\n    ]\n  }\n      \n  // Remember all the necessary data of the first node in the stack.\n  for (const root of treeRootsSorted) {\n    stack.unshift({\n      nestingLevel: 0,\n      node: root,\n    })\n  }\n \n  // Walk through the tree until we have no nodes available.\n  while (stack.length !== 0) {\n    const {\n      node: {children = [], _id, block, isOpen},\n      nestingLevel,\n    } = stack.pop()\n\n    yield {\n      _id,\n      isLeaf: children.length === 0,\n      isOpen,\n      block,\n      nestingLevel,\n    }\n \n    // Basing on the node openness state we are deciding if we need to render\n    // the child nodes (if they exist).\n    if (children.length !== 0 && isOpen) {\n      // Since it is a stack structure, we need to put nodes we want to render\n      // first to the end of the stack.\n\n      const childrenSorted = children\n        .sort((a, b) => b.block.metadata.modified > a.block.metadata.modified ? 1 : -1)\n\n      for (let i = childrenSorted.length - 1; i >= 0; i--) {\n        stack.push({\n          nestingLevel: nestingLevel + 1,\n          node: childrenSorted[i],\n        });\n      }\n    }\n  }\n}\n\nfunction getFlatTree(treeRoots){\n  const flatTree = []\n\n  const walker = treeWalker(treeRoots)\n\n  let done = false\n  while (!done) {\n    const { done: new_done, value } = walker.next()\n    done = new_done\n    if (!done) {\n      flatTree.push(value)\n    }\n  }\n\n  return flatTree\n}\n\nconst BlockRow = ({\n  index,\n  style,\n  data,\n}) => {\n  const {\n    items,\n    props,\n  } = data || []\n\n  const {\n    createBlock,\n    toggleOpenById,\n    refetchData,\n    showBlockMenu,\n    setItemSize,\n  } = props || {}\n\n  const {\n    _id,\n    isLeaf,\n    isOpen,\n    block,\n    nestingLevel,\n  } = items[index] || {}\n\n  const itemRef = useRef()\n  useEffect(() => {\n    if (typeof setItemSize === 'function' && itemRef.current) {\n      const height = itemRef.current.getBoundingClientRect().height\n      if (height > 0) {\n        setItemSize(index, ~~height)\n      }\n    }\n  }, [index, block, setItemSize]) // mention block here, to recalc the height on new data\n  \n  const [blockMenuIsOpen, setBlockMenuIsOpen] = useState(false)\n\n  const onBlockMenuToogle = useCallback(newValue => {\n    if (newValue === false) {\n      setTimeout(() => {\n        setBlockMenuIsOpen(newValue)\n      }, 200) // The fade-out animation is 200ms. Only rerender after it, for it not to loose the element.\n    } else {\n      setBlockMenuIsOpen(newValue)\n    }\n  }, [ setBlockMenuIsOpen ])\n\n  const toggleOpen = useCallback(() => {\n    if (typeof toggleOpenById === 'function') {\n      toggleOpenById(_id)\n    }\n  }, [toggleOpenById, _id])\n  \n  const onReloadContext = useCallback(() => {\n    if (typeof refetchData === 'function') {\n      setTimeout(() => {\n        refetchData({ force: true })\n      }, 200) // The fade-out animation is 200ms. Only rerender after it, for it not to loose the element.\n    }\n  }, [ refetchData ])\n\n  const rowContent = <>\n    <ViewerAuto\n      dragable={true}\n      size=\"line\"\n      block={block}\n      style={{\n        flexGrow: '1',\n        width: '100%',\n      }}\n    />\n\n    {\n      showBlockMenu === true\n      && (\n        <div className={classes.blockRowActions}>\n          <BlockMenu\n            onToogle={onBlockMenuToogle}\n            onReloadContext={onReloadContext}\n            {...{\n              block,\n              createBlock,\n              // saveType,\n            }}\n            trigger={props => (\n              <button\n                {...props}\n                className={`text hasIcon ${blockMenuIsOpen ? 'fakeHover' : ''}`}\n                style={{\n                  margin: '0',\n                  padding: 'var(--basis) 0',\n                  flexShrink: '0',\n                }}\n              >\n                <BlockMenuIcon className=\"icon\" />\n              </button>\n            )}\n          />\n        </div>\n      )\n    }\n  </>\n\n  const inset = ~~(nestingLevel * 25 + (isLeaf ? 24 : 0))\n\n  return <div\n    ref={itemRef}\n    key={block._id}\n    style={{\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'row',\n      ...style,\n      height: 'auto',\n      marginLeft: inset,\n      minWidth: `calc(100% - ${(isLeaf ? 24 : 0)}px)`,\n      width: `calc(100% - ${inset}px)`,\n    }}\n    className={`${classes.blockRow} ${blockMenuIsOpen ? classes.fakeHover : ''}`}\n  >\n    {!isLeaf && (\n      <button\n        onClick={toggleOpen}\n        className=\"text hasIcon\"\n        style={{\n          margin: '0',\n          padding: 'var(--basis) 0',\n          flexShrink: '0',\n        }}\n      >\n        {\n          isOpen\n            ? <ExpandLessIcon style={{ verticalAlign: 'middle' }} />\n            : <ExpandMoreIcon style={{ verticalAlign: 'middle' }} />\n        }\n      </button>\n    )}\n    {rowContent}\n  </div>\n}\n\nfunction BlockTree({\n  createBlock = ()=>{},\n  scrollContainer = window,\n  showBlockMenu = true,\n}) {\n  const outerTreeRef = useRef(null)\n  const innerTreeRef = useRef(null)\n  const [outerHeight, setOuterHeight] = useState(minItemSize)\n  const [bottomMargin, setBottomMargin] = useState(0)\n  const [nodes, setNodes] = useState([])\n  const [openById, setOpenById] = useState({})\n  const [treeNodes, setTreeNodes] = useState([])\n\n  /*\n  const sizeMap = useRef({})\n  const setSize = useCallback((index, size) => {\n    sizeMap.current = {\n      ...sizeMap.current,\n      [index]: size,\n    }\n  }, [])\n  const getSize = useCallback(index => sizeMap.current[index] || minItemSize, [])\n  */\n\n\n  const { height: viewportHeight } = useViewportHeight()\n\n  const updateHeight = useCallback(() => {\n    if (innerTreeRef.current && outerTreeRef.current) {\n      setTimeout(() => { // TODO remove this timeout (it's used to update the initial height)\n        const outerBounds = outerTreeRef.current.getBoundingClientRect()      \n        const maxHeight = viewportHeight - outerBounds.top\n\n        const innerBounds = innerTreeRef.current.getBoundingClientRect()\n        const fullHeight = innerBounds.height\n        if (typeof fullHeight === 'number' && !isNaN(fullHeight) && fullHeight > minItemSize) {\n          const newHeight = Math.min(maxHeight, fullHeight)\n          setOuterHeight(~~(newHeight))\n          setBottomMargin(~~(Math.max(fullHeight - newHeight, 0)))\n        }\n      }, 100)\n    }\n  }, [ viewportHeight, innerTreeRef, outerTreeRef, setOuterHeight, setBottomMargin ])\n\n  useScrollPosition(updateHeight, [updateHeight], null, false, 300, scrollContainer)\n\n  const updateTree = useCallback(nodes => {\n    if (nodes.length > 0) {\n      nodes = nodes.map(node => ({\n        ...node,\n        isOpen: openById.hasOwnProperty(node._id) ? openById[node._id] : false,\n      }))\n      \n      const treeRoots = buildTree(JSON.parse(JSON.stringify(nodes)))\n      const flatTree = getFlatTree(treeRoots)\n      setTreeNodes(flatTree)\n    } else {\n      setTreeNodes([])\n    }\n    updateHeight()\n  }, [setTreeNodes, updateHeight, openById])\n\n  const loadBlocks = useLoadBlocks()\n  const refetchData = useCallback(options => {\n    let {\n      force = false,\n    } = options || {}\n\n    if (true || force === true) {      \n      loadBlocks({\n        types: ['page', 'redirect'],\n        archived: false,\n        roots: ['6249c879fcaf12b124914396'], // TODO: don't hard code the id of europa \n        roles: ['viewer', 'editor', 'owner']\n      })\n        .then(async loadedBlocks => {\n          const nodes = loadedBlocks\n          .map(block => ({\n            _id: block._id,\n            block,\n            children: [],\n            isOpen: false,\n          }))\n\n          setNodes(nodes)\n          updateTree(nodes)\n        })\n        .catch(error => console.error(error))\n    }\n  }, [loadBlocks, setNodes, updateTree])\n\n  useEffect(() => {\n    refetchData()\n  }, [ refetchData ])\n\n  const listRef = useRef(null)\n  const [itemSizes, setSize] = React.useState([])\n  const setItemSize = React.useCallback((index, size) => {\n    if (typeof setSize === 'function') {\n      setSize(sizes => ({\n        ...sizes,\n        [index]: size\n      }))\n      if (!!listRef.current && typeof listRef.current.resetAfterIndex === 'function') {\n        listRef.current.resetAfterIndex(index, false)\n      }\n    }\n  }, [])\n  const getItemSize = React.useCallback(index => {\n    return itemSizes[index] || minItemSize\n  }, [itemSizes])\n\n\n\n\n  const toggleOpenById = useCallback((_id) => {\n    openById[_id] = !openById[_id]\n    setOpenById(openById)\n    updateTree(nodes)\n  }, [setOpenById, openById, updateTree, nodes])\n\n  const refetchDataWithFilter = useCallback(options => {\n    refetchData(options)\n  }, [ refetchData ])\n  \n  return <div\n      style={{\n        height: outerHeight,\n        marginRight: '-12px',\n        marginLeft: '-12px',\n        marginBottom: bottomMargin,\n        overflowY: 'visible',\n        overflowX: 'auto',\n      }}\n      ref={outerTreeRef}\n    >\n      <VariableSizeList\n        ref={listRef}\n        itemSize={getItemSize}\n        itemData={{\n          items: treeNodes,\n          props: {\n            createBlock,\n            toggleOpenById,\n            refetchData: refetchDataWithFilter,\n            showBlockMenu,\n            setItemSize,\n          }\n        }}\n        itemCount={treeNodes.length}\n        innerRef={innerTreeRef}\n        // onScroll={updateHeight}\n        height={outerHeight}\n        width=\"auto\"\n        style={{\n          // overflow: 'visible',\n          overflowY: 'hidden',\n          overflowX: 'visible',\n          // overflowX: 'hidden',\n        }}\n        estimatedItemSize={minItemSize}\n        itemKey={(index, data) => data.items[index]._id}\n      >\n        {BlockRow}\n      </VariableSizeList>\n      {\n        treeNodes.length === 0\n          ? <p style={{\n            textAlign: 'center',\n            fontWeight: 'bold',\n          }}><Localized id=\"blocktree_no_nodes_to_show\" /></p>\n          : null\n      }\n    </div>\n}\n\nexport default BlockTree\n\n\n\n// const defaultButtonStyle = { fontFamily: 'Courier New' }\n\n// Tree component can work with any possible tree structure because it uses an\n// iterator function that the user provides. Structure, approach, and iterator\n// function below is just one of many possible variants.\n// const defaultTree = {\n//   name: 'Root #1',\n//   id: 'root-1',\n//   children: [\n//     {\n//       children: [\n//         {id: 'child-2', name: 'Child #2'},\n//         {id: 'child-3', name: 'Child #3'},\n//         {id: 'child-5', name: 'Child #3'},\n//         {id: 'child-6', name: 'Child #3'},\n//         {id: 'child-7', name: 'Child #3'},\n//         {id: 'child-8', name: 'Child #3'},\n//         {id: 'child-9', name: 'Child #3'},\n//         {id: 'child-10', name: 'Child #3'},\n//         {id: 'child-11', name: 'Child #3'},\n//       ],\n//       id: 'child-1',\n//       name: 'Child #1',\n//     },\n//   ],\n// }\n\n  /*\nasync function* treeWalker(refresh) {\n  const stack = []\n \n  // Remember all the necessary data of the first node in the stack.\n  stack.push({\n    nestingLevel: 0,\n    node: tree,\n  })\n \n  // Walk through the tree until we have no nodes available.\n  while (stack.length !== 0) {\n    const {\n      node: {children = [], id, name},\n      nestingLevel,\n    } = stack.pop()\n \n    // Here we are sending the information about the node to the Tree component\n    // and receive an information about the openness state from it. The\n    // `refresh` parameter tells us if the full update of the tree is requested;\n    // basing on it we decide to return the full node data or only the node\n    // id to update the nodes order.\n    const isOpened = yield refresh\n      ? {\n          id,\n          isLeaf: children.length === 0,\n          isOpenByDefault: false,\n          name,\n          nestingLevel,\n        }\n      : id\n \n    // Basing on the node openness state we are deciding if we need to render\n    // the child nodes (if they exist).\n    if (children.length !== 0 && isOpened) {\n      // Since it is a stack structure, we need to put nodes we want to render\n      // first to the end of the stack.\n      for (let i = children.length - 1; i >= 0; i--) {\n        stack.push({\n          nestingLevel: nestingLevel + 1,\n          node: children[i],\n        });\n      }\n    }\n  }\n}\n*/\n\n  /*\n  // Node component receives all the data we created in the `treeWalker` +\n  // internal openness state (`isOpen`), function to change internal openness\n  // state (`toggle`) and `style` parameter that should be added to the root div.\n  const Node = ({data: {isLeaf, name, nestingLevel}, isOpen, style, toggle}) => {\n\n    const toogleAndUpdate = () => {\n      toggle()\n      setTimeout(updateHeight, 100)\n    }\n\n    return <div\n      style={{\n        ...style,\n        alignItems: 'center',\n        display: 'flex',\n        marginLeft: nestingLevel * 30 + (isLeaf ? 48 : 0),\n      }}\n    >\n      {!isLeaf && (\n        <div>\n          <button\n            type=\"button\"\n            onClick={toogleAndUpdate}\n            style={defaultButtonStyle}\n          >\n            {isOpen ? '-' : '+'}\n          </button>\n        </div>\n      )}\n      <div>{name}</div>\n    </div>\n  }\n*/\n","import { useRef, useState, useEffect } from 'react'\n\nimport { useApolloClient } from '@apollo/client'\nimport { getBlocks_Query } from '../graphql/queries'\n\nexport default function BlocksLoader({ slugs = [], children, ...props }) {\n  const mountedRef = useRef(false)\n  useEffect(() => {\n    mountedRef.current = true\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  const [blocks, setBlocks] = useState([])\n\n  const apollo_client = useApolloClient()\n\n  useEffect(() => {\n    if (Array.isArray(slugs) && slugs.length > 0) {\n      apollo_client.query({\n        query: getBlocks_Query,\n        variables: {\n          slugs,\n        },\n      })\n        .then(async ({ errors, data }) => {\n          if (mountedRef.current === true) {\n            if (Array.isArray(errors) || !Array.isArray(data.blocks)) {\n              throw new Error(errors.map(e => e.message).join('\\n'))\n            } else {\n              setBlocks(data.blocks)\n            }\n          }\n        })\n        .catch(async error => {\n          console.error('error', error)\n          setBlocks([])\n        })\n    } else {\n      setBlocks([])\n    }\n  }, [slugs, apollo_client])\n\n  if (blocks === null || blocks.length === 0) {\n    return null\n  }\n\n  if (typeof children !== 'function') {\n    return null\n  }\n\n  return children({...props, blocks, slugs})\n}\n","import React, { useState, useCallback, useRef, useEffect } from 'react'\nimport classes from './SidebarContent.module.css'\n\nimport {\n  MenuList,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from '@mui/material'\n\nimport {\n  MenuOpen as MenuOpenIcon,\n  Add as AddIcon,\n\n  Login as LoginIcon,\n  Logout as LogoutIcon,\n\n  LanguageSharp as LocaleChooserIcon,\n  Search as SearchIcon,\n\n  MoreVertSharp as BlockMenuIcon,\n\n  InsertDriveFileSharp as PageIcon,\n  LinkSharp as RedirectIcon,\n  PersonSharp as PersonIcon,\n  WebStoriesSharp as PosterIcon, // WebStories book bookmark ContactPage CropPortrait Layers Note PhotoAlbum Photo ViewCarousel\n} from '@mui/icons-material'\n\nimport useSaveBlock from '../hooks/useSaveBlock.js'\n\nimport { useNavigate, useMatch, Link } from 'react-router-dom'\n\nimport { Localized, useLocalization } from '../fluent/Localized.js'\nimport useUser from '../hooks/useUser.js'\nimport useLoadBlocks from '../hooks/useLoadBlocks.js'\nimport { useSidebarContext } from './Sidebar.js'\nimport AddMenu from './edit/AddMenu.js'\nimport BlockTree from './BlockTree.js'\nimport BlocksLoader from './BlocksLoader.js'\nimport Twemoji from './Twemoji.js'\nimport ViewerAuto from './view/ViewerAuto.js'\nimport BlockMenu from './edit/BlockMenu.js'\n\nimport LocaleSelect from './edit/LocaleSelect.js'\nimport { locales } from '../fluent/l10n.js'\n\nimport useResizeObserver from '@react-hook/resize-observer'\n\nconst typeIcons = {\n  redirect: <RedirectIcon />,\n  page: <PageIcon />,\n  person: <PersonIcon />,\n  poster: <PosterIcon />,\n  definition: <PageIcon />, // todo change icon\n}\n\nconst useSize = target => {\n  const mountedRef = React.useRef(false)\n  useEffect(() => {\n    mountedRef.current = true\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  const [size, setSize] = React.useState()\n\n  React.useLayoutEffect(() => {\n    if (mountedRef.current === true) {\n      setSize(target.current.getBoundingClientRect())\n    }\n  }, [target])\n\n  // Where the magic happens\n  useResizeObserver(target, (entry) => {\n    if (mountedRef.current === true) {\n      setSize(entry.contentRect)\n    }\n  })\n  return size\n}\n\nfunction debounce(func, wait, immediate) {\n  // Source: underscore.js\n\tvar timeout\n\treturn function() {\n\t\tvar context = this, args = arguments\n\t\tvar later = function() {\n\t\t\ttimeout = null\n\t\t\tif (!immediate) func.apply(context, args)\n\t\t}\n\t\tvar callNow = immediate && !timeout\n\t\tclearTimeout(timeout)\n\t\ttimeout = setTimeout(later, wait)\n\t\tif (callNow) func.apply(context, args)\n\t}\n}\n\nexport default function SidebarContent() {\n  const mounted = useRef(false)\n  useEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  const [favoriteBlocks, setFavoriteBlocks] = useState([])\n  const loadBlocks = useLoadBlocks()\n\n  const loadFavoriteBlocks = useCallback(async () => {\n    const loadFavoriteBlockIds = (await loadBlocks({\n      types: ['reaction'],\n      roles: ['owner'],\n      archived: false,\n    }))\n      .filter(block => block.properties?.icon?.emoji === '⭐️')\n      .map(block => block.properties.reactionFor)\n\n    const favoriteBlocks = await loadBlocks({\n      ids: loadFavoriteBlockIds\n    })\n    setFavoriteBlocks(favoriteBlocks)\n  }, [loadBlocks])\n  useEffect(() => {\n    if (mounted.current) {\n      loadFavoriteBlocks()\n    }\n  }, [loadFavoriteBlocks])\n\n  const {\n    getString,\n    userLocales = [],\n  } = useLocalization()\n\n  const [showBlockTree, setShowBlockTree] = useState(false)\n  var efficientSetShowBlockTree = useCallback(()=>{\n    if (mounted.current) {\n      debounce(() => {\n        if (mounted.current) {\n\t        setShowBlockTree(true)\n        }\n      }, 10)()\n    }\n  }, [ setShowBlockTree, mounted ])\n  useEffect(() => {\n    efficientSetShowBlockTree()\n  }, [ efficientSetShowBlockTree ])\n  \n  const { loggedIn } = useUser()\n  const { toggleSidebar } = useSidebarContext()\n\n  const matchesStartpage = useMatch('/')\n\n  const saveBlock = useSaveBlock()\n  const navigate = useNavigate()\n\n  const createBlock = useCallback(({ type }) => {\n    if (typeof type === 'string' && type.length > 0) {\n      saveBlock({\n        type,\n      })\n        .then(gottenBlock => {\n          navigate(`/${gottenBlock._id}/edit`)\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    }\n  }, [saveBlock, navigate])\n\n  const scrollContainerRef = useRef(null)\n\n  const handleLocaleChange = useCallback(newLocale => {\n    const newEvent = new CustomEvent('change_locale', {\n      detail: {\n        locale: newLocale,\n      },\n      bubbles: true,\n      cancelable: false,\n    })\n    document.dispatchEvent(newEvent)\n  }, [])\n\n  const searchButtonRef = useRef(null)\n  const searchButtonSize = useSize(searchButtonRef)\n\n  const openSearch = () => {\n    const event = new CustomEvent('open_search')\n    window.dispatchEvent(event)\n  }\n  // const isMacLike = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform) // source: https://stackoverflow.com/questions/10527983/best-way-to-detect-mac-os-x-or-windows-computers-with-javascript-or-jquery?noredirect=1&lq=1\n  const isMacLike = /(macintosh|macintel|macppc|mac68k|macos|iphone|ipad|ipod)/i.test(window.navigator.userAgent.toLowerCase())\n\n  const ui_locales = [\n    '_',\n    ...Object.keys(locales),\n  ]\n\n  const choose_locale_information_string = getString('choose_locale_information')\n\n  return <div ref={scrollContainerRef} className={classes.scrollContainer}>\n    <div className={classes.content}>\n    <header className={classes.header}>\n      <div className={classes.headerBar}>\n        {\n          !matchesStartpage\n          ? <button onClick={toggleSidebar} className=\"text hasIcon\" style={{ margin: '0' }}>\n              <MenuOpenIcon className=\"icon\" />\n            </button>\n          : null\n        }\n\n          {\n            matchesStartpage\n              ? <h1>Volt.Link</h1>\n              : <h2 style={{ margin: 0 }}>Volt.Link</h2>\n          }\n\n          <AddMenu\n            trigger={triggerProps => (\n              <button className=\"default hasIcon\" {...triggerProps}>\n                <AddIcon className=\"icon\" />\n                {/* <span className=\"hideOnSmallScreen\" style={{verticalAlign: 'middle'}}>Add</span> */}\n              </button>\n            )}\n            createBlock={createBlock}\n          />\n      </div>\n    </header>\n\n      <MenuList style={{ maxWidth: '100%' }}>\n\n        <MenuItem\n          ref={searchButtonRef}\n          onClick={openSearch}\n          style={{\n            width: '100%',\n            justifyContent: 'space-between',\n            // boxShadow: 'inset 0 0 0 1px rgba(var(--background-rgb), var(--alpha))',\n            boxShadow: '0 0 0 1px var(--background)',\n            background: 'var(--background)',\n\n            // the following replaces the roundMenuItem-css-class\n            borderRadius: 'var(--basis)',\n            margin: '0',\n            padding: 'var(--basis) var(--basis_x2)',\n            // end of the roundMenuItem-css-class stuff\n          }}\n        >\n          <ListItemIcon>\n            <SearchIcon />\n          </ListItemIcon>\n          <ListItemText\n            secondary={<span style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}>\n              <Localized id=\"search\" />\n\n              {\n                searchButtonSize?.width > 500\n                  ? (\n                    isMacLike\n                      ? <kbd>⌘ K</kbd>\n                      : <kbd>Ctrl+K</kbd>\n                  )\n                  : null\n              }\n              {/*\n              Command / Cmd: ⌘\n              Shift: ⇧\n              Option / Alt: ⌥\n              Control / Ctrl: ⌃\n              Caps Lock: ⇪\n            */}\n            </span>}\n          />\n        </MenuItem>\n\n        <br />\n\n        {\n          loggedIn\n            ? <>\n              <h2 style={{ margin: '0 calc(1.85 * var(--basis)) var(--basis_x2) calc(1.85 * var(--basis))' }}>\n                <Twemoji emojiClassName={classes.emoji} emoji=\"⭐️\" /> <Localized id=\"favorites_heading\" />\n              </h2>\n              <p className=\"body2\" style={{ opacity: 0.8, margin: '0 calc(1.85 * var(--basis)) var(--basis_x2) calc(1.85 * var(--basis))' }}>\n                <Localized id=\"favorites_description\" />\n              </p>\n              {\n                favoriteBlocks.length > 0\n                  ? favoriteBlocks\n                    .map(block => {\n                      if (block) {\n                        return <div\n                          key={block._id}\n                          style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            flexDirection: 'row',\n                            height: 'auto',\n                          }}\n                          className={classes.blockRow}\n                        >\n                          <ViewerAuto key={block._id} block={block} />\n                          <div className={classes.blockRowActions}>\n                            <BlockMenu\n                              onReloadContext={loadFavoriteBlocks}\n                              {...{\n                                block,\n                                // createBlock,\n                                // saveType,\n                              }}\n                              trigger={props => (\n                                <button\n                                  {...props}\n                                  className={`text hasIcon`}\n                                  style={{\n                                    margin: '0',\n                                    padding: 'var(--basis) 0',\n                                    flexShrink: '0',\n                                  }}\n                                >\n                                  <BlockMenuIcon className=\"icon\" />\n                                </button>\n                              )}\n                            />\n                          </div>\n                        </div>\n                      }\n                      return null\n                    })\n                    .filter(Boolean)\n                  : null\n              }\n              <br />\n              <Divider style={{ opacity: 0.2, borderRadius: '10px' }} />\n              <br />\n            </>\n            : null\n        }\n\n        {\n          ['redirect', 'page', 'person', 'poster', 'definition']\n            .map(type => (<Link key={type} to={`/list/${type}/`}>\n              <MenuItem className=\"clickable_card\" style={{\n                // the following replaces the roundMenuItem-css-class\n                borderRadius: 'var(--basis)',\n                margin: '0',\n                padding: 'var(--basis) var(--basis_x2)',\n                // end of the roundMenuItem-css-class stuff\n              }}>\n                <ListItemIcon>\n                  {typeIcons[type]}\n                </ListItemIcon>\n                <ListItemText\n                  primaryTypographyProps={{ style: { fontWeight: 'bold', fontFamily: 'inherit' }}}\n                  primary={<Localized id={`block_menu_type_label_plural_${type}`} />}\n                />\n              </MenuItem>\n            </Link>))\n        }\n\n        <br />\n\n        <MenuItem\n          className=\"clickable_card\"\n          style={{\n            // the following replaces the roundMenuItem-css-class\n            borderRadius: 'var(--basis)',\n            margin: '0',\n            padding: 'var(--basis) var(--basis_x2)',\n            // end of the roundMenuItem-css-class stuff\n          }}\n        >\n          <ListItemIcon>\n            <LocaleChooserIcon />\n          </ListItemIcon>\n          <ListItemText\n            primaryTypographyProps={{ style: { fontWeight: 'bold', fontFamily: 'inherit' } }}\n            primary={<>\n              <span style={{\n                marginRight: 'var(--basis_x2)',\n                verticalAlign: 'middle',\n              }}>\n                <Localized id=\"choose_locale\" />\n              </span>\n              <LocaleSelect\n                onChange={handleLocaleChange}\n                defaultValue={userLocales[0]}\n                options={ui_locales}\n                style={{\n                  fontSize: 'inherit',\n                  padding: '4px 8px',\n                  verticalAlign: 'middle',\n                }}\n              />\n            </>}\n            secondary={<>\n              {\n                typeof choose_locale_information_string === 'string'\n                  && choose_locale_information_string !== ''\n                  ? <span style={{ marginBottom: '0', whiteSpace: 'normal' }}>\n                    <Localized id=\"choose_locale_information\" />\n                  </span>\n                  : null\n              }\n            </>}\n          />\n        </MenuItem>\n\n        {\n          loggedIn\n            ? <a href={`${window.domains.backend}logout?redirect_to=${encodeURIComponent(window.location.toString())}`}>\n              <MenuItem className=\"clickable_card\" style={{\n                // the following replaces the roundMenuItem-css-class\n                borderRadius: 'var(--basis)',\n                margin: '0',\n                padding: 'var(--basis) var(--basis_x2)',\n                // end of the roundMenuItem-css-class stuff\n              }}>\n                <ListItemIcon>\n                  <LogoutIcon />\n                </ListItemIcon>\n                <ListItemText\n                  primaryTypographyProps={{ style: { fontWeight: 'bold', fontFamily: 'inherit' } }}\n                  primary={<Localized id=\"logout\" />}\n                />\n              </MenuItem>\n            </a>\n            : <a href={`${window.domains.backend}login?redirect_to=${encodeURIComponent(window.location.toString())}`}>\n              <MenuItem className=\"clickable_card\" style={{\n                // the following replaces the roundMenuItem-css-class\n                borderRadius: 'var(--basis)',\n                margin: '0',\n                padding: 'var(--basis) var(--basis_x2)',\n                // end of the roundMenuItem-css-class stuff\n              }}>\n                <ListItemIcon>\n                  <LoginIcon />\n                </ListItemIcon>\n                <ListItemText\n                  primaryTypographyProps={{ style: { fontWeight: 'bold', fontFamily: 'inherit' } }}\n                  primary={<Localized id=\"login\" />}\n                />\n              </MenuItem>\n            </a>\n        }\n\n        <br />\n\n        <BlocksLoader slugs={[\n          'glossary',\n          'vip',\n          'tools',\n        ]}>\n          {({ blocks, slugs }) => {\n            return slugs\n              .map(slug => {\n                const block = blocks.find(block => block?.properties?.slug === slug)\n                if (block) {\n                  return <ViewerAuto key={block._id} block={block} />\n                }\n                return null\n              })\n              .filter(Boolean)\n          }}\n        </BlocksLoader>\n\n        <br />\n\n        <BlocksLoader slugs={[\n          'about',\n          'volt_link_workplace_group',\n          'stats',\n          'volt_link_source_code',\n          'volt_link_contact',\n          'imprint',\n          'privacy_policy',\n        ]}>\n          {({ blocks, slugs }) => {\n            return slugs\n              .map(slug => {\n                const block = blocks.find(block => block?.properties?.slug === slug)\n                if (block) {\n                  return <ViewerAuto key={block._id} block={block} />\n                }\n                return null\n              })\n              .filter(Boolean)\n          }}\n        </BlocksLoader>\n      </MenuList>\n\n      <br />\n      <Divider style={{ opacity: 0.2, borderRadius: '10px' }} />\n      <br />\n\n      {/* All blocks: */}\n      {\n        showBlockTree\n        ? <BlockTree\n            showBlockMenu={true}\n            scrollContainer={scrollContainerRef}\n          />\n        : null\n      }\n    </div>\n  </div>\n}\n"],"sourceRoot":""}