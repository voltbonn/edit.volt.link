{"version":3,"sources":["hooks/useSaveBlock.js","components/edit/AddMenu.js","components/edit/LocaleSelect.js","hooks/useArchiveBlock.js","components/SubMenu.js","components/edit/BlockMenu.js","components/SidebarContent.module.css","components/BlockTree.module.css","components/BlockTree.js","components/BlocksLoader.js","components/SidebarContent.js"],"names":["removeProperty","obj","prop","i","JSON","parse","stringify","hasOwnProperty","useSaveBlock","getString","useLocalization","apollo_client","useApolloClient","useSnackbar","enqueueSnackbar","closeSnackbar","handleSaveBlock","useCallback","initialBlock","Promise","final_resolve","snackbarKey","newBlock","Array","isArray","content","map","contentConfig","blockId","loadingDataPromise","resolve","mutate","mutation","saveBlock_Mutation","variables","block","then","a","data","error","variant","preventDuplicate","autoHideDuration","saveBlock","catch","console","message","race","setTimeout","response","persist","blockTypeIcons","button","text","code","divider","checkbox","page","person","redirect","image","default_types","AddMenuContent","createBlock","types","close","type","className","onClick","id","AddMenu","trigger","useUser","loggedIn","style","marginTop","locales","_","en","de","es","pt","fr","it","nl","da","sv","nb","fi","se","mt","pl","ru","bg","tr","ar","el","ro","sl","localesArray","Object","entries","nativeName","defaultOptions","keys","LocaleSelect","defaultValue","onChange","options","undefined","length","useState","changedLocale","setChangedLocale","handleLocaleChange","newLocale","triggerProps","isOpen","margin","flexShrink","width","textAlign","path","mdiTranslate","toUpperCase","marginLeft","lineHeight","verticalAlign","paperProps","sx","maxHeight","padding","filter","includes","selected","useArchiveBlock","_id","archive","archiveBlock_Mutation","unarchiveBlock_Mutation","SubMenu","disabled","parentMenuIsOpen","label","header","MenuListProps","position","onOpen","children","triggerRef","useRef","isSubMenuOpen","setIsSubMenuOpen","open","toggleSubmenu","newOpen","closeSubmenu","MenuItem","ref","display","justifyContent","ArrowRight","marginRight","Menu","pointerEvents","anchorEl","current","anchorOrigin","vertical","horizontal","transformOrigin","autoFocus","disableAutoFocus","disableEnforceFocus","onClose","maxWidth","overflow","background","color","ListSubheader","whiteSpace","backgroundColor","Divider","opacity","ListItemIcon","Close","Localized","typeIcons","defaultTypeOptions","colorOptions","default","yellow","green","red","blue","colorOptionsKeys","getColor","renderedColor","getBlockColor","properties","withLocalization","onToogle","saveType","saveProperty","typeOptions","onRemoveRow","addRowBefore","onArchivedToggle","onReloadContext","userroles","computed","active","text_style","text_decorations","roles","canEdit","archived","setArchived","archiveBlock","mutationFunction","useMutation","navigate","useNavigate","createChildBlock","newChildBlockId","moveBlock_Mutation","movingBlockId","newParentId","newIndex","toggleArchiveBlock","newArchived","toggleActive","metadata","toggleTextDecoration","thisDecoration","newTextDecorations","Set","decoration","push","PopoverMenu","height","typeName","marginBottom","thisColor","placeholder","onBlur","e","target","value","thisStyle","Add","VisibilityOff","Visibility","ListItemText","primary","secondary","Unarchive","Archive","component","Link","to","ListItem","paddingTop","paddingBottom","modified","replace","module","exports","treeWalker","getViewportHeight","Math","max","document","documentElement","clientHeight","window","innerHeight","treeRoots","stack","treeRootsSorted","sort","b","europaIndex","findIndex","root","slice","unshift","nestingLevel","node","f","pop","isLeaf","childrenSorted","BlockRow","index","toggleOpenById","refetchData","showBlockMenu","blockMenuIsOpen","setBlockMenuIsOpen","onBlockMenuToogle","newValue","toggleOpen","force","rowContent","ViewerAuto","dragable","size","flexGrow","classes","blockRowActions","BlockMenu","props","inset","alignItems","flexDirection","minWidth","blockRow","fakeHover","getFilteredTypes","BlockTree","scrollContainer","outerTreeRef","innerTreeRef","treeRef","outerHeight","setOuterHeight","bottomMargin","setBottomMargin","nodes","setNodes","openById","setOpenById","treeNodes","setTreeNodes","treeNodesFiltered","setTreeNodesFiltered","searchString","setSearchString","prevFetchArguments","onlyShowWithEditPermissions","setOnlyShowWithEditPermissions","setTypes","filteredTypes","viewportHeight","setHeight","useEffect","timeoutId","resizeListener","clearTimeout","addEventListener","removeEventListener","useViewportHeight","updateHeight","outerBounds","getBoundingClientRect","top","fullHeight","isNaN","newHeight","min","useScrollPosition","updateTree","defaultOpenState","parentBlock","parent","find","n","buildTree","flatTree","walker","done","next","new_done","getFlatTree","loadBlocks","useLoadBlocks","loadedBlocks","filtered","searchStringLower","toLowerCase","showNode","translations","translation","slug","smallestNestingLevel","currentNestingLevel","handleSearch","event","toggleType","type2toggle","newTypes","values","every","refetchDataWithFilter","row","FilterList","oldArchived","oldOnlyShowWithEditPermissions","disableWidth","itemData","itemCount","innerRef","itemSize","overflowY","overflowX","itemKey","fontWeight","BlocksLoader","slugs","mountedRef","blocks","setBlocks","query","getBlocks_Query","errors","Error","join","SidebarContent","mounted","userLocales","showBlockTree","setShowBlockTree","efficientSetShowBlockTree","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","debounce","toggleSidebar","useSidebarContext","matchesStartpage","useMatch","gottenBlock","scrollContainerRef","newEvent","CustomEvent","detail","locale","bubbles","cancelable","dispatchEvent","ui_locales","choose_locale_information_string","headerBar","MenuOpen","MenuList","href","domains","backend","encodeURIComponent","location","toString","Logout","Login","Boolean","marginInlineEnd"],"mappings":"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","file":"static/js/8.a2dfd6a4.chunk.js","sourcesContent":["import { useCallback } from 'react'\n\nimport { useLocalization } from '../fluent/Localized.js'\n\nimport { useApolloClient } from '@apollo/client'\nimport { saveBlock_Mutation } from '../graphql/mutations.js'\n\nimport { useSnackbar } from 'notistack'\n\nfunction removeProperty(obj, prop) {\n  // remove property from objects, arrays and sub-objects\n\n  obj = JSON.parse(JSON.stringify(obj)) // clone object to make everything mutable\n\n  if (obj.hasOwnProperty(prop)) {\n    delete obj[prop]\n  }\n  for (const i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (typeof obj[i] == 'object' && obj[i] !== null) {\n        removeProperty(obj[i], prop)\n      }\n    }\n  }\n\n  return obj\n}\n\nfunction useSaveBlock() {\n  const { getString } = useLocalization()\n\n  const apollo_client = useApolloClient()\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n\n  const handleSaveBlock = useCallback((initialBlock) => {\n    return new Promise(final_resolve => {\n      let snackbarKey = null\n\n      let newBlock = {...initialBlock}\n      newBlock = removeProperty(newBlock, '__typename')\n      if (newBlock.hasOwnProperty('content') && Array.isArray(newBlock.content)) {\n        newBlock.content = newBlock.content.map(contentConfig => ({\n          blockId: contentConfig.blockId,\n        }))\n      }\n\n      const loadingDataPromise = new Promise(resolve => {\n        apollo_client.mutate({\n          mutation: saveBlock_Mutation,\n          variables: {\n            block: newBlock\n          },\n        })\n          .then(async ({ data }) => {\n            resolve('got-data')\n\n            if (snackbarKey !== null) {\n              closeSnackbar(snackbarKey)\n            }\n\n            if (typeof data.error === 'string') {\n              if (data.error === 'no_edit_permission') {\n                enqueueSnackbar(getString('path_editor_edit_permission_error'), {\n                  variant: 'error',\n                  preventDuplicate: true,\n                  autoHideDuration: 2000,\n                })\n              } else {\n                enqueueSnackbar('' + data.error, {\n                  variant: 'error',\n                  preventDuplicate: true,\n                  autoHideDuration: 2000,\n                })\n              }\n            } else {\n              const block = data.saveBlock\n\n              final_resolve(block)\n\n              enqueueSnackbar(getString('path_editor_status_saved'), {\n                variant: 'success',\n                preventDuplicate: false,\n                autoHideDuration: 2000,\n              })\n            }\n          })\n          .catch(async error => {\n            console.error(error)\n            resolve('got-error')\n\n            if (snackbarKey !== null) {\n              closeSnackbar(snackbarKey)\n            }\n\n            enqueueSnackbar(getString('path_editor_status_error_while_saving', {\n              error: error.message,\n            }), {\n              variant: 'error',\n              preventDuplicate: true,\n              autoHideDuration: 2000,\n            })\n          })\n      })\n\n      // Show a loading-info-snackbar if loading the data takes too long.\n      Promise.race([\n        new Promise(resolve => {\n          setTimeout(() => {\n            resolve('show-loading')\n          }, 300)\n        }),\n        loadingDataPromise,\n      ])\n        .then(response => {\n          if (response === 'show-loading') {\n            snackbarKey = enqueueSnackbar(getString('path_editor_status_started_saving'), {\n              persist: true,\n              preventDuplicate: true,\n            })\n          }\n        })\n        .catch(console.error)\n\n    })\n  }, [\n    enqueueSnackbar,\n    closeSnackbar,\n    apollo_client,\n    getString,\n  ])\n\n  return handleSaveBlock\n}\n\nexport default useSaveBlock\n","\nimport {\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material'\n\nimport {\n  InsertDriveFileSharp as PageIcon,\n  LinkSharp as RedirectIcon,\n  PersonSharp as PersonIcon,\n  Crop75Sharp as ButtonIcon,\n  NotesSharp as TextIcon,\n  Remove as DividerIcon,\n  CodeSharp as CodeIcon,\n  CheckBoxSharp as CheckboxIcon,\n  // EditSharp as EditIcon,\n  ImageSharp as ImageIcon,\n} from '@mui/icons-material'\n\nimport useUser from '../../hooks/useUser.js'\nimport PopoverMenu from '../PopoverMenu.js'\nimport { Localized } from '../../fluent/Localized.js'\n\nconst blockTypeIcons = {\n  button: <ButtonIcon />,\n  text: <TextIcon />,\n  code: <CodeIcon />,\n  divider: <DividerIcon />,\n  checkbox: <CheckboxIcon />,\n  page: <PageIcon />,\n  person: <PersonIcon />,\n  redirect: <RedirectIcon />,\n  image: <ImageIcon />,\n}\n\nconst default_types = [\n  'page',\n  'redirect',\n]\n\nfunction AddMenuContent({ createBlock, types, close = null }) {\n  if (!types || !Array.isArray(types)) {\n    types = default_types\n  }\n\n  return <>\n    {\n      types\n        .map(type => (\n          <MenuItem className=\"roundMenuItem\" key={type} onClick={() => createBlock({ type, close })}>\n            <ListItemIcon>\n              {blockTypeIcons[type]}\n            </ListItemIcon>\n            <ListItemText>\n              <Localized id={'block_menu_type_label_'+type} />\n            </ListItemText>\n          </MenuItem>\n        ))\n    }\n  </>\n}\n\nfunction AddMenu ({ trigger, createBlock, types }) {\n  const { loggedIn } = useUser()\n\n  if (loggedIn) {\n    return <PopoverMenu trigger={trigger}>\n      {\n        ({ close }) => <>\n          <div style={{ marginTop: '8px' }}></div>\n          <AddMenuContent createBlock={createBlock} types={types} close={close} />\n        </>\n      }\n    </PopoverMenu>\n  }\n\n  return null\n}\n\nexport {\n  AddMenuContent,\n  AddMenu as default,\n}\n","import { useState, useCallback } from 'react'\n\nimport {\n  MenuItem,\n} from '@mui/material'\n\nimport PopoverMenu from '../PopoverMenu.js'\n\nimport MdiIcon from '@mdi/react'\nimport {\n  mdiTranslate,\n} from '@mdi/js'\n\nconst locales = {\n  _: '??',\n  en: 'English',\n  de: 'Deutsch',\n  es: 'Español',\n  pt: 'Português',\n  fr: 'Français',\n  it: 'Italiano',\n  nl: 'Nederlands', // Dutch\n  da: 'Dansk', // Danish\n  sv: 'Svenska', // Swedish\n  nb: 'Norsk bokmål', // Norwegian\n  fi: 'Suomi', // Finish\n  se: 'Davvisámegiella (Northern Sami)', // Northern Sami\n  mt: 'Malti', // Maltese\n  pl: 'Język polski', // Polish\n  ru: 'русский язык', // Russian\n  bg: 'български език', // Bulgarian\n  tr: 'Türkçe',\n  ar: 'اَلْعَرَبِيَّة', // Arabic\n  el: 'ελληνικά', // Greek\n  ro: 'limba română', // Romanian\n  sl: 'slovenščina', // Slovenian\n  // uk: 'украї́нська мо́ва', // Ukrainian\n  // cy: 'Cymraeg', // Welsh\n}\n\nconst localesArray = Object.entries(locales)\n.map(([code, nativeName]) => ({code, nativeName}))\n\nconst defaultOptions = Object.keys(locales)\n\nfunction LocaleSelect({\n  defaultValue,\n  onChange,\n  options = defaultOptions,\n}) {\n  if (\n    defaultValue === null\n    || defaultValue === undefined\n    || defaultValue === ''\n    || locales.hasOwnProperty(defaultValue) === false\n  ) {\n    if (options.length > 0) {\n      defaultValue = options[0]\n    } else {\n      defaultValue = '_'\n    }\n  }\n\n  const [changedLocale, setChangedLocale] = useState(defaultValue)\n\n  const handleLocaleChange = useCallback(newLocale => {\n    // TODO: get best match with fluent\n\n    setChangedLocale(newLocale)\n    \n    if (newLocale === '_') {\n      newLocale = null\n    }\n\n    if (onChange) {\n      onChange(newLocale)\n    }\n  }, [ setChangedLocale, onChange ])\n\n  return (\n    <PopoverMenu\n      trigger={(triggerProps, { isOpen }) => (\n        <button\n          {...triggerProps}\n          className=\"default hasIcon\"\n          style={{\n            margin: '0',\n            flexShrink: '0',\n          }}\n        >\n          <span style={{ width: '100%', textAlign: 'start' }}>\n          {\n            changedLocale === '_'\n            ? <MdiIcon\n              path={mdiTranslate}\n              className=\"icon\"\n            />\n            : changedLocale.toUpperCase()\n          }\n          </span>\n          <span style={{\n            marginLeft: 'var(--basis)',\n            lineHeight: '1',\n            verticalAlign: 'text-top',\n          }}>\n            { isOpen ? '▴' : '▾' }\n          </span>\n        </button>\n      )}\n      paperProps={{\n        sx: {\n          maxHeight: '300px',\n        }\n      }}\n    >\n      {({ close }) => (\n        <div style={{\n          padding: 'var(--basis_x2) 0',\n        }}>\n          {\n            localesArray\n            .filter(({ code }) => options.includes(code))\n            .map(({ code, nativeName }) => (\n              <MenuItem\n                key={code}\n                onClick={() => {\n                  handleLocaleChange(code)\n                  close()\n                }}\n                className=\"roundMenuItem\"\n                selected={code === changedLocale}\n              >\n                {code === '_' ? nativeName : `${code.toUpperCase()} — ${nativeName}`}\n              </MenuItem>\n            ))\n          }\n        </div>\n      )}\n    </PopoverMenu>    \n  )\n}\n\nexport default LocaleSelect\n","import { useCallback } from 'react'\n\nimport { useApolloClient } from '@apollo/client'\nimport { archiveBlock_Mutation, unarchiveBlock_Mutation } from '../graphql/mutations.js'\n\nfunction useArchiveBlock() {\n  const apollo_client = useApolloClient()\n\n  const handleArchiveBlock = useCallback(({ _id, archive }) => {\n    return apollo_client.mutate({\n      mutation: archive ? archiveBlock_Mutation : unarchiveBlock_Mutation,\n      variables: { _id }\n    })\n  }, [ apollo_client ])\n\n  return handleArchiveBlock\n}\n\nexport default useArchiveBlock\n","import { useRef, useState, useCallback } from 'react'\n\nimport {\n  Divider,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListSubheader,\n} from '@mui/material'\n\nimport {\n  Close as CloseIcon,\n  ArrowRight as ArrowRightIcon,\n} from '@mui/icons-material'\n\nimport { Localized } from '../fluent/Localized.js'\n\n// INFO: Some code is copied from: https://github.com/azmenak/material-ui-nested-menu-item/blob/master/src/index.tsx\n\nexport default function SubMenu ({\n  disabled = false,\n  parentMenuIsOpen = true,\n  label = '',\n  triggerProps = {},\n  header = null,\n  MenuListProps = {},\n  position = 'right',\n  onOpen = () => {},\n  children,\n}) {\n  const triggerRef = useRef(null)\n  const [isSubMenuOpen, setIsSubMenuOpen] = useState(false)\n  const open = isSubMenuOpen && parentMenuIsOpen\n\n  const toggleSubmenu = useCallback(() => {\n    if (disabled !== true) {\n      const newOpen = !open\n      setIsSubMenuOpen(newOpen)\n      if (newOpen === true) {\n        onOpen()\n      }\n    }\n  }, [ setIsSubMenuOpen, open, onOpen, disabled ])\n\n  const closeSubmenu = useCallback(() => {\n    setIsSubMenuOpen(false)\n  }, [ setIsSubMenuOpen ])\n\n  return <>\n    <MenuItem\n      {...triggerProps}\n\n      disabled={disabled}\n\n      ref={triggerRef}\n      onClick={toggleSubmenu}\n      className=\"roundMenuItem\"\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        ...triggerProps.style,\n      }}\n    >\n      <div style={{ display: 'flex' }}>\n        {label}\n      </div>\n      <ArrowRightIcon style={{ marginRight: '-10px' }} />\n    </MenuItem>\n    <Menu\n      // Set pointer events to 'none' to prevent the invisible Popover div from capturing events for clicks and hovers\n      style={{ pointerEvents: 'none' }}\n      anchorEl={triggerRef.current}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: (position === 'right' ? 'right' : 'left'),\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: (position === 'right' ? 'left' : 'right'),\n      }}\n      open={open}\n      autoFocus={false}\n      disableAutoFocus\n      disableEnforceFocus\n      onClose={closeSubmenu}\n      sx={{\n        marginTop: '-8px', // align with parent menu\n      }}\n      MenuListProps={{\n        ...MenuListProps,\n        sx: {\n          maxWidth: 380,\n          maxHeight: 'calc(100vh - 32px)',\n          overflow: 'auto',\n          background: 'var(--background-contrast)',\n          color: 'var(--on-background)',\n          ...MenuListProps.sx,\n        },\n      }}\n    >\n      <div style={{pointerEvents: 'auto'}}>\n        {\n          header !== null\n            ? <ListSubheader\n                style={{\n                  whiteSpace: 'nowrap',\n                  lineHeight: '1',\n                  margin: '0',\n                  padding: '4px 16px 12px',\n                  backgroundColor: 'var(--background-contrast)',\n                  color: 'var(--on-background)',\n                }}\n              >\n                {header}\n              </ListSubheader>\n            : null\n        }\n\n        {children}\n\n        <Divider style={{opacity: 0.2}} />\n\n        <MenuItem className=\"roundMenuItem\" style={{marginTop:'8px'}} onClick={closeSubmenu}>\n          <ListItemIcon>\n            <CloseIcon />\n          </ListItemIcon>\n          <Localized id=\"block_menu_close_menu\" />\n        </MenuItem>\n      </div>\n    </Menu>\n  </>\n}\n","import { useCallback, useState } from 'react'\n\nimport {\n  Link,\n  useNavigate,\n} from 'react-router-dom'\n\nimport {\n  MenuItem,\n  Divider,\n  ListItemIcon,\n  ListItemText,\n  ListItem,\n} from '@mui/material'\n\nimport {\n  Archive as ArchiveIcon,\n  Unarchive as UnarchiveIcon,\n\n  Visibility as VisibilityIcon,\n  VisibilityOff as VisibilityOffIcon,\n  // Delete as DeleteIcon,\n  // VerticalAlignTop as VerticalAlignTopIcon,\n  // VerticalAlignBottom as VerticalAlignBottomIcon,\n  Add as AddIcon,\n  RepeatSharp as RepeatIcon,\n  // RemoveCircleSharp as RemoveCircleIcon,\n\n  InsertDriveFileSharp as PageIcon,\n  LinkSharp as RedirectIcon,\n  // PersonSharp as PersonIcon,\n  Crop75Sharp as ButtonIcon,\n  NotesSharp as TextIcon,\n  ImageSharp as ImageIcon,\n  // CodeSharp as CodeIcon,\n  Remove as DividerIcon,\n  // CheckBox as CheckboxIcon,\n\n  PreviewSharp as ViewIcon,\n  EditSharp as EditIcon,\n\n  FormatSizeSharp as TextStyleIcon,\n  TextFormatSharp as TextDecorationsIcon,\n  PaletteSharp as ColorIcon,\n  CircleSharp as ColorSwatchIcon,\n\n  CheckSharp as SelectedIcon,\n} from '@mui/icons-material'\n\nimport { Localized, withLocalization } from '../../fluent/Localized.js'\nimport { getBlockColor } from '../../functions.js'\n\nimport useArchiveBlock from '../../hooks/useArchiveBlock.js'\nimport useUser from '../../hooks/useUser.js'\n\nimport PopoverMenu from '../PopoverMenu.js'\nimport SubMenu from '../SubMenu.js'\nimport { AddMenuContent } from './AddMenu.js'\n\nimport { saveBlock_Mutation, moveBlock_Mutation } from '../../graphql/mutations.js'\nimport useMutation from '../../hooks/useMutation.js'\n\nconst typeIcons = {\n  button: <ButtonIcon />,\n  text: <TextIcon />,\n  image: <ImageIcon />,\n  // checkbox: <CheckboxIcon />,\n  // code: <CodeIcon />,\n  divider: <DividerIcon />,\n  page: <PageIcon />,\n  redirect: <RedirectIcon />,\n}\n\nconst defaultTypeOptions = [\n  'button',\n  'text',\n  'image',\n  // 'checkbox',\n  // 'code',\n  'divider',\n  'page',\n  'redirect',\n]\n\nconst colorOptions = {\n  default: 'var(--on-background)',\n  yellow: 'var(--yellow)',\n  green: 'var(--green)',\n  red: 'var(--red)',\n  blue: 'var(--blue)',\n}\nconst colorOptionsKeys = Object.keys(colorOptions)\nfunction getColor (color) {\n  if (colorOptions.hasOwnProperty(color)) {\n    return colorOptions[color]\n  } else {\n    const {\n      color: renderedColor\n    } = getBlockColor({\n      properties: {\n        color,\n      },\n    })\n\n    if (renderedColor) {\n      return renderedColor\n    }\n  }\n  \n  return color\n}\n\nfunction BlockMenu ({\n  block = {},\n  getString,\n\n  trigger,\n  onToogle,\n\n  saveType,\n  saveProperty,\n  typeOptions = defaultTypeOptions,\n\n  onRemoveRow = null,\n  addRowBefore = null,\n  // addRowAfter = null,\n  onArchivedToggle = null,\n  onReloadContext = null,\n}) {\n  const { loggedIn, userroles } = useUser()\n\n  if (\n    !(\n      block.hasOwnProperty('properties')\n      && typeof block.properties === 'object'\n      && block.properties !== null\n      && !Array.isArray(block.properties)\n    )\n  ) {\n    block.properties = {}\n  }\n\n  const { _id = '', type = '', properties = {}, computed = {} } = block\n  let {\n    active = true,\n    text_style = null,\n    text_decorations = [],\n    color = null,\n  } = properties\n\n  if (!Array.isArray(text_decorations)) {\n    text_decorations = []\n  }\n\n  const {\n    roles = [],\n  } = (computed === null ? {} : computed)\n  const canEdit = loggedIn && (userroles.includes('admin') || roles.includes('owner') || roles.includes('editor'))\n\n  const [archived, setArchived] = useState(properties.archived === true)\n  const archiveBlock = useArchiveBlock()\n\n  // const handleAddRowBefore = useCallback(() => {\n  //\n  //   // const newBlock = {\n  //   //   type,\n  //   // }\n  //\n  //   const newBlockId = ''\n  //\n  //   addRowBefore({\n  //     blockId: newBlockId,\n  //   })\n  // }, [ addRowBefore ])\n\n\n  const mutationFunction = useMutation()\n  const navigate = useNavigate()\n  const createChildBlock = useCallback(async ({ type }) => {\n    try {\n      if (typeof type === 'string' && type.length > 0) {\n        const { saveBlock: newChildBlockId } = await mutationFunction({\n          mutation: saveBlock_Mutation,\n          variables: {\n            block: { type },\n          },\n        })\n\n        if (newChildBlockId !== null) {\n          await mutationFunction({\n            mutation: moveBlock_Mutation,\n            variables: {\n              movingBlockId: newChildBlockId,\n              newParentId: _id,\n              newIndex: 0,\n            },\n          })\n          if (typeof onReloadContext === 'function') {\n            onReloadContext()\n          }\n          navigate(`/${newChildBlockId}/edit`)\n        }\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [mutationFunction, _id, onReloadContext, navigate])\n\n  const toggleArchiveBlock = useCallback(() => {\n    const newArchived = !archived\n    archiveBlock({ _id: block._id, archive: newArchived })\n      .then(() => {\n        setArchived(newArchived)\n        if (typeof onArchivedToggle === 'function') {\n          onArchivedToggle(newArchived)\n        }\n        if (typeof onReloadContext === 'function') {\n          onReloadContext()\n        }\n      })\n      .catch(console.error)\n  }, [archiveBlock, setArchived, archived, block, onArchivedToggle, onReloadContext])\n\n  const toggleActive = useCallback(() => {\n    if (typeof saveProperty === 'function') {\n      saveProperty('active', !active)\n    }\n  }, [active, saveProperty])\n\n  const metadata = block.metadata || {}\n\n  let {\n    color: renderedColor\n  } = getBlockColor(block)\n\n  if (!renderedColor) {\n    renderedColor = 'transparent'\n  }\n\n  const toggleTextDecoration = useCallback(thisDecoration => {\n    let newTextDecorations = [...new Set(text_decorations)]\n\n    if (text_decorations.includes(thisDecoration)) {\n      newTextDecorations = newTextDecorations.filter(decoration => decoration !== thisDecoration)\n    } else {\n      newTextDecorations.push(thisDecoration)\n    }\n\n    saveProperty('text_decorations', newTextDecorations)\n  }, [text_decorations, saveProperty])\n\n  return <PopoverMenu\n    trigger={trigger}\n    onToogle={onToogle}\n  >\n    {({ open }) => (<div>\n\n      <div style={{ height: '8px' }}></div>\n\n      {\n        (\n          canEdit\n          && typeof saveType === 'function'\n          && Array.isArray(typeOptions)\n          && typeOptions.length > 0\n        )\n        && <>\n          <SubMenu\n            disabled={type === 'person'}\n            parentMenuIsOpen={open}\n            label={<>\n              <ListItemIcon>\n                <RepeatIcon />\n              </ListItemIcon>\n              <Localized id=\"block_menu_choose_type_label\" />\n            </>}\n            header={<Localized id=\"block_menu_choose_type_label\" />}\n          >\n            {\n              typeOptions\n              .map(typeName => (\n                <MenuItem\n                  key={typeName}\n                  selected={typeName === type}\n                  onClick={() => saveType(typeName)}\n                  className=\"roundMenuItem\"\n                >\n                  <ListItemIcon>\n                    {typeIcons[typeName]}\n                  </ListItemIcon>\n                  {getString(`block_menu_type_label_${typeName}`, typeName)}\n                </MenuItem>\n              ))\n            }\n          </SubMenu>\n          <Divider style={{ opacity: 0.2, marginTop: '8px', marginBottom: '8px' }} />\n        </>\n      }\n\n      {\n        (\n          canEdit\n          && typeof saveProperty === 'function'\n        )\n        && <SubMenu\n          parentMenuIsOpen={open}\n          label={<>\n            <ListItemIcon>\n              <ColorIcon\n                style={{\n                  color: getColor(color),\n                }}\n              />\n            </ListItemIcon>\n            <Localized id=\"block_menu_choose_color_label\" />\n          </>}\n          header={<Localized id=\"block_menu_choose_color_label\" />}\n        >\n          {\n            colorOptionsKeys\n            .map(thisColor => (\n              <MenuItem\n                key={thisColor}\n                selected={thisColor === 'default' ? color === null : color === thisColor}\n                onClick={() => saveProperty('color', thisColor === 'default' ? null : thisColor)}\n                className=\"roundMenuItem\"\n              >\n                <ListItemIcon>\n                  <ColorSwatchIcon\n                    style={{\n                      color: getColor(thisColor),\n                    }}\n                  />\n                </ListItemIcon>\n                {thisColor}\n              </MenuItem>\n            ))\n          }\n\n          <MenuItem\n            className=\"roundMenuItem\"\n            selected={color !== null && !colorOptionsKeys.includes(color)}\n          >\n            <ListItemIcon>\n              <ColorSwatchIcon\n                style={{\n                  color: renderedColor,\n                }}\n              />\n            </ListItemIcon>\n            <input\n              key={colorOptionsKeys.includes(color) ? color : 'custom'}\n              type=\"text\"\n              placeholder=\"#FFFFFF\"\n              defaultValue={color}\n              onBlur={e => saveProperty('color', e.target.value)}\n              style={{\n                width: '160px',\n                margin: '0 calc(-1 * var(--basis)) 0 0',\n              }}\n            />\n          </MenuItem>\n        </SubMenu>\n      }\n\n      {\n        (\n          canEdit\n          && typeof saveProperty === 'function'\n          && type === 'text'\n        )\n        && <SubMenu\n          parentMenuIsOpen={open}\n          label={<>\n            <ListItemIcon>\n              <TextStyleIcon />\n            </ListItemIcon>\n            <Localized id=\"block_menu_choose_text_style_label\" />\n          </>}\n          header={<Localized id=\"block_menu_choose_text_style_label\" />}\n        >\n          {\n            [\n              // 'h1', // title\n              'h2', // heading\n              'h3', // subheading\n              'body', // body text. This is saved as null.\n              // 'caption',\n            ]\n            .map(thisStyle => (\n              <MenuItem\n                key={thisStyle}\n                selected={thisStyle === 'body' ? text_style === null : text_style === thisStyle}\n                onClick={() => saveProperty('text_style', thisStyle === 'body' ? null : thisStyle)}\n                className=\"roundMenuItem\"\n              >\n                {getString(`block_menu_text_style_label_${thisStyle}`, thisStyle)}\n              </MenuItem>\n            ))\n          }\n        </SubMenu>\n      }\n\n      {\n        (\n          canEdit\n          && typeof saveProperty === 'function'\n          && type === 'text'\n        )\n        && <SubMenu\n          parentMenuIsOpen={open}\n          label={<>\n            <ListItemIcon>\n              <TextDecorationsIcon />\n            </ListItemIcon>\n            <Localized id=\"block_menu_choose_text_decorations_label\" />\n          </>}\n          header={<Localized id=\"block_menu_choose_text_decorations_label\" />}\n        >\n          {\n            [\n              'checkbox',\n            ]\n              .map(thisDecoration => {\n                const selected = text_decorations.includes(thisDecoration)\n                return <MenuItem\n                  key={thisDecoration}\n                  selected={selected}\n                  onClick={() => toggleTextDecoration(thisDecoration)}\n                  className=\"roundMenuItem\"\n                >\n                  <ListItemIcon>\n                    {\n                      selected\n                        ? <SelectedIcon />\n                        : <SelectedIcon style={{ opacity: 0 }} />\n                    }\n                  </ListItemIcon>\n                  {getString(`block_menu_text_decoration_label_${thisDecoration}`, thisDecoration)}\n                </MenuItem>\n              })\n          }\n        </SubMenu>\n      }\n\n      {\n        (\n          canEdit\n          && typeof saveProperty === 'function'\n        )\n        && <Divider style={{opacity: 0.2, marginTop:'8px', marginBottom:'8px'}} />\n      }\n\n      {/*\n        addRowBefore\n        && <MenuItem onClick={handleAddRowBefore}>\n          <ListItemIcon>\n            <VerticalAlignTopIcon />\n          </ListItemIcon>\n          <Localized id=\"block_menu_add_before\" />\n        </MenuItem>\n      */}\n\n      {/*\n        addRowAfter\n        && <MenuItem onClick={addRowAfter}>\n          <ListItemIcon>\n            <VerticalAlignBottomIcon />\n          </ListItemIcon>\n          <Localized id=\"block_menu_add_after\" />\n        </MenuItem>\n      */}\n\n      {\n        canEdit\n        && <SubMenu\n          parentMenuIsOpen={open}\n          label={<>\n            <ListItemIcon>\n              <AddIcon />\n            </ListItemIcon>\n            <Localized id=\"block_menu_create_child_block\" />\n          </>}\n        >\n          <AddMenuContent createBlock={createChildBlock} />\n        </SubMenu>\n      }\n\n      {\n        (\n          canEdit\n          && typeof saveProperty === 'function'\n        )\n        && <MenuItem className=\"roundMenuItem\" onClick={toggleActive}>\n          <ListItemIcon>\n            {\n              active\n              ? <VisibilityOffIcon />\n              : <VisibilityIcon />\n            }\n          </ListItemIcon>\n\n          <ListItemText\n            primary={<span>{\n              active\n              ? <Localized id=\"block_menu_hide\" />\n              : <Localized id=\"block_menu_show\" />\n            }</span>}\n            secondary={<span style={{ whiteSpace: 'normal' }}><Localized id=\"block_menu_hide_show_description\" /></span>}\n          />\n          \n        </MenuItem>\n      }\n\n      {\n        (\n          canEdit\n          && typeof onArchivedToggle === 'function'\n        )\n        && <MenuItem className=\"roundMenuItem\" onClick={toggleArchiveBlock}>\n          <ListItemIcon>\n            {\n              archived === true\n              ? <UnarchiveIcon />\n              : <ArchiveIcon />\n            }\n          </ListItemIcon>\n          {\n            archived === true\n            ? <Localized id=\"block_menu_unarchive\" />\n            : <Localized id=\"block_menu_archive\" />\n          }\n        </MenuItem>\n      }\n            \n      {\n        canEdit\n        && <Divider style={{ opacity: 0.2, marginTop: '8px', marginBottom: '8px' }} />\n      }\n\n      {\n        (typeof _id === 'string' && _id !== '')\n        && <>\n          <MenuItem component={Link} to={`/${_id}/view`} className=\"roundMenuItem\" style={{ marginTop: '8px' }}>\n            <ListItemIcon>\n              <EditIcon />\n            </ListItemIcon>\n            <Localized id=\"view_block\" />\n          </MenuItem>\n\n          {\n            canEdit\n            && <MenuItem component={Link} to={`/${_id}/edit`} className=\"roundMenuItem\">\n              <ListItemIcon>\n                <ViewIcon />\n              </ListItemIcon>\n              <Localized id=\"edit_block\" />\n            </MenuItem>\n          }\n\n          <Divider style={{opacity: 0.2, marginTop:'8px', marginBottom:'8px' }} />\n        </>\n      }\n\n      {/*\n      <ListItem sx={{ paddingTop: '0', paddingBottom: '0' }}>\n        <ListItemText\n          primary={<Localized id=\"block_menu_info_created\" />}\n          secondary={(metadata.created || '').replace(/[TZ]/g, ' ')}\n        />\n      </ListItem>\n      */}\n      <ListItem sx={{ paddingTop: '0', paddingBottom: '0' }}>\n        <ListItemText\n          primary={<span><Localized id=\"block_menu_info_modified\" /></span>}\n          secondary={<span>{(metadata.modified || '').replace(/[TZ]/g, ' ')}</span>}\n        />\n      </ListItem>\n      <ListItem sx={{ paddingTop: '0', paddingBottom: '0' }}>\n        <ListItemText\n          primary={<span><Localized id=\"block_menu_info_id\" /></span>}\n          secondary={<span>{_id}</span>}\n        />\n      </ListItem>\n\n    </div>)}\n  </PopoverMenu>\n}\n\nexport default withLocalization(BlockMenu)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"SidebarContent_content__RAi8X\",\"header\":\"SidebarContent_header__1pYRG\",\"headerBar\":\"SidebarContent_headerBar__2xkje\",\"scrollContainer\":\"SidebarContent_scrollContainer__2eS9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockRow\":\"BlockTree_blockRow__80Vim\",\"blockRowActions\":\"BlockTree_blockRowActions__GDOGf\",\"fakeHover\":\"BlockTree_fakeHover__TKaWl\"};","import React, { useCallback, useEffect, useState, useRef } from 'react'\n// import { useLayoutEffect } from 'react'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport { FixedSizeList } from 'react-window'\n\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position'\n\nimport BlockMenu from './edit/BlockMenu.js'\nimport ViewerAuto from './view/ViewerAuto.js'\n\nimport { Localized, useLocalization } from '../fluent/Localized.js'\n\nimport classes from './BlockTree.module.css'\n\nimport {\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from '@mui/material'\n\nimport {\n  MoreHorizSharp as BlockMenuIcon,\n  ArrowDropDownSharp as ExpandLessIcon,\n  ArrowRightSharp as ExpandMoreIcon,\n\n  Replay as RequeryIcon,\n  FilterList as FilterListIcon,\n  Archive as ArchiveIcon,\n\n  // Search as SearchIcon,\n\n  InsertDriveFileSharp as PageIcon,\n  // AutoAwesomeSharp as ActionIcon,\n  LinkSharp as RedirectIcon,\n  PersonSharp as PersonIcon,\n  // Crop75Sharp as ButtonIcon,\n  // TitleSharp as HeadlineIcon,\n  // NotesSharp as TextIcon,\n  // Remove as DividerIcon,\n  EditSharp as EditIcon,\n} from '@mui/icons-material'\n\nimport useLoadBlocks from '../hooks/useLoadBlocks.js'\nimport useUser from '../hooks/useUser.js'\n\nimport PopoverMenu from './PopoverMenu.js'\n\nconst blockTypeIcons = {\n  page: <PageIcon />,\n  person: <PersonIcon />,\n  redirect: <RedirectIcon />,\n}\n\n\nconst minItemSize = 43\n\n// const getWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n// const getHeight = () => window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n\n// const getViewportWidth = () => Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\nconst getViewportHeight = () => Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)\n\nfunction useViewportHeight() {\n  // save current window width in the state object\n  let [height, setHeight] = useState(getViewportHeight())\n\n  // in this case useEffect will execute only once because\n  // it does not have any dependencies.\n  useEffect(() => {\n    // timeoutId for debounce mechanism\n    let timeoutId = null\n    const resizeListener = () => {\n      // prevent execution of previous setTimeout\n      clearTimeout(timeoutId)\n      // change width from the state object after 150 milliseconds\n      timeoutId = setTimeout(() => {\n        setHeight(getViewportHeight())\n      }, 150)\n    }\n    // set resize listener\n    window.addEventListener('resize', resizeListener)\n\n    // clean up function\n    return () => {\n      // remove resize listener\n      window.removeEventListener('resize', resizeListener)\n    }\n  }, [])\n\n  return { height }\n}\n\nfunction buildTree(nodes){\n  // Build a tree from the blocks.\n  // Where each block has a parentId property.\n  // Each tree item should have the block itself, a list of children and a nesting level.\n  \n  const treeRoots = []\n\n  for (let node of nodes) {\n    let parentBlock = null\n    if (node.block.parent) {\n      parentBlock = nodes.find(n => n._id === node.block.parent)\n      // if (!parentBlock) {\n      //   console.error('Invalid parent:')\n      //   console.error('parentBlockt', parentBlock)\n      //   console.error('node.block.parent', node.block.parent)\n      // }\n    }\n\n    if (!parentBlock) {\n      treeRoots.push(node)\n    } else {\n      // If the parentBlock has no children, create the children array.\n      if (!parentBlock.children) {\n        parentBlock.children = []\n      }\n      parentBlock.children.push(node)\n    }\n  }\n\n  return treeRoots\n}\n\nfunction* treeWalker(treeRoots) {\n  const stack = []\n \n  let treeRootsSorted = treeRoots\n    .sort((a, b) => b.block.metadata.modified > a.block.metadata.modified ? 1 : -1)\n\n  // find the index of the root with block._id === '6249c879fcaf12b124914396' (this is the id of volt europa)\n  const europaIndex = treeRootsSorted.findIndex(root => root.block._id === '6249c879fcaf12b124914396') // TODO: make this independet of the id\n\n  // remove the root at index europaIndex\n  if (europaIndex > -1) {\n    treeRootsSorted = [\n      treeRootsSorted[europaIndex],\n      ...treeRootsSorted.slice(0, europaIndex),\n      ...treeRootsSorted.slice(europaIndex + 1)\n    ]\n  }\n      \n  // Remember all the necessary data of the first node in the stack.\n  for (const root of treeRootsSorted) {\n    stack.unshift({\n      nestingLevel: 0,\n      node: root,\n    })\n  }\n \n  // Walk through the tree until we have no nodes available.\n  while (stack.length !== 0) {\n    const {\n      node: {children = [], _id, block, isOpen},\n      nestingLevel,\n    } = stack.pop()\n\n    yield {\n      _id,\n      isLeaf: children.length === 0,\n      isOpen,\n      block,\n      nestingLevel,\n    }\n \n    // Basing on the node openness state we are deciding if we need to render\n    // the child nodes (if they exist).\n    if (children.length !== 0 && isOpen) {\n      // Since it is a stack structure, we need to put nodes we want to render\n      // first to the end of the stack.\n\n      const childrenSorted = children\n        .sort((a, b) => b.block.metadata.modified > a.block.metadata.modified ? 1 : -1)\n\n      for (let i = childrenSorted.length - 1; i >= 0; i--) {\n        stack.push({\n          nestingLevel: nestingLevel + 1,\n          node: childrenSorted[i],\n        });\n      }\n    }\n  }\n}\n\nfunction getFlatTree(treeRoots){\n  const flatTree = []\n\n  const walker = treeWalker(treeRoots)\n\n  let done = false\n  while (!done) {\n    const { done: new_done, value } = walker.next()\n    done = new_done\n    if (!done) {\n      flatTree.push(value)\n    }\n  }\n\n  return flatTree\n}\n\n// const useWindowSize = () => {\n//   let [size, setSize] = useState([0, 0])\n//   useLayoutEffect(() => {\n//     function updateSize() {\n//       setSize([window.innerWidth, window.innerHeight])\n//     }\n//     window.addEventListener(\"resize\", updateSize)\n//     updateSize()\n//     return () => window.removeEventListener(\"resize\", updateSize)\n//   }, [])\n//   return size\n// }\n\n\nconst BlockRow = ({\n  createBlock,\n  index,\n  style,\n  data,\n  toggleOpenById,\n  refetchData,\n  // onSetSize,\n  showBlockMenu = true,\n}) => {\n  const {\n    _id,\n    isLeaf,\n    isOpen,\n    block,\n    nestingLevel,\n  } = data[index]\n\n  // const rootRef = useRef()\n  // const [ windowWidth ] = useWindowSize()\n  // useEffect(() => {\n  //   if (typeof onSetSize === 'function') {\n  //     const height = rootRef.current.getBoundingClientRect().height\n  //     onSetSize(index, height)\n  //   }\n  // }, [ index, onSetSize, windowWidth ])\n\n  const [blockMenuIsOpen, setBlockMenuIsOpen] = useState(false)\n\n  const onBlockMenuToogle = useCallback(newValue => {\n    if (newValue === false) {\n      setTimeout(() => {\n        setBlockMenuIsOpen(newValue)\n      }, 200) // The fade-out animation is 200ms. Only rerender after it, for it not to loose the element.\n    } else {\n      setBlockMenuIsOpen(newValue)\n    }\n  }, [ setBlockMenuIsOpen ])\n\n  const toggleOpen = useCallback(() => {\n    if (typeof toggleOpenById === 'function') {\n      toggleOpenById(_id)\n    }\n  }, [toggleOpenById, _id])\n  \n  const onReloadContext = useCallback(() => {\n    if (typeof refetchData === 'function') {\n      setTimeout(() => {\n        refetchData({ force: true })\n      }, 200) // The fade-out animation is 200ms. Only rerender after it, for it not to loose the element.\n    }\n  }, [ refetchData ])\n\n  const rowContent = <>\n    <ViewerAuto\n      dragable={true}\n      size=\"line\"\n      block={block}\n      style={{\n        flexGrow: '1',\n        width: '100%',\n      }}\n    />\n\n    {\n      showBlockMenu === true\n      && (\n        <div className={classes.blockRowActions}>\n          <BlockMenu\n            onToogle={onBlockMenuToogle}\n            onReloadContext={onReloadContext}\n            {...{\n              block,\n              createBlock,\n              // saveType,\n            }}\n            trigger={props => (\n              <button\n                {...props}\n                className={`text hasIcon ${blockMenuIsOpen ? 'fakeHover' : ''}`}\n                style={{\n                  margin: '0',\n                  padding: 'var(--basis) 0',\n                  flexShrink: '0',\n                }}\n              >\n                <BlockMenuIcon className=\"icon\" />\n              </button>\n            )}\n          />\n        </div>\n      )\n    }\n  </>\n\n  const inset = ~~(nestingLevel * 25 + (isLeaf ? 24 : 0))\n\n  return <div\n    // ref={rootRef}\n    key={block._id}\n    style={{\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'row',\n      ...style,\n      // height: 'auto',\n      marginLeft: inset,\n      minWidth: `calc(100% - ${(isLeaf ? 24 : 0)}px)`,\n      width: `calc(100% - ${inset}px)`,\n    }}\n    className={`${classes.blockRow} ${blockMenuIsOpen ? classes.fakeHover : ''}`}\n  >\n    {!isLeaf && (\n      <button\n        onClick={toggleOpen}\n        className=\"text hasIcon\"\n        style={{\n          margin: '0',\n          padding: 'var(--basis) 0',\n          flexShrink: '0',\n        }}\n      >\n        {\n          isOpen\n            ? <ExpandLessIcon style={{ verticalAlign: 'middle' }} />\n            : <ExpandMoreIcon style={{ verticalAlign: 'middle' }} />\n        }\n      </button>\n    )}\n    {rowContent}\n  </div>\n}\n\nconst getFilteredTypes = types => Object.entries(types)\n  .filter(([, value]) => value === true)\n  .map(([key, ]) => key)\n\nfunction BlockTree({\n  createBlock = ()=>{},\n  scrollContainer = window,\n  showBlockMenu = true,\n}) {\n  const { getString } = useLocalization()\n  const { loggedIn } = useUser()\n\n  const outerTreeRef = useRef(null)\n  const innerTreeRef = useRef(null)\n  const treeRef = useRef(null)\n  const [outerHeight, setOuterHeight] = useState(minItemSize)\n  const [bottomMargin, setBottomMargin] = useState(0)\n  const [nodes, setNodes] = useState({})\n  const [openById, setOpenById] = useState({})\n  const [treeNodes, setTreeNodes] = useState([])\n\n  const [treeNodesFiltered, setTreeNodesFiltered] = useState([])\n  const [searchString, setSearchString] = useState('')\n  const prevFetchArguments = useRef({})\n\n  const [onlyShowWithEditPermissions, setOnlyShowWithEditPermissions] = useState(false) // false = show all, true = show only owning\n  function toggleOnlyShowWithEditPermissions() {\n    setOnlyShowWithEditPermissions(oldOnlyShowWithEditPermissions => !oldOnlyShowWithEditPermissions)\n  }\n\n  const [types, setTypes] = useState({\n    person: true,\n    page: true,\n    redirect: true,\n  })\n  const filteredTypes = getFilteredTypes(types)\n  \n  const [archived, setArchived] = useState(false)\n  function toggleArchived() {\n    setArchived(oldArchived => !oldArchived)\n  }\n\n\n  /*\n  const sizeMap = useRef({})\n  const setSize = useCallback((index, size) => {\n    sizeMap.current = {\n      ...sizeMap.current,\n      [index]: size,\n    }\n  }, [])\n  const getSize = useCallback(index => sizeMap.current[index] || minItemSize, [])\n  */\n\n\n  const { height: viewportHeight } = useViewportHeight()\n\n  const updateHeight = useCallback(() => {\n    if (innerTreeRef.current && outerTreeRef.current) {\n      setTimeout(() => {\n        const outerBounds = outerTreeRef.current.getBoundingClientRect()      \n        const maxHeight = viewportHeight - outerBounds.top\n\n        const innerBounds = innerTreeRef.current.getBoundingClientRect()\n        const fullHeight = innerBounds.height\n        if (typeof fullHeight === 'number' && !isNaN(fullHeight) && fullHeight > minItemSize) {\n          const newHeight = Math.min(maxHeight, fullHeight)\n          setOuterHeight(~~(newHeight))\n          setBottomMargin(~~(Math.max(fullHeight - newHeight, 0)))\n        }\n      }, 100)\n    }\n  }, [ viewportHeight, innerTreeRef, outerTreeRef, setOuterHeight, setBottomMargin ])\n\n  useScrollPosition(updateHeight, [ updateHeight ], null, false, 300, scrollContainer)\n\n  const updateTree = useCallback(nodes => {\n    if (nodes.length > 0) {\n      let defaultOpenState = false\n      if (searchString.length > 0) {\n        defaultOpenState = true\n      }\n\n      nodes = nodes.map(node => ({\n        ...node,\n        isOpen: openById.hasOwnProperty(node._id) ? openById[node._id] : defaultOpenState,\n      }))\n      \n      const treeRoots = buildTree(JSON.parse(JSON.stringify(nodes)))\n      const flatTree = getFlatTree(treeRoots)\n      setTreeNodes(flatTree)\n    } else {\n      setTreeNodes([])\n    }\n    updateHeight()\n  }, [ searchString, setTreeNodes, updateHeight, openById ])\n\n  const loadBlocks = useLoadBlocks()\n  const refetchData = useCallback(options => {\n    const {\n      force = false,\n      filteredTypes,\n      archived,\n    } = options || {}\n\n    if (\n      force === true\n      || prevFetchArguments.current.archived !== archived\n      || prevFetchArguments.current.types !== filteredTypes\n    ) {\n      prevFetchArguments.current.types = filteredTypes\n      prevFetchArguments.current.archived = archived\n      \n      loadBlocks({ types: filteredTypes, archived })\n        .then(async loadedBlocks => {\n          const nodes = loadedBlocks\n          .map(block => ({\n            _id: block._id,\n            block,\n            children: [],\n            isOpen: false,\n          }))\n\n          setNodes(nodes)\n          updateTree(nodes)\n        })\n        .catch(error => console.error(error))\n    }\n  }, [ loadBlocks, setNodes, updateTree ])\n\n  // useEffect(() => {\n  //   refetchData()\n  // }, [ refetchData ])\n\n\n\n\n\n  // START Filter + Search\n\n  useEffect(() => {\n    let filtered = treeNodes\n\n    if (searchString.length > 0) {\n      const searchStringLower = searchString.toLowerCase()\n\n      for (let i=0; i<filtered.length; i+=1) {\n        const node = filtered[i]\n\n        let showNode = false\n\n        if (\n          !!node\n          && !!node.block\n          && !!node.block.properties\n          && !!node.block.properties.text\n          && node.block.properties.text.toLowerCase().includes(searchStringLower)\n        ) {\n          showNode = true\n        } else if (\n          !!node\n          && !!node.block\n          && !!node.block.properties\n          && !!node.block.properties.translations\n        ) {\n          const translations = node.block.properties.translations\n          for (const translation of translations) {\n            if (translation.hasOwnProperty('text') && translation.text.toLowerCase().includes(searchStringLower)) {\n              showNode = true\n              break\n            }\n          }\n        } else if (\n          !!node\n          && !!node.block\n          && !!node.block.properties\n          && !!node.block.properties.slug\n          && node.block.properties.slug.toLowerCase().includes(searchStringLower)\n        ) {\n          showNode = true\n        }\n\n        filtered[i].showNode = showNode\n      }\n\n\n      // show sibling and parent nodes\n      let smallestNestingLevel = 0\n      let currentNestingLevel = 0\n      for (let i=filtered.length-1; i>=0; i-=1) {\n        const node = filtered[i]\n\n        if (currentNestingLevel !== 0) {\n          if (currentNestingLevel > node.nestingLevel) {\n            currentNestingLevel = node.nestingLevel\n            filtered[i].showNode = true // show parent node\n          } else if (currentNestingLevel < node.nestingLevel) {\n            currentNestingLevel = smallestNestingLevel\n          }\n        } else {\n          if (node.showNode === true) {\n            currentNestingLevel = node.nestingLevel\n          }\n        }\n\n        if (smallestNestingLevel === 0 || currentNestingLevel < smallestNestingLevel) {\n          smallestNestingLevel = currentNestingLevel\n        }\n      }\n\n      /*\n      isLeaf: true\n      isOpen: false\n      nestingLevel: 0\n      showNode: true\n      */\n\n      filtered = filtered.filter(node => node.showNode === true)\n    }\n\n    if (onlyShowWithEditPermissions === true) {\n      filtered = filtered\n        .filter(node => (\n          !!node\n          && !!node.block\n          && !!node.block.computed\n          && !!node.block.computed.roles\n          && (\n            node.block.computed.roles.includes('owner')\n            || node.block.computed.roles.includes('editor')\n          )\n        ))\n    }\n\n    setTreeNodesFiltered(filtered)\n    updateHeight()\n  }, [ searchString, onlyShowWithEditPermissions, treeNodes, setTreeNodesFiltered, updateHeight ])\n\n  const handleSearch = useCallback(event => {\n    setSearchString(event.target.value || '')\n  }, [ setSearchString ])\n\n  const toggleType = useCallback(type2toggle => {\n    const newTypes = { ...types }\n    newTypes[type2toggle] = !newTypes[type2toggle]\n\n    const typesValues = Object.values(newTypes)\n    if (!typesValues.every(value => value === false)) {\n      setTypes(newTypes)\n    }\n  }, [ types, setTypes ])\n\n  useEffect(() => {\n    refetchData({\n      filteredTypes: getFilteredTypes(types),\n      archived,\n    })\n  }, [ types, archived, refetchData ])\n\n  // END Filter + Search\n\n\n\n\n\n\n\n\n\n\n  const toggleOpenById = useCallback((_id) => {\n    openById[_id] = !openById[_id]\n    setOpenById(openById)\n    updateTree(nodes)\n  }, [setOpenById, openById, updateTree, nodes])\n\n  const refetchDataWithFilter = useCallback(options => {\n    refetchData({\n      ...options,\n      filteredTypes: getFilteredTypes(types),\n      archived,\n    })\n  }, [ types, archived, refetchData ])\n\n  const row = (props) => {\n    return <BlockRow\n      createBlock={createBlock}\n      toggleOpenById={toggleOpenById}\n      refetchData={refetchDataWithFilter}\n      // onSetSize={setSize}\n      showBlockMenu={showBlockMenu}\n      {...props}\n    />\n  }\n\n  return <>\n    <div style={{\n      display: 'flex',\n      alignItems: 'center',\n      margin: '0 0 var(--basis_x2) 0',\n    }}>\n\n      <input\n        type=\"text\"\n        placeholder={getString('search')}\n        style={{\n          width: '100%',\n        }}\n        onChange={handleSearch}\n      />\n\n      <PopoverMenu\n        trigger={triggerProps => (\n          <button\n            {...triggerProps}\n            className=\"text hasIcon\"\n            style={{\n              flexShrink: '0',\n            }}\n          >\n            <FilterListIcon className=\"icon\" />\n            {/* <span className=\"hideOnSmallScreen\" style={{verticalAlign: 'middle'}}>Filter</span> */}\n          </button>\n        )}\n      >\n        {/*\n          { value: 'page', icon: <PageIcon className=\"icon\"/>, title: getString('block_menu_type_label_plural_page') },\n          { value: 'person', icon: <PersonIcon className=\"icon\" />, title: getString('block_menu_type_label_plural_person') },\n          { value: 'redirect', icon: <RedirectIcon className=\"icon\" />, title: getString('block_menu_type_label_plural_redirect') },\n        */}\n\n        <div style={{ marginTop: '8px' }}></div>\n\n        {\n          Object.keys(types)\n            .map(type => (\n              <MenuItem\n                className=\"roundMenuItem\"\n                key={type}\n                onClick={() => toggleType(type)}\n                selected={filteredTypes.includes(type)}\n                sx={{\n                  marginTop: '2px !important',\n                  marginBottom: '2px !important',\n                }}\n              >\n                <ListItemIcon>\n                  {blockTypeIcons[type]}\n                </ListItemIcon>\n                <ListItemText>\n                  <Localized id={'block_menu_type_label_plural_'+type} />\n                </ListItemText>\n              </MenuItem>\n            ))\n        }\n\n        {\n          loggedIn\n          && <>\n            <Divider style={{ opacity: 0.2 }} />\n\n            <MenuItem\n              className=\"roundMenuItem\"\n              onClick={toggleArchived}\n              selected={archived === true}\n              sx={{\n                marginBottom: '2px !important',\n              }}\n            >\n              <ListItemIcon>\n                <ArchiveIcon className=\"icon\" />\n              </ListItemIcon>\n              <ListItemText>\n                <Localized id={archived === true ? 'filter_menu_showing_archiv' : 'filter_menu_show_archiv'} />\n              </ListItemText>\n            </MenuItem>\n\n            <MenuItem\n              className=\"roundMenuItem\"\n              onClick={toggleOnlyShowWithEditPermissions}\n              selected={onlyShowWithEditPermissions === true}\n            >\n              <ListItemIcon>\n                <EditIcon className=\"icon\" />\n              </ListItemIcon>\n              <ListItemText>\n                <Localized id={onlyShowWithEditPermissions === true ? 'filter_menu_showing_editing' : 'filter_menu_show_editing'} />\n              </ListItemText>\n            </MenuItem>\n          </>\n        }\n\n      </PopoverMenu>\n\n      <button\n        className=\"text hasIcon\"\n        onClick={refetchDataWithFilter}\n        style={{\n          flexShrink: '0',\n        }}\n      >\n        <RequeryIcon className=\"icon\" />\n        {/* <span className=\"hideOnSmallScreen\" style={{verticalAlign: 'middle'}}>Reload</span> */}\n      </button>\n    </div>\n  <div\n    style={{\n      height: outerHeight,\n      marginRight: '-12px',\n      marginLeft: '-12px',\n      marginBottom: bottomMargin,\n    }}\n    ref={outerTreeRef}\n  >\n    <AutoSizer disableWidth>\n      {({ height }) => (\n        <FixedSizeList\n          itemData={treeNodesFiltered}\n          itemCount={treeNodesFiltered.length}\n          ref={treeRef}\n          innerRef={innerTreeRef}\n          // onScroll={updateHeight}\n          itemSize={minItemSize}\n          height={height}\n          width=\"100%\"\n          style={{\n            overflowY: 'hidden',\n            overflowX: 'auto',\n            // overflowX: 'hidden',\n          }}\n          itemKey={(index, data) => data[index]._id}\n        >\n          {row}\n        </FixedSizeList>\n      )}\n    </AutoSizer>\n      {\n        treeNodesFiltered.length === 0\n          ? <p style={{\n            textAlign: 'center',\n            fontWeight: 'bold',\n          }}><Localized id=\"blocktree_no_nodes_to_show\" /></p>\n          : null\n      }\n    </div>\n  </>\n}\n\nexport default BlockTree\n\n\n\n// const defaultButtonStyle = { fontFamily: 'Courier New' }\n\n// Tree component can work with any possible tree structure because it uses an\n// iterator function that the user provides. Structure, approach, and iterator\n// function below is just one of many possible variants.\n// const defaultTree = {\n//   name: 'Root #1',\n//   id: 'root-1',\n//   children: [\n//     {\n//       children: [\n//         {id: 'child-2', name: 'Child #2'},\n//         {id: 'child-3', name: 'Child #3'},\n//         {id: 'child-5', name: 'Child #3'},\n//         {id: 'child-6', name: 'Child #3'},\n//         {id: 'child-7', name: 'Child #3'},\n//         {id: 'child-8', name: 'Child #3'},\n//         {id: 'child-9', name: 'Child #3'},\n//         {id: 'child-10', name: 'Child #3'},\n//         {id: 'child-11', name: 'Child #3'},\n//       ],\n//       id: 'child-1',\n//       name: 'Child #1',\n//     },\n//   ],\n// }\n\n  /*\nasync function* treeWalker(refresh) {\n  const stack = []\n \n  // Remember all the necessary data of the first node in the stack.\n  stack.push({\n    nestingLevel: 0,\n    node: tree,\n  })\n \n  // Walk through the tree until we have no nodes available.\n  while (stack.length !== 0) {\n    const {\n      node: {children = [], id, name},\n      nestingLevel,\n    } = stack.pop()\n \n    // Here we are sending the information about the node to the Tree component\n    // and receive an information about the openness state from it. The\n    // `refresh` parameter tells us if the full update of the tree is requested;\n    // basing on it we decide to return the full node data or only the node\n    // id to update the nodes order.\n    const isOpened = yield refresh\n      ? {\n          id,\n          isLeaf: children.length === 0,\n          isOpenByDefault: false,\n          name,\n          nestingLevel,\n        }\n      : id\n \n    // Basing on the node openness state we are deciding if we need to render\n    // the child nodes (if they exist).\n    if (children.length !== 0 && isOpened) {\n      // Since it is a stack structure, we need to put nodes we want to render\n      // first to the end of the stack.\n      for (let i = children.length - 1; i >= 0; i--) {\n        stack.push({\n          nestingLevel: nestingLevel + 1,\n          node: children[i],\n        });\n      }\n    }\n  }\n}\n*/\n\n  /*\n  // Node component receives all the data we created in the `treeWalker` +\n  // internal openness state (`isOpen`), function to change internal openness\n  // state (`toggle`) and `style` parameter that should be added to the root div.\n  const Node = ({data: {isLeaf, name, nestingLevel}, isOpen, style, toggle}) => {\n\n    const toogleAndUpdate = () => {\n      toggle()\n      setTimeout(updateHeight, 100)\n    }\n\n    return <div\n      style={{\n        ...style,\n        alignItems: 'center',\n        display: 'flex',\n        marginLeft: nestingLevel * 30 + (isLeaf ? 48 : 0),\n      }}\n    >\n      {!isLeaf && (\n        <div>\n          <button\n            type=\"button\"\n            onClick={toogleAndUpdate}\n            style={defaultButtonStyle}\n          >\n            {isOpen ? '-' : '+'}\n          </button>\n        </div>\n      )}\n      <div>{name}</div>\n    </div>\n  }\n*/\n","import { useRef, useState, useEffect } from 'react'\n\nimport { useApolloClient } from '@apollo/client'\nimport { getBlocks_Query } from '../graphql/queries'\n\nexport default function BlocksLoader({ slugs = [], children, ...props }) {\n  const mountedRef = useRef(false)\n  useEffect(() => {\n    mountedRef.current = true\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  const [blocks, setBlocks] = useState([])\n\n  const apollo_client = useApolloClient()\n\n  useEffect(() => {\n    if (Array.isArray(slugs) && slugs.length > 0) {\n      apollo_client.query({\n        query: getBlocks_Query,\n        variables: {\n          slugs,\n        },\n      })\n        .then(async ({ errors, data }) => {\n          if (mountedRef.current === true) {\n            if (Array.isArray(errors) || !Array.isArray(data.blocks)) {\n              throw new Error(errors.map(e => e.message).join('\\n'))\n            } else {\n              setBlocks(data.blocks)\n            }\n          }\n        })\n        .catch(async error => {\n          console.error('error', error)\n          setBlocks([])\n        })\n    } else {\n      setBlocks([])\n    }\n  }, [slugs, apollo_client])\n\n  if (blocks === null || blocks.length === 0) {\n    return null\n  }\n\n  if (typeof children !== 'function') {\n    return null\n  }\n\n  return children({...props, blocks, slugs})\n}\n","import { useState, useCallback, useRef, useEffect } from 'react'\nimport classes from './SidebarContent.module.css'\n\nimport {\n  MenuList,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from '@mui/material'\n\nimport {\n  MenuOpen as MenuOpenIcon,\n  Add as AddIcon,\n\n  Login as LoginIcon,\n  Logout as LogoutIcon,\n} from '@mui/icons-material'\n\nimport useSaveBlock from '../hooks/useSaveBlock.js'\n\nimport { useNavigate, useMatch } from 'react-router-dom'\n\nimport { Localized, useLocalization } from '../fluent/Localized.js'\nimport useUser from '../hooks/useUser.js'\nimport { useSidebarContext } from './Sidebar.js'\nimport AddMenu from './edit/AddMenu.js'\nimport BlockTree from './BlockTree.js'\nimport BlocksLoader from './BlocksLoader.js'\n\nimport ViewerAuto from './view/ViewerAuto.js'\n\nimport LocaleSelect from './edit/LocaleSelect.js'\nimport { locales } from '../fluent/l10n.js'\n\nfunction debounce(func, wait, immediate) {\n  // Source: underscore.js\n\tvar timeout\n\treturn function() {\n\t\tvar context = this, args = arguments\n\t\tvar later = function() {\n\t\t\ttimeout = null\n\t\t\tif (!immediate) func.apply(context, args)\n\t\t}\n\t\tvar callNow = immediate && !timeout\n\t\tclearTimeout(timeout)\n\t\ttimeout = setTimeout(later, wait)\n\t\tif (callNow) func.apply(context, args)\n\t}\n}\n\nexport default function SidebarContent() {\n  const mounted = useRef(false)\n  useEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  const {\n    getString,\n    userLocales = [],\n  } = useLocalization()\n\n  const [showBlockTree, setShowBlockTree] = useState(false)\n  var efficientSetShowBlockTree = useCallback(()=>{\n    if (mounted.current) {\n      debounce(() => {\n        if (mounted.current) {\n\t        setShowBlockTree(true)\n        }\n      }, 10)()\n    }\n  }, [ setShowBlockTree, mounted ])\n  useEffect(() => {\n    efficientSetShowBlockTree()\n  }, [ efficientSetShowBlockTree ])\n  \n  const { loggedIn } = useUser()\n  const { toggleSidebar } = useSidebarContext()\n\n  const matchesStartpage = useMatch('/')\n\n  const saveBlock = useSaveBlock()\n  const navigate = useNavigate()\n\n  const createBlock = useCallback(({ type }) => {\n    if (typeof type === 'string' && type.length > 0) {\n      saveBlock({\n        type,\n      })\n        .then(gottenBlock => {\n          navigate(`/${gottenBlock._id}/edit`)\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    }\n  }, [saveBlock, navigate])\n\n  const scrollContainerRef = useRef(null)\n\n  const handleLocaleChange = useCallback(newLocale => {\n    const newEvent = new CustomEvent('change_locale', {\n      detail: {\n        locale: newLocale,\n      },\n      bubbles: true,\n      cancelable: false,\n    })\n    document.dispatchEvent(newEvent)\n  }, [])\n\n  const ui_locales = [\n    '_',\n    ...Object.keys(locales),\n  ]\n\n  const choose_locale_information_string = getString('choose_locale_information')\n\n  return <div ref={scrollContainerRef} className={classes.scrollContainer}>\n    <div className={classes.content}>\n    <header className={classes.header}>\n      <div className={classes.headerBar}>\n        {\n          matchesStartpage\n          ? <h1>VoltLink</h1>\n          : <button onClick={toggleSidebar} className=\"text hasIcon\" style={{ margin: '0' }}>\n              <MenuOpenIcon className=\"icon\" />\n            </button>\n        }\n\n        <AddMenu\n          trigger={triggerProps => (\n            <button className=\"default hasIcon\" {...triggerProps}>\n              <AddIcon className=\"icon\" />\n              {/* <span className=\"hideOnSmallScreen\" style={{verticalAlign: 'middle'}}>Add</span> */}\n            </button>\n          )}\n          createBlock={createBlock}\n        />\n      </div>\n    </header>\n\n      <MenuList style={{ maxWidth: '100%' }}>\n\n        {\n          loggedIn\n            ? <a href={`${window.domains.backend}logout?redirect_to=${encodeURIComponent(window.location.toString())}`}>\n                <MenuItem className=\"roundMenuItem\">\n                  <ListItemIcon>\n                    <LogoutIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={<Localized id=\"logout\" />} />\n                </MenuItem>\n              </a>\n            : <a href={`${window.domains.backend}login?redirect_to=${encodeURIComponent(window.location.toString())}`}>\n                <MenuItem className=\"roundMenuItem\">\n                  <ListItemIcon>\n                    <LoginIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={<Localized id=\"login\" />} />\n                </MenuItem>\n              </a>\n        }\n\n        <br />\n\n        <BlocksLoader slugs={[\n          'glossary',\n          'tools',\n          'stats',\n          'volt_link_workplace_group',\n          'volt_link_source_code',\n          'volt_link_contact',\n        ]}>\n          {({ blocks, slugs }) => {\n            return slugs\n              .map(slug => {\n                const block = blocks.find(block => block?.properties?.slug === slug)\n                if (block) {\n                  return <ViewerAuto key={block._id} block={block} />\n                }\n                return null\n              })\n              .filter(Boolean)\n          }}\n        </BlocksLoader>\n\n      </MenuList>\n\n      <br />\n      <Divider style={{ opacity: 0.2 }} />\n      <br />\n\n      <div>\n        <span style={{\n          marginInlineEnd: 'var(--basis_x4)',\n        }}>\n          <Localized id=\"choose_locale\" />\n        </span>\n        <LocaleSelect\n          onChange={handleLocaleChange}\n          defaultValue={userLocales[0]}\n          options={ui_locales}\n        />\n      </div>\n      {\n        typeof choose_locale_information_string === 'string'\n        && choose_locale_information_string !== ''\n          ? <p style={{ marginBottom: '0' }}>\n            <Localized id=\"choose_locale_information\" />\n          </p>\n          : null\n      }\n\n      <br />\n      <Divider style={{ opacity: 0.2 }} />\n      <br/>\n\n      {/* All blocks: */}\n      {\n        showBlockTree\n        ? <BlockTree\n            showBlockMenu={true}\n            scrollContainer={scrollContainerRef}\n          />\n        : null\n      }\n    </div>\n  </div>\n}\n"],"sourceRoot":""}