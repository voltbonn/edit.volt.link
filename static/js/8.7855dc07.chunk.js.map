{"version":3,"sources":["hooks/useSaveBlock.js","components/edit/AddMenu.js","hooks/useArchiveBlock.js","components/SubMenu.js","components/edit/BlockMenu.js","components/SidebarContent.module.css","components/BlockTree.module.css","components/BlockTree.js","components/SidebarContent.js"],"names":["removeProperty","obj","prop","i","JSON","parse","stringify","hasOwnProperty","useSaveBlock","getString","useLocalization","apollo_client","useApolloClient","useSnackbar","enqueueSnackbar","closeSnackbar","handleSaveBlock","useCallback","initialBlock","Promise","final_resolve","snackbarKey","newBlock","Array","isArray","content","map","contentConfig","blockId","loadingDataPromise","resolve","mutate","mutation","saveBlock_Mutation","variables","block","then","a","data","error","variant","preventDuplicate","autoHideDuration","_id","saveBlock","catch","console","message","race","setTimeout","response","persist","blockTypeIcons","button","text","code","divider","checkbox","page","person","redirect","default_types","AddMenuContent","createBlock","types","close","type","className","onClick","id","AddMenu","trigger","useUser","loggedIn","style","marginTop","useArchiveBlock","archive","archiveBlock_Mutation","unarchiveBlock_Mutation","SubMenu","disabled","parentMenuIsOpen","label","triggerProps","header","MenuListProps","position","onOpen","children","triggerRef","useRef","useState","isSubMenuOpen","setIsSubMenuOpen","open","toggleSubmenu","newOpen","closeSubmenu","MenuItem","ref","display","justifyContent","ArrowRight","marginRight","Menu","pointerEvents","anchorEl","current","anchorOrigin","vertical","horizontal","transformOrigin","autoFocus","disableAutoFocus","disableEnforceFocus","onClose","sx","maxWidth","maxHeight","overflow","background","color","ListSubheader","whiteSpace","lineHeight","margin","padding","backgroundColor","Divider","opacity","ListItemIcon","Close","Localized","typeIcons","defaultTypeOptions","colorOptions","default","yellow","green","red","blue","colorOptionsKeys","Object","keys","getColor","renderedColor","getBlockColor","properties","withLocalization","onToogle","setProperty","setType","typeOptions","onRemoveRow","addRowBefore","onArchivedToggle","onReloadContext","userroles","computed","active","text_style","text_decorations","roles","canEdit","includes","archived","setArchived","archiveBlock","mutationFunction","useMutation","navigate","useNavigate","createChildBlock","newBlockId","moveBlock_Mutation","movingBlockId","newParentId","newIndex","toggleArchiveBlock","newArchived","toggleActive","metadata","toggleTextDecoration","thisDecoration","newTextDecorations","Set","filter","decoration","push","PopoverMenu","height","length","typeName","selected","marginBottom","thisColor","placeholder","defaultValue","onBlur","e","target","value","width","thisStyle","Add","VisibilityOff","Visibility","ListItemText","primary","secondary","Unarchive","Archive","component","Link","to","ListItem","paddingTop","paddingBottom","modified","replace","module","exports","treeWalker","getViewportHeight","Math","max","document","documentElement","clientHeight","window","innerHeight","treeRoots","stack","treeRootsSorted","sort","b","europaIndex","findIndex","root","slice","unshift","nestingLevel","node","f","pop","isOpen","isLeaf","childrenSorted","BlockRow","index","toggleOpenById","refetchData","showBlockMenu","blockMenuIsOpen","setBlockMenuIsOpen","toggleOpen","onBlockMenuToogle","newValue","force","rowContent","ViewerAuto","dragable","size","flexGrow","classes","blockRowActions","BlockMenu","props","flexShrink","inset","alignItems","flexDirection","marginLeft","minWidth","blockRow","fakeHover","verticalAlign","getFilteredTypes","entries","BlockTree","scrollContainer","outerTreeRef","innerTreeRef","treeRef","outerHeight","setOuterHeight","bottomMargin","setBottomMargin","nodes","setNodes","openById","setOpenById","treeNodes","setTreeNodes","treeNodesFiltered","setTreeNodesFiltered","searchString","setSearchString","prevFetchArguments","onlyShowWithEditPermissions","setOnlyShowWithEditPermissions","setTypes","filteredTypes","viewportHeight","setHeight","useEffect","timeoutId","resizeListener","clearTimeout","addEventListener","removeEventListener","useViewportHeight","updateHeight","outerBounds","getBoundingClientRect","top","fullHeight","isNaN","newHeight","min","useScrollPosition","updateTree","defaultOpenState","parentBlock","parent","find","n","buildTree","flatTree","walker","done","next","new_done","getFlatTree","loadBlocks","useLoadBlocks","options","loadedBlocks","filtered","searchStringLower","toLowerCase","showNode","translations","translation","path","smallestNestingLevel","currentNestingLevel","handleSearch","event","toggleType","type2toggle","newTypes","values","every","refetchDataWithFilter","row","onChange","FilterList","oldArchived","oldOnlyShowWithEditPermissions","disableWidth","itemData","itemCount","innerRef","itemSize","overflowY","overflowX","itemKey","textAlign","fontWeight","SidebarContent","mounted","showBlockTree","setShowBlockTree","efficientSetShowBlockTree","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","debounce","toggleSidebar","useSidebarContext","matchesStartpage","useMatch","gottenBlock","scrollContainerRef","headerBar","MenuOpen","MenuList","href","domains","backend","encodeURIComponent","location","toString","Logout","Login","Help","rel"],"mappings":"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","file":"static/js/8.7855dc07.chunk.js","sourcesContent":["import { useCallback } from 'react'\n\nimport { useLocalization } from '../fluent/Localized.js'\n\nimport { useApolloClient } from '@apollo/client'\nimport { saveBlock_Mutation } from '../graphql/mutations.js'\n\nimport { useSnackbar } from 'notistack'\n\nfunction removeProperty(obj, prop) {\n  // remove property from objects, arrays and sub-objects\n\n  obj = JSON.parse(JSON.stringify(obj)) // clone object to make everything mutable\n\n  if (obj.hasOwnProperty(prop)) {\n    delete obj[prop]\n  }\n  for (const i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (typeof obj[i] == 'object' && obj[i] !== null) {\n        removeProperty(obj[i], prop)\n      }\n    }\n  }\n\n  return obj\n}\n\nfunction useSaveBlock() {\n  const { getString } = useLocalization()\n\n  const apollo_client = useApolloClient()\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n\n  const handleSaveBlock = useCallback((initialBlock) => {\n    return new Promise(final_resolve => {\n      let snackbarKey = null\n\n      let newBlock = {...initialBlock}\n      newBlock = removeProperty(newBlock, '__typename')\n      if (newBlock.hasOwnProperty('content') && Array.isArray(newBlock.content)) {\n        newBlock.content = newBlock.content.map(contentConfig => ({\n          blockId: contentConfig.blockId,\n        }))\n      }\n\n      const loadingDataPromise = new Promise(resolve => {\n        apollo_client.mutate({\n          mutation: saveBlock_Mutation,\n          variables: {\n            block: newBlock\n          },\n        })\n          .then(async ({ data }) => {\n            resolve('got-data')\n\n            if (snackbarKey !== null) {\n              closeSnackbar(snackbarKey)\n            }\n\n            if (typeof data.error === 'string') {\n              if (data.error === 'no_edit_permission') {\n                enqueueSnackbar(getString('path_editor_edit_permission_error'), {\n                  variant: 'error',\n                  preventDuplicate: true,\n                  autoHideDuration: 2000,\n                })\n              } else {\n                enqueueSnackbar('' + data.error, {\n                  variant: 'error',\n                  preventDuplicate: true,\n                  autoHideDuration: 2000,\n                })\n              }\n            } else {\n              final_resolve({\n                ...initialBlock,\n                _id: data.saveBlock,\n              })\n\n              enqueueSnackbar(getString('path_editor_status_saved'), {\n                variant: 'success',\n                preventDuplicate: false,\n                autoHideDuration: 2000,\n              })\n            }\n          })\n          .catch(async error => {\n            console.error(error)\n            resolve('got-error')\n\n            if (snackbarKey !== null) {\n              closeSnackbar(snackbarKey)\n            }\n\n            enqueueSnackbar(getString('path_editor_status_error_while_saving', {\n              error: error.message,\n            }), {\n              variant: 'error',\n              preventDuplicate: true,\n              autoHideDuration: 2000,\n            })\n          })\n      })\n\n      // Show a loading-info-snackbar if loading the data takes too long.\n      Promise.race([\n        new Promise(resolve => {\n          setTimeout(() => {\n            resolve('show-loading')\n          }, 300)\n        }),\n        loadingDataPromise,\n      ])\n        .then(response => {\n          if (response === 'show-loading') {\n            snackbarKey = enqueueSnackbar(getString('path_editor_status_started_saving'), {\n              persist: true,\n              preventDuplicate: true,\n            })\n          }\n        })\n        .catch(error => console.error)\n\n    })\n  }, [\n    enqueueSnackbar,\n    closeSnackbar,\n    apollo_client,\n    getString,\n  ])\n\n  return handleSaveBlock\n}\n\nexport default useSaveBlock\n","\nimport {\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material'\n\nimport {\n  InsertDriveFileSharp as PageIcon,\n  LinkSharp as RedirectIcon,\n  PersonSharp as PersonIcon,\n  Crop75Sharp as ButtonIcon,\n  NotesSharp as TextIcon,\n  Remove as DividerIcon,\n  CodeSharp as CodeIcon,\n  CheckBox as CheckboxIcon,\n  // EditSharp as EditIcon,\n} from '@mui/icons-material'\n\nimport useUser from '../../hooks/useUser.js'\nimport PopoverMenu from '../PopoverMenu.js'\nimport { Localized } from '../../fluent/Localized.js'\n\nconst blockTypeIcons = {\n  button: <ButtonIcon />,\n  text: <TextIcon />,\n  code: <CodeIcon />,\n  divider: <DividerIcon />,\n  checkbox: <CheckboxIcon />,\n  page: <PageIcon />,\n  person: <PersonIcon />,\n  redirect: <RedirectIcon />,\n}\n\nconst default_types = [\n  'page',\n  'redirect',\n]\n\nfunction AddMenuContent({ createBlock, types, close = null }) {\n  if (!types || !Array.isArray(types)) {\n    types = default_types\n  }\n\n  return <>\n    {\n      types\n        .map(type => (\n          <MenuItem className=\"roundMenuItem\" key={type} onClick={() => createBlock({ type, close })}>\n            <ListItemIcon>\n              {blockTypeIcons[type]}\n            </ListItemIcon>\n            <ListItemText>\n              <Localized id={'block_menu_type_label_'+type} />\n            </ListItemText>\n          </MenuItem>\n        ))\n    }\n  </>\n}\n\nfunction AddMenu ({ trigger, createBlock, types }) {\n  const { loggedIn } = useUser()\n\n  if (loggedIn) {\n    return <PopoverMenu trigger={trigger}>\n      {\n        ({ close }) => <>\n          <div style={{ marginTop: '8px' }}></div>\n          <AddMenuContent createBlock={createBlock} types={types} close={close} />\n        </>\n      }\n    </PopoverMenu>\n  }\n\n  return null\n}\n\nexport {\n  AddMenuContent,\n  AddMenu as default,\n}\n","import { useCallback } from 'react'\n\nimport { useApolloClient } from '@apollo/client'\nimport { archiveBlock_Mutation, unarchiveBlock_Mutation } from '../graphql/mutations.js'\n\nfunction useArchiveBlock() {\n  const apollo_client = useApolloClient()\n\n  const handleArchiveBlock = useCallback(({ _id, archive }) => {\n    return apollo_client.mutate({\n      mutation: archive ? archiveBlock_Mutation : unarchiveBlock_Mutation,\n      variables: { _id }\n    })\n  }, [ apollo_client ])\n\n  return handleArchiveBlock\n}\n\nexport default useArchiveBlock\n","import { useRef, useState, useCallback } from 'react'\n\nimport {\n  Divider,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListSubheader,\n} from '@mui/material'\n\nimport {\n  Close as CloseIcon,\n  ArrowRight as ArrowRightIcon,\n} from '@mui/icons-material'\n\nimport { Localized } from '../fluent/Localized.js'\n\n// INFO: Some code is copied from: https://github.com/azmenak/material-ui-nested-menu-item/blob/master/src/index.tsx\n\nexport default function SubMenu ({\n  disabled = false,\n  parentMenuIsOpen = true,\n  label = '',\n  triggerProps = {},\n  header = null,\n  MenuListProps = {},\n  position = 'right',\n  onOpen = () => {},\n  children,\n}) {\n  const triggerRef = useRef(null)\n  const [isSubMenuOpen, setIsSubMenuOpen] = useState(false)\n  const open = isSubMenuOpen && parentMenuIsOpen\n\n  const toggleSubmenu = useCallback(() => {\n    if (disabled !== true) {\n      const newOpen = !open\n      setIsSubMenuOpen(newOpen)\n      if (newOpen === true) {\n        onOpen()\n      }\n    }\n  }, [ setIsSubMenuOpen, open, onOpen, disabled ])\n\n  const closeSubmenu = useCallback(() => {\n    setIsSubMenuOpen(false)\n  }, [ setIsSubMenuOpen ])\n\n  return <>\n    <MenuItem\n      {...triggerProps}\n\n      disabled={disabled}\n\n      ref={triggerRef}\n      onClick={toggleSubmenu}\n      className=\"roundMenuItem\"\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        ...triggerProps.style,\n      }}\n    >\n      <div style={{ display: 'flex' }}>\n        {label}\n      </div>\n      <ArrowRightIcon style={{ marginRight: '-10px' }} />\n    </MenuItem>\n    <Menu\n      // Set pointer events to 'none' to prevent the invisible Popover div from capturing events for clicks and hovers\n      style={{ pointerEvents: 'none' }}\n      anchorEl={triggerRef.current}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: (position === 'right' ? 'right' : 'left'),\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: (position === 'right' ? 'left' : 'right'),\n      }}\n      open={open}\n      autoFocus={false}\n      disableAutoFocus\n      disableEnforceFocus\n      onClose={closeSubmenu}\n      sx={{\n        marginTop: '-8px', // align with parent menu\n      }}\n      MenuListProps={{\n        ...MenuListProps,\n        sx: {\n          maxWidth: 380,\n          maxHeight: 'calc(100vh - 32px)',\n          overflow: 'auto',\n          background: 'var(--background-contrast)',\n          color: 'var(--on-background)',\n          ...MenuListProps.sx,\n        },\n      }}\n    >\n      <div style={{pointerEvents: 'auto'}}>\n        {\n          header !== null\n            ? <ListSubheader\n                style={{\n                  whiteSpace: 'nowrap',\n                  lineHeight: '1',\n                  margin: '0',\n                  padding: '4px 16px 12px',\n                  backgroundColor: 'var(--background-contrast)',\n                  color: 'var(--on-background)',\n                }}\n              >\n                {header}\n              </ListSubheader>\n            : null\n        }\n\n        {children}\n\n        <Divider style={{opacity: 0.2}} />\n\n        <MenuItem className=\"roundMenuItem\" style={{marginTop:'8px'}} onClick={closeSubmenu}>\n          <ListItemIcon>\n            <CloseIcon />\n          </ListItemIcon>\n          <Localized id=\"block_menu_close_menu\" />\n        </MenuItem>\n      </div>\n    </Menu>\n  </>\n}\n","import { useCallback, useState } from 'react'\n\nimport {\n  Link,\n  useNavigate,\n} from 'react-router-dom'\n\nimport {\n  MenuItem,\n  Divider,\n  ListItemIcon,\n  ListItemText,\n  ListItem,\n} from '@mui/material'\n\nimport {\n  Archive as ArchiveIcon,\n  Unarchive as UnarchiveIcon,\n\n  Visibility as VisibilityIcon,\n  VisibilityOff as VisibilityOffIcon,\n  // Delete as DeleteIcon,\n  // VerticalAlignTop as VerticalAlignTopIcon,\n  // VerticalAlignBottom as VerticalAlignBottomIcon,\n  Add as AddIcon,\n  RepeatSharp as RepeatIcon,\n  // RemoveCircleSharp as RemoveCircleIcon,\n\n  InsertDriveFileSharp as PageIcon,\n  LinkSharp as RedirectIcon,\n  // PersonSharp as PersonIcon,\n  Crop75Sharp as ButtonIcon,\n  NotesSharp as TextIcon,\n  // CodeSharp as CodeIcon,\n  Remove as DividerIcon,\n  // CheckBox as CheckboxIcon,\n\n  PreviewSharp as ViewIcon,\n  EditSharp as EditIcon,\n\n  FormatSizeSharp as TextStyleIcon,\n  TextFormatSharp as TextDecorationsIcon,\n  PaletteSharp as ColorIcon,\n  CircleSharp as ColorSwatchIcon,\n\n  CheckSharp as SelectedIcon,\n} from '@mui/icons-material'\n\nimport { Localized, withLocalization } from '../../fluent/Localized.js'\nimport { getBlockColor } from '../../functions.js'\n\nimport useArchiveBlock from '../../hooks/useArchiveBlock.js'\nimport useUser from '../../hooks/useUser.js'\n\nimport PopoverMenu from '../PopoverMenu.js'\nimport SubMenu from '../SubMenu.js'\nimport { AddMenuContent } from './AddMenu.js'\n\nimport { saveBlock_Mutation, moveBlock_Mutation } from '../../graphql/mutations.js'\nimport useMutation from '../../hooks/useMutation.js'\n\nconst typeIcons = {\n  button: <ButtonIcon />,\n  text: <TextIcon />,\n  // checkbox: <CheckboxIcon />,\n  // code: <CodeIcon />,\n  divider: <DividerIcon />,\n  page: <PageIcon />,\n  redirect: <RedirectIcon />,\n}\n\nconst defaultTypeOptions = [\n  'button',\n  'text',\n  // 'checkbox',\n  // 'code',\n  'divider',\n  'page',\n  'redirect',\n]\n\nconst colorOptions = {\n  default: 'var(--on-background)',\n  yellow: 'var(--yellow)',\n  green: 'var(--green)',\n  red: 'var(--red)',\n  blue: 'var(--blue)',\n}\nconst colorOptionsKeys = Object.keys(colorOptions)\nfunction getColor (color) {\n  if (colorOptions.hasOwnProperty(color)) {\n    return colorOptions[color]\n  } else {\n    const {\n      color: renderedColor\n    } = getBlockColor({\n      properties: {\n        color,\n      },\n    })\n\n    if (renderedColor) {\n      return renderedColor\n    }\n  }\n  \n  return color\n}\n\nfunction BlockMenu ({\n  block = {},\n  getString,\n\n  trigger,\n  onToogle,\n\n  setProperty,\n  setType,\n  typeOptions = defaultTypeOptions,\n\n  onRemoveRow = null,\n  addRowBefore = null,\n  // addRowAfter = null,\n  onArchivedToggle = null,\n  onReloadContext = null,\n}) {\n  const { loggedIn, userroles } = useUser()\n\n  const { _id = '', type = '', properties = {}, computed = {} } = block\n  let {\n    active = true,\n    text_style = null,\n    text_decorations = [],\n    color = null,\n  } = properties\n\n  if (!Array.isArray(text_decorations)) {\n    text_decorations = []\n  }\n\n  const {\n    roles = [],\n  } = (computed === null ? {} : computed)\n  const canEdit = loggedIn && (userroles.includes('admin') || roles.includes('owner') || roles.includes('editor'))\n\n  const [archived, setArchived] = useState(properties.archived === true)\n  const archiveBlock = useArchiveBlock()\n\n  // const handleAddRowBefore = useCallback(() => {\n  //\n  //   // const newBlock = {\n  //   //   type,\n  //   // }\n  //\n  //   const newBlockId = ''\n  //\n  //   addRowBefore({\n  //     blockId: newBlockId,\n  //   })\n  // }, [ addRowBefore ])\n\n\n  const mutationFunction = useMutation()\n  const navigate = useNavigate()\n  const createChildBlock = useCallback(async newBlock => {\n    try {\n      if (newBlock) {\n        const { saveBlock: newBlockId } = await mutationFunction({\n          mutation: saveBlock_Mutation,\n          variables: {\n            block: newBlock,\n          },\n        })\n        if (newBlockId !== null) {\n          await mutationFunction({\n            mutation: moveBlock_Mutation,\n            variables: {\n              movingBlockId: newBlockId,\n              newParentId: _id,\n              newIndex: 0,\n            },\n          })\n          if (typeof onReloadContext === 'function') {\n            onReloadContext()\n          }\n          navigate(`/${newBlockId}/edit`)\n        }\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }, [ mutationFunction, _id, onReloadContext, navigate ])\n\n  const toggleArchiveBlock = useCallback(() => {\n    const newArchived = !archived\n    archiveBlock({ _id: block._id, archive: newArchived })\n      .then(() => {\n        setArchived(newArchived)\n        if (typeof onArchivedToggle === 'function') {\n          onArchivedToggle(newArchived)\n        }\n        if (typeof onReloadContext === 'function') {\n          onReloadContext()\n        }\n      })\n      .catch(console.error)\n  }, [archiveBlock, setArchived, archived, block, onArchivedToggle, onReloadContext])\n\n  const toggleActive = useCallback(() => {\n    if (typeof setProperty === 'function') {\n      setProperty('active', !active)\n    }\n  }, [ active, setProperty ])\n\n  const metadata = block.metadata || {}\n\n  let {\n    color: renderedColor\n  } = getBlockColor(block)\n\n  if (!renderedColor) {\n    renderedColor = 'transparent'\n  }\n\n  const toggleTextDecoration = useCallback(thisDecoration => {\n    let newTextDecorations = [...new Set(text_decorations)]\n\n    if (text_decorations.includes(thisDecoration)) {\n      newTextDecorations = newTextDecorations.filter(decoration => decoration !== thisDecoration)\n    } else {\n      newTextDecorations.push(thisDecoration)\n    }\n\n    setProperty('text_decorations', newTextDecorations)\n  }, [text_decorations, setProperty])\n\n  return <PopoverMenu\n    trigger={trigger}\n    onToogle={onToogle}\n  >\n    {({ open }) => (<div>\n\n      <div style={{ height: '8px' }}></div>\n\n      {\n        (\n          canEdit\n          && typeof setType === 'function'\n          && Array.isArray(typeOptions)\n          && typeOptions.length > 0\n        )\n        && <>\n          <SubMenu\n            disabled={type === 'person'}\n            parentMenuIsOpen={open}\n            label={<>\n              <ListItemIcon>\n                <RepeatIcon />\n              </ListItemIcon>\n              <Localized id=\"block_menu_choose_type_label\" />\n            </>}\n            header={<Localized id=\"block_menu_choose_type_label\" />}\n          >\n            {\n              typeOptions\n              .map(typeName => (\n                <MenuItem\n                  key={typeName}\n                  selected={typeName === type}\n                  onClick={() => setType(typeName)}\n                  className=\"roundMenuItem\"\n                >\n                  <ListItemIcon>\n                    {typeIcons[typeName]}\n                  </ListItemIcon>\n                  {getString(`block_menu_type_label_${typeName}`, typeName)}\n                </MenuItem>\n              ))\n            }\n          </SubMenu>\n          <Divider style={{ opacity: 0.2, marginTop: '8px', marginBottom: '8px' }} />\n        </>\n      }\n\n      {\n        (\n          canEdit\n          && typeof setProperty === 'function'\n        )\n        && <SubMenu\n          parentMenuIsOpen={open}\n          label={<>\n            <ListItemIcon>\n              <ColorIcon\n                style={{\n                  color: getColor(color),\n                }}\n              />\n            </ListItemIcon>\n            <Localized id=\"block_menu_choose_color_label\" />\n          </>}\n          header={<Localized id=\"block_menu_choose_color_label\" />}\n        >\n          {\n            colorOptionsKeys\n            .map(thisColor => (\n              <MenuItem\n                key={thisColor}\n                selected={thisColor === 'default' ? color === null : color === thisColor}\n                onClick={() => setProperty('color', thisColor === 'default' ? null : thisColor)}\n                className=\"roundMenuItem\"\n              >\n                <ListItemIcon>\n                  <ColorSwatchIcon\n                    style={{\n                      color: getColor(thisColor),\n                    }}\n                  />\n                </ListItemIcon>\n                {thisColor}\n              </MenuItem>\n            ))\n          }\n\n          <MenuItem\n            className=\"roundMenuItem\"\n            selected={color !== null && !colorOptionsKeys.includes(color)}\n          >\n            <ListItemIcon>\n              <ColorSwatchIcon\n                style={{\n                  color: renderedColor,\n                }}\n              />\n            </ListItemIcon>\n            <input\n              key={colorOptionsKeys.includes(color) ? color : 'custom'}\n              type=\"text\"\n              placeholder=\"#FFFFFF\"\n              defaultValue={color}\n              onBlur={e => setProperty('color', e.target.value)}\n              style={{\n                width: '160px',\n                margin: '0 calc(-1 * var(--basis)) 0 0',\n              }}\n            />\n          </MenuItem>\n        </SubMenu>\n      }\n\n      {\n        (\n          canEdit\n          && typeof setProperty === 'function'\n          && type === 'text'\n        )\n        && <SubMenu\n          parentMenuIsOpen={open}\n          label={<>\n            <ListItemIcon>\n              <TextStyleIcon />\n            </ListItemIcon>\n            <Localized id=\"block_menu_choose_text_style_label\" />\n          </>}\n          header={<Localized id=\"block_menu_choose_text_style_label\" />}\n        >\n          {\n            [\n              // 'h1', // title\n              'h2', // heading\n              'h3', // subheading\n              'body', // body text. This is saved as null.\n              // 'caption',\n            ]\n            .map(thisStyle => (\n              <MenuItem\n                key={thisStyle}\n                selected={thisStyle === 'body' ? text_style === null : text_style === thisStyle}\n                onClick={() => setProperty('text_style', thisStyle === 'body' ? null : thisStyle)}\n                className=\"roundMenuItem\"\n              >\n                {getString(`block_menu_text_style_label_${thisStyle}`, thisStyle)}\n              </MenuItem>\n            ))\n          }\n        </SubMenu>\n      }\n\n      {\n        (\n          canEdit\n          && typeof setProperty === 'function'\n          && type === 'text'\n        )\n        && <SubMenu\n          parentMenuIsOpen={open}\n          label={<>\n            <ListItemIcon>\n              <TextDecorationsIcon />\n            </ListItemIcon>\n            <Localized id=\"block_menu_choose_text_decorations_label\" />\n          </>}\n          header={<Localized id=\"block_menu_choose_text_decorations_label\" />}\n        >\n          {\n            [\n              'checkbox',\n            ]\n              .map(thisDecoration => {\n                const selected = text_decorations.includes(thisDecoration)\n                return <MenuItem\n                  key={thisDecoration}\n                  selected={selected}\n                  onClick={() => toggleTextDecoration(thisDecoration)}\n                  className=\"roundMenuItem\"\n                >\n                  <ListItemIcon>\n                    {\n                      selected\n                        ? <SelectedIcon />\n                        : <SelectedIcon style={{ opacity: 0 }} />\n                    }\n                  </ListItemIcon>\n                  {getString(`block_menu_text_decoration_label_${thisDecoration}`, thisDecoration)}\n                </MenuItem>\n              })\n          }\n        </SubMenu>\n      }\n\n      {\n        (\n          canEdit\n          && typeof setProperty === 'function'\n        )\n        && <Divider style={{opacity: 0.2, marginTop:'8px', marginBottom:'8px'}} />\n      }\n\n      {/*\n        addRowBefore\n        && <MenuItem onClick={handleAddRowBefore}>\n          <ListItemIcon>\n            <VerticalAlignTopIcon />\n          </ListItemIcon>\n          <Localized id=\"block_menu_add_before\" />\n        </MenuItem>\n      */}\n\n      {/*\n        addRowAfter\n        && <MenuItem onClick={addRowAfter}>\n          <ListItemIcon>\n            <VerticalAlignBottomIcon />\n          </ListItemIcon>\n          <Localized id=\"block_menu_add_after\" />\n        </MenuItem>\n      */}\n\n      {\n        canEdit\n        && <SubMenu\n          parentMenuIsOpen={open}\n          label={<>\n            <ListItemIcon>\n              <AddIcon />\n            </ListItemIcon>\n            <Localized id=\"block_menu_create_child_block\" />\n          </>}\n        >\n          <AddMenuContent createBlock={createChildBlock} />\n        </SubMenu>\n      }\n\n      {\n        (\n          canEdit\n          && typeof setProperty === 'function'\n        )\n        && <MenuItem className=\"roundMenuItem\" onClick={toggleActive}>\n          <ListItemIcon>\n            {\n              active\n              ? <VisibilityOffIcon />\n              : <VisibilityIcon />\n            }\n          </ListItemIcon>\n\n          <ListItemText\n            primary={<span>{\n              active\n              ? <Localized id=\"block_menu_hide\" />\n              : <Localized id=\"block_menu_show\" />\n            }</span>}\n            secondary={<span style={{ whiteSpace: 'normal' }}><Localized id=\"block_menu_hide_show_description\" /></span>}\n          />\n          \n        </MenuItem>\n      }\n\n      {\n        (\n          canEdit\n          && typeof onArchivedToggle === 'function'\n        )\n        && <MenuItem className=\"roundMenuItem\" onClick={toggleArchiveBlock}>\n          <ListItemIcon>\n            {\n              archived === true\n              ? <UnarchiveIcon />\n              : <ArchiveIcon />\n            }\n          </ListItemIcon>\n          {\n            archived === true\n            ? <Localized id=\"block_menu_unarchive\" />\n            : <Localized id=\"block_menu_archive\" />\n          }\n        </MenuItem>\n      }\n            \n      {\n        canEdit\n        && <Divider style={{ opacity: 0.2, marginTop: '8px', marginBottom: '8px' }} />\n      }\n\n      {\n        (typeof _id === 'string' && _id !== '')\n        && <>\n          <MenuItem component={Link} to={`/${_id}/view`} className=\"roundMenuItem\" style={{ marginTop: '8px' }}>\n            <ListItemIcon>\n              <EditIcon />\n            </ListItemIcon>\n            <Localized id=\"view_block\" />\n          </MenuItem>\n\n          {\n            canEdit\n            && <MenuItem component={Link} to={`/${_id}/edit`} className=\"roundMenuItem\">\n              <ListItemIcon>\n                <ViewIcon />\n              </ListItemIcon>\n              <Localized id=\"edit_block\" />\n            </MenuItem>\n          }\n\n          <Divider style={{opacity: 0.2, marginTop:'8px', marginBottom:'8px' }} />\n        </>\n      }\n\n      {/*\n      <ListItem sx={{ paddingTop: '0', paddingBottom: '0' }}>\n        <ListItemText\n          primary={<Localized id=\"block_menu_info_created\" />}\n          secondary={(metadata.created || '').replace(/[TZ]/g, ' ')}\n        />\n      </ListItem>\n      */}\n      <ListItem sx={{ paddingTop: '0', paddingBottom: '0' }}>\n        <ListItemText\n          primary={<span><Localized id=\"block_menu_info_modified\" /></span>}\n          secondary={<span>{(metadata.modified || '').replace(/[TZ]/g, ' ')}</span>}\n        />\n      </ListItem>\n      <ListItem sx={{ paddingTop: '0', paddingBottom: '0' }}>\n        <ListItemText\n          primary={<span><Localized id=\"block_menu_info_id\" /></span>}\n          secondary={<span>{_id}</span>}\n        />\n      </ListItem>\n\n    </div>)}\n  </PopoverMenu>\n}\n\nexport default withLocalization(BlockMenu)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"SidebarContent_content__RAi8X\",\"header\":\"SidebarContent_header__1pYRG\",\"headerBar\":\"SidebarContent_headerBar__2xkje\",\"scrollContainer\":\"SidebarContent_scrollContainer__2eS9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockRow\":\"BlockTree_blockRow__80Vim\",\"blockRowActions\":\"BlockTree_blockRowActions__GDOGf\",\"fakeHover\":\"BlockTree_fakeHover__TKaWl\"};","import React, { useCallback, useEffect, useState, useRef } from 'react'\n// import { useLayoutEffect } from 'react'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport { FixedSizeList } from 'react-window'\n\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position'\n\nimport BlockMenu from './edit/BlockMenu.js'\nimport ViewerAuto from './view/ViewerAuto.js'\n\nimport { Localized, useLocalization } from '../fluent/Localized.js'\n\nimport classes from './BlockTree.module.css'\n\nimport {\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from '@mui/material'\n\nimport {\n  MoreHorizSharp as BlockMenuIcon,\n  ArrowDropDownSharp as ExpandLessIcon,\n  ArrowRightSharp as ExpandMoreIcon,\n\n  Replay as RequeryIcon,\n  FilterList as FilterListIcon,\n  Archive as ArchiveIcon,\n\n  // Search as SearchIcon,\n\n  InsertDriveFileSharp as PageIcon,\n  // AutoAwesomeSharp as ActionIcon,\n  LinkSharp as RedirectIcon,\n  PersonSharp as PersonIcon,\n  // Crop75Sharp as ButtonIcon,\n  // TitleSharp as HeadlineIcon,\n  // NotesSharp as TextIcon,\n  // Remove as DividerIcon,\n  EditSharp as EditIcon,\n} from '@mui/icons-material'\n\nimport useLoadBlocks from '../hooks/useLoadBlocks.js'\nimport useUser from '../hooks/useUser.js'\n\nimport PopoverMenu from './PopoverMenu.js'\n\nconst blockTypeIcons = {\n  page: <PageIcon />,\n  person: <PersonIcon />,\n  redirect: <RedirectIcon />,\n}\n\n\nconst minItemSize = 43\n\n// const getWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n// const getHeight = () => window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n\n// const getViewportWidth = () => Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\nconst getViewportHeight = () => Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)\n\nfunction useViewportHeight() {\n  // save current window width in the state object\n  let [height, setHeight] = useState(getViewportHeight())\n\n  // in this case useEffect will execute only once because\n  // it does not have any dependencies.\n  useEffect(() => {\n    // timeoutId for debounce mechanism\n    let timeoutId = null\n    const resizeListener = () => {\n      // prevent execution of previous setTimeout\n      clearTimeout(timeoutId)\n      // change width from the state object after 150 milliseconds\n      timeoutId = setTimeout(() => {\n        setHeight(getViewportHeight())\n      }, 150)\n    }\n    // set resize listener\n    window.addEventListener('resize', resizeListener)\n\n    // clean up function\n    return () => {\n      // remove resize listener\n      window.removeEventListener('resize', resizeListener)\n    }\n  }, [])\n\n  return { height }\n}\n\nfunction buildTree(nodes){\n  // Build a tree from the blocks.\n  // Where each block has a parentId property.\n  // Each tree item should have the block itself, a list of children and a nesting level.\n  \n  const treeRoots = []\n\n  for (let node of nodes) {\n    let parentBlock = null\n    if (node.block.parent) {\n      parentBlock = nodes.find(n => n._id === node.block.parent)\n      // if (!parentBlock) {\n      //   console.error('Invalid parent:')\n      //   console.error('parentBlockt', parentBlock)\n      //   console.error('node.block.parent', node.block.parent)\n      // }\n    }\n\n    if (!parentBlock) {\n      treeRoots.push(node)\n    } else {\n      // If the parentBlock has no children, create the children array.\n      if (!parentBlock.children) {\n        parentBlock.children = []\n      }\n      parentBlock.children.push(node)\n    }\n  }\n\n  return treeRoots\n}\n\nfunction* treeWalker(treeRoots) {\n  const stack = []\n \n  let treeRootsSorted = treeRoots\n    .sort((a, b) => b.block.metadata.modified > a.block.metadata.modified ? 1 : -1)\n\n  // find the index of the root with block._id === '6249c879fcaf12b124914396' (this is the id of volt europa)\n  const europaIndex = treeRootsSorted.findIndex(root => root.block._id === '6249c879fcaf12b124914396') // TODO: make this independet of the id\n\n  // remove the root at index europaIndex\n  if (europaIndex > -1) {\n    treeRootsSorted = [\n      treeRootsSorted[europaIndex],\n      ...treeRootsSorted.slice(0, europaIndex),\n      ...treeRootsSorted.slice(europaIndex + 1)\n    ]\n  }\n      \n  // Remember all the necessary data of the first node in the stack.\n  for (const root of treeRootsSorted) {\n    stack.unshift({\n      nestingLevel: 0,\n      node: root,\n    })\n  }\n \n  // Walk through the tree until we have no nodes available.\n  while (stack.length !== 0) {\n    const {\n      node: {children = [], _id, block, isOpen},\n      nestingLevel,\n    } = stack.pop()\n\n    yield {\n      _id,\n      isLeaf: children.length === 0,\n      isOpen,\n      block,\n      nestingLevel,\n    }\n \n    // Basing on the node openness state we are deciding if we need to render\n    // the child nodes (if they exist).\n    if (children.length !== 0 && isOpen) {\n      // Since it is a stack structure, we need to put nodes we want to render\n      // first to the end of the stack.\n\n      const childrenSorted = children\n        .sort((a, b) => b.block.metadata.modified > a.block.metadata.modified ? 1 : -1)\n\n      for (let i = childrenSorted.length - 1; i >= 0; i--) {\n        stack.push({\n          nestingLevel: nestingLevel + 1,\n          node: childrenSorted[i],\n        });\n      }\n    }\n  }\n}\n\nfunction getFlatTree(treeRoots){\n  const flatTree = []\n\n  const walker = treeWalker(treeRoots)\n\n  let done = false\n  while (!done) {\n    const { done: new_done, value } = walker.next()\n    done = new_done\n    if (!done) {\n      flatTree.push(value)\n    }\n  }\n\n  return flatTree\n}\n\n// const useWindowSize = () => {\n//   let [size, setSize] = useState([0, 0])\n//   useLayoutEffect(() => {\n//     function updateSize() {\n//       setSize([window.innerWidth, window.innerHeight])\n//     }\n//     window.addEventListener(\"resize\", updateSize)\n//     updateSize()\n//     return () => window.removeEventListener(\"resize\", updateSize)\n//   }, [])\n//   return size\n// }\n\n\nconst BlockRow = ({\n  createBlock,\n  index,\n  style,\n  data,\n  toggleOpenById,\n  refetchData,\n  // onSetSize,\n  showBlockMenu = true,\n}) => {\n  const {\n    _id,\n    isLeaf,\n    isOpen,\n    block,\n    nestingLevel,\n  } = data[index]\n\n  // const rootRef = useRef()\n  // const [ windowWidth ] = useWindowSize()\n  // useEffect(() => {\n  //   if (typeof onSetSize === 'function') {\n  //     const height = rootRef.current.getBoundingClientRect().height\n  //     onSetSize(index, height)\n  //   }\n  // }, [ index, onSetSize, windowWidth ])\n\n  const [blockMenuIsOpen, setBlockMenuIsOpen] = useState(false)\n\n  const toggleOpen = useCallback(() => {\n    if (typeof toggleOpenById === 'function') {\n      toggleOpenById(_id)\n    }\n  }, [ toggleOpenById, _id ])\n\n  const onBlockMenuToogle = useCallback(newValue => {\n    if (newValue === false) {\n      setTimeout(() => {\n        setBlockMenuIsOpen(newValue)\n      }, 200) // The fade-out animation is 200ms. Only rerender after it, for it not to loose the element.\n    } else {\n      setBlockMenuIsOpen(newValue)\n    }\n  }, [ setBlockMenuIsOpen ])\n\n  const onReloadContext = useCallback(() => {\n    if (typeof refetchData === 'function') {\n      setTimeout(() => {\n        refetchData({ force: true })\n      }, 200) // The fade-out animation is 200ms. Only rerender after it, for it not to loose the element.\n    }\n  }, [ refetchData ])\n\n  const rowContent = <>\n    <ViewerAuto\n      dragable={true}\n      size=\"line\"\n      block={block}\n      style={{\n        flexGrow: '1',\n        width: '100%',\n      }}\n    />\n\n    {\n      showBlockMenu === true\n      && (\n        <div className={classes.blockRowActions}>\n          <BlockMenu\n            onToogle={onBlockMenuToogle}\n            onReloadContext={onReloadContext}\n            {...{\n              block,\n              createBlock,\n              // setType: saveType,\n            }}\n            trigger={props => (\n              <button\n                {...props}\n                className={`text hasIcon ${blockMenuIsOpen ? 'fakeHover' : ''}`}\n                style={{\n                  margin: '0',\n                  padding: 'var(--basis) 0',\n                  flexShrink: '0',\n                }}\n              >\n                <BlockMenuIcon className=\"icon\" />\n              </button>\n            )}\n          />\n        </div>\n      )\n    }\n  </>\n\n  const inset = ~~(nestingLevel * 25 + (isLeaf ? 24 : 0))\n\n  return <div\n    // ref={rootRef}\n    key={block._id}\n    style={{\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'row',\n      ...style,\n      // height: 'auto',\n      marginLeft: inset,\n      minWidth: `calc(100% - ${(isLeaf ? 24 : 0)}px)`,\n      width: `calc(100% - ${inset}px)`,\n    }}\n    className={`${classes.blockRow} ${blockMenuIsOpen ? classes.fakeHover : ''}`}\n  >\n    {!isLeaf && (\n      <button\n        onClick={toggleOpen}\n        className=\"text hasIcon\"\n        style={{\n          margin: '0',\n          padding: 'var(--basis) 0',\n          flexShrink: '0',\n        }}\n      >\n        {\n          isOpen\n            ? <ExpandLessIcon style={{ verticalAlign: 'middle' }} />\n            : <ExpandMoreIcon style={{ verticalAlign: 'middle' }} />\n        }\n      </button>\n    )}\n    {rowContent}\n  </div>\n}\n\nconst getFilteredTypes = types => Object.entries(types)\n  .filter(([, value]) => value === true)\n  .map(([key, ]) => key)\n\nfunction BlockTree({\n  createBlock = ()=>{},\n  scrollContainer = window,\n  showBlockMenu = true,\n}) {\n  const { getString } = useLocalization()\n  const { loggedIn } = useUser()\n\n  const outerTreeRef = useRef(null)\n  const innerTreeRef = useRef(null)\n  const treeRef = useRef(null)\n  const [outerHeight, setOuterHeight] = useState(minItemSize)\n  const [bottomMargin, setBottomMargin] = useState(0)\n  const [nodes, setNodes] = useState({})\n  const [openById, setOpenById] = useState({})\n  const [treeNodes, setTreeNodes] = useState([])\n\n  const [treeNodesFiltered, setTreeNodesFiltered] = useState([])\n  const [searchString, setSearchString] = useState('')\n  const prevFetchArguments = useRef({})\n\n  const [onlyShowWithEditPermissions, setOnlyShowWithEditPermissions] = useState(false) // false = show all, true = show only owning\n  function toggleOnlyShowWithEditPermissions() {\n    setOnlyShowWithEditPermissions(oldOnlyShowWithEditPermissions => !oldOnlyShowWithEditPermissions)\n  }\n\n  const [types, setTypes] = useState({\n    person: true,\n    page: true,\n    redirect: true,\n  })\n  const filteredTypes = getFilteredTypes(types)\n  \n  const [archived, setArchived] = useState(false)\n  function toggleArchived() {\n    setArchived(oldArchived => !oldArchived)\n  }\n\n\n  /*\n  const sizeMap = useRef({})\n  const setSize = useCallback((index, size) => {\n    sizeMap.current = {\n      ...sizeMap.current,\n      [index]: size,\n    }\n  }, [])\n  const getSize = useCallback(index => sizeMap.current[index] || minItemSize, [])\n  */\n\n\n  const { height: viewportHeight } = useViewportHeight()\n\n  const updateHeight = useCallback(() => {\n    if (innerTreeRef.current && outerTreeRef.current) {\n      setTimeout(() => {\n        const outerBounds = outerTreeRef.current.getBoundingClientRect()      \n        const maxHeight = viewportHeight - outerBounds.top\n\n        const innerBounds = innerTreeRef.current.getBoundingClientRect()\n        const fullHeight = innerBounds.height\n        if (typeof fullHeight === 'number' && !isNaN(fullHeight) && fullHeight > minItemSize) {\n          const newHeight = Math.min(maxHeight, fullHeight)\n          setOuterHeight(~~(newHeight))\n          setBottomMargin(~~(Math.max(fullHeight - newHeight, 0)))\n        }\n      }, 100)\n    }\n  }, [ viewportHeight, innerTreeRef, outerTreeRef, setOuterHeight, setBottomMargin ])\n\n  useScrollPosition(updateHeight, [ updateHeight ], null, false, 300, scrollContainer)\n\n  const updateTree = useCallback(nodes => {\n    if (nodes.length > 0) {\n      let defaultOpenState = false\n      if (searchString.length > 0) {\n        defaultOpenState = true\n      }\n\n      nodes = nodes.map(node => ({\n        ...node,\n        isOpen: openById.hasOwnProperty(node._id) ? openById[node._id] : defaultOpenState,\n      }))\n      \n      const treeRoots = buildTree(JSON.parse(JSON.stringify(nodes)))\n      const flatTree = getFlatTree(treeRoots)\n      setTreeNodes(flatTree)\n    } else {\n      setTreeNodes([])\n    }\n    updateHeight()\n  }, [ searchString, setTreeNodes, updateHeight, openById ])\n\n  const loadBlocks = useLoadBlocks()\n  const refetchData = useCallback(options => {\n    const {\n      force = false,\n      filteredTypes,\n      archived,\n    } = options || {}\n\n    if (\n      force === true\n      || prevFetchArguments.current.archived !== archived\n      || prevFetchArguments.current.types !== filteredTypes\n    ) {\n      prevFetchArguments.current.types = filteredTypes\n      prevFetchArguments.current.archived = archived\n      \n      loadBlocks({ types: filteredTypes, archived })\n        .then(async loadedBlocks => {\n          const nodes = loadedBlocks\n          .map(block => ({\n            _id: block._id,\n            block,\n            children: [],\n            isOpen: false,\n          }))\n\n          setNodes(nodes)\n          updateTree(nodes)\n        })\n        .catch(error => console.error(error))\n    }\n  }, [ loadBlocks, setNodes, updateTree ])\n\n  // useEffect(() => {\n  //   refetchData()\n  // }, [ refetchData ])\n\n\n\n\n\n  // START Filter + Search\n\n  useEffect(() => {\n    let filtered = treeNodes\n\n    if (searchString.length > 0) {\n      const searchStringLower = searchString.toLowerCase()\n\n      for (let i=0; i<filtered.length; i+=1) {\n        const node = filtered[i]\n\n        let showNode = false\n\n        if (\n          !!node\n          && !!node.block\n          && !!node.block.properties\n          && !!node.block.properties.text\n          && node.block.properties.text.toLowerCase().includes(searchStringLower)\n        ) {\n          showNode = true\n        } else if (\n          !!node\n          && !!node.block\n          && !!node.block.properties\n          && !!node.block.properties.translations\n        ) {\n          const translations = node.block.properties.translations\n          for (const translation of translations) {\n            if (translation.hasOwnProperty('text') && translation.text.toLowerCase().includes(searchStringLower)) {\n              showNode = true\n              break\n            }\n          }\n        } else if (\n          !!node\n          && !!node.block\n          && !!node.block.properties\n          && !!node.block.properties.trigger\n          && !!node.block.properties.trigger.path\n          && node.block.properties.trigger.path.toLowerCase().includes(searchStringLower)\n        ) {\n          showNode = true\n        }\n\n        filtered[i].showNode = showNode\n      }\n\n\n      // show sibling and parent nodes\n      let smallestNestingLevel = 0\n      let currentNestingLevel = 0\n      for (let i=filtered.length-1; i>=0; i-=1) {\n        const node = filtered[i]\n\n        if (currentNestingLevel !== 0) {\n          if (currentNestingLevel > node.nestingLevel) {\n            currentNestingLevel = node.nestingLevel\n            filtered[i].showNode = true // show parent node\n          } else if (currentNestingLevel < node.nestingLevel) {\n            currentNestingLevel = smallestNestingLevel\n          }\n        } else {\n          if (node.showNode === true) {\n            currentNestingLevel = node.nestingLevel\n          }\n        }\n\n        if (smallestNestingLevel === 0 || currentNestingLevel < smallestNestingLevel) {\n          smallestNestingLevel = currentNestingLevel\n        }\n      }\n\n      /*\n      isLeaf: true\n      isOpen: false\n      nestingLevel: 0\n      showNode: true\n      */\n\n      filtered = filtered.filter(node => node.showNode === true)\n    }\n\n    if (onlyShowWithEditPermissions === true) {\n      filtered = filtered\n        .filter(node => (\n          !!node\n          && !!node.block\n          && !!node.block.computed\n          && !!node.block.computed.roles\n          && (\n            node.block.computed.roles.includes('owner')\n            || node.block.computed.roles.includes('editor')\n          )\n        ))\n    }\n\n    setTreeNodesFiltered(filtered)\n    updateHeight()\n  }, [ searchString, onlyShowWithEditPermissions, treeNodes, setTreeNodesFiltered, updateHeight ])\n\n  const handleSearch = useCallback(event => {\n    setSearchString(event.target.value || '')\n  }, [ setSearchString ])\n\n  const toggleType = useCallback(type2toggle => {\n    const newTypes = { ...types }\n    newTypes[type2toggle] = !newTypes[type2toggle]\n\n    const typesValues = Object.values(newTypes)\n    if (!typesValues.every(value => value === false)) {\n      setTypes(newTypes)\n    }\n  }, [ types, setTypes ])\n\n  useEffect(() => {\n    refetchData({\n      filteredTypes: getFilteredTypes(types),\n      archived,\n    })\n  }, [ types, archived, refetchData ])\n\n  // END Filter + Search\n\n\n\n\n\n\n\n\n\n\n  const toggleOpenById = useCallback((_id) => {\n    openById[_id] = !openById[_id]\n    setOpenById(openById)\n    updateTree(nodes)\n  }, [setOpenById, openById, updateTree, nodes])\n\n  const refetchDataWithFilter = useCallback(options => {\n    refetchData({\n      ...options,\n      filteredTypes: getFilteredTypes(types),\n      archived,\n    })\n  }, [ types, archived, refetchData ])\n\n  const row = (props) => {\n    return <BlockRow\n      createBlock={createBlock}\n      toggleOpenById={toggleOpenById}\n      refetchData={refetchDataWithFilter}\n      // onSetSize={setSize}\n      showBlockMenu={showBlockMenu}\n      {...props}\n    />\n  }\n\n  return <>\n    <div style={{\n      display: 'flex',\n      alignItems: 'center',\n      margin: '0 0 var(--basis_x2) 0',\n    }}>\n\n      <input\n        type=\"text\"\n        placeholder={getString('search')}\n        style={{\n          width: '100%',\n        }}\n        onChange={handleSearch}\n      />\n\n      <PopoverMenu\n        trigger={triggerProps => (\n          <button\n            {...triggerProps}\n            className=\"text hasIcon\"\n            style={{\n              flexShrink: '0',\n            }}\n          >\n            <FilterListIcon className=\"icon\" />\n            {/* <span className=\"hideOnSmallScreen\" style={{verticalAlign: 'middle'}}>Filter</span> */}\n          </button>\n        )}\n      >\n        {/*\n          { value: 'page', icon: <PageIcon className=\"icon\"/>, title: getString('block_menu_type_label_plural_page') },\n          { value: 'person', icon: <PersonIcon className=\"icon\" />, title: getString('block_menu_type_label_plural_person') },\n          { value: 'redirect', icon: <RedirectIcon className=\"icon\" />, title: getString('block_menu_type_label_plural_redirect') },\n        */}\n\n        <div style={{ marginTop: '8px' }}></div>\n\n        {\n          Object.keys(types)\n            .map(type => (\n              <MenuItem\n                className=\"roundMenuItem\"\n                key={type}\n                onClick={() => toggleType(type)}\n                selected={filteredTypes.includes(type)}\n                sx={{\n                  marginTop: '2px !important',\n                  marginBottom: '2px !important',\n                }}\n              >\n                <ListItemIcon>\n                  {blockTypeIcons[type]}\n                </ListItemIcon>\n                <ListItemText>\n                  <Localized id={'block_menu_type_label_plural_'+type} />\n                </ListItemText>\n              </MenuItem>\n            ))\n        }\n\n        {\n          loggedIn\n          && <>\n            <Divider style={{ opacity: 0.2 }} />\n\n            <MenuItem\n              className=\"roundMenuItem\"\n              onClick={toggleArchived}\n              selected={archived === true}\n              sx={{\n                marginBottom: '2px !important',\n              }}\n            >\n              <ListItemIcon>\n                <ArchiveIcon className=\"icon\" />\n              </ListItemIcon>\n              <ListItemText>\n                <Localized id={archived === true ? 'filter_menu_showing_archiv' : 'filter_menu_show_archiv'} />\n              </ListItemText>\n            </MenuItem>\n\n            <MenuItem\n              className=\"roundMenuItem\"\n              onClick={toggleOnlyShowWithEditPermissions}\n              selected={onlyShowWithEditPermissions === true}\n            >\n              <ListItemIcon>\n                <EditIcon className=\"icon\" />\n              </ListItemIcon>\n              <ListItemText>\n                <Localized id={onlyShowWithEditPermissions === true ? 'filter_menu_showing_editing' : 'filter_menu_show_editing'} />\n              </ListItemText>\n            </MenuItem>\n          </>\n        }\n\n      </PopoverMenu>\n\n      <button\n        className=\"text hasIcon\"\n        onClick={refetchDataWithFilter}\n        style={{\n          flexShrink: '0',\n        }}\n      >\n        <RequeryIcon className=\"icon\" />\n        {/* <span className=\"hideOnSmallScreen\" style={{verticalAlign: 'middle'}}>Reload</span> */}\n      </button>\n    </div>\n  <div\n    style={{\n      height: outerHeight,\n      marginRight: '-12px',\n      marginLeft: '-12px',\n      marginBottom: bottomMargin,\n    }}\n    ref={outerTreeRef}\n  >\n    <AutoSizer disableWidth>\n      {({ height }) => (\n        <FixedSizeList\n          itemData={treeNodesFiltered}\n          itemCount={treeNodesFiltered.length}\n          ref={treeRef}\n          innerRef={innerTreeRef}\n          // onScroll={updateHeight}\n          itemSize={minItemSize}\n          height={height}\n          width=\"100%\"\n          style={{\n            overflowY: 'hidden',\n            overflowX: 'auto',\n            // overflowX: 'hidden',\n          }}\n          itemKey={(index, data) => data[index]._id}\n        >\n          {row}\n        </FixedSizeList>\n      )}\n    </AutoSizer>\n      {\n        treeNodesFiltered.length === 0\n          ? <p style={{\n            textAlign: 'center',\n            fontWeight: 'bold',\n          }}><Localized id=\"blocktree_no_nodes_to_show\" /></p>\n          : null\n      }\n    </div>\n  </>\n}\n\nexport default BlockTree\n\n\n\n// const defaultButtonStyle = { fontFamily: 'Courier New' }\n\n// Tree component can work with any possible tree structure because it uses an\n// iterator function that the user provides. Structure, approach, and iterator\n// function below is just one of many possible variants.\n// const defaultTree = {\n//   name: 'Root #1',\n//   id: 'root-1',\n//   children: [\n//     {\n//       children: [\n//         {id: 'child-2', name: 'Child #2'},\n//         {id: 'child-3', name: 'Child #3'},\n//         {id: 'child-5', name: 'Child #3'},\n//         {id: 'child-6', name: 'Child #3'},\n//         {id: 'child-7', name: 'Child #3'},\n//         {id: 'child-8', name: 'Child #3'},\n//         {id: 'child-9', name: 'Child #3'},\n//         {id: 'child-10', name: 'Child #3'},\n//         {id: 'child-11', name: 'Child #3'},\n//       ],\n//       id: 'child-1',\n//       name: 'Child #1',\n//     },\n//   ],\n// }\n\n  /*\nasync function* treeWalker(refresh) {\n  const stack = []\n \n  // Remember all the necessary data of the first node in the stack.\n  stack.push({\n    nestingLevel: 0,\n    node: tree,\n  })\n \n  // Walk through the tree until we have no nodes available.\n  while (stack.length !== 0) {\n    const {\n      node: {children = [], id, name},\n      nestingLevel,\n    } = stack.pop()\n \n    // Here we are sending the information about the node to the Tree component\n    // and receive an information about the openness state from it. The\n    // `refresh` parameter tells us if the full update of the tree is requested;\n    // basing on it we decide to return the full node data or only the node\n    // id to update the nodes order.\n    const isOpened = yield refresh\n      ? {\n          id,\n          isLeaf: children.length === 0,\n          isOpenByDefault: false,\n          name,\n          nestingLevel,\n        }\n      : id\n \n    // Basing on the node openness state we are deciding if we need to render\n    // the child nodes (if they exist).\n    if (children.length !== 0 && isOpened) {\n      // Since it is a stack structure, we need to put nodes we want to render\n      // first to the end of the stack.\n      for (let i = children.length - 1; i >= 0; i--) {\n        stack.push({\n          nestingLevel: nestingLevel + 1,\n          node: children[i],\n        });\n      }\n    }\n  }\n}\n*/\n\n  /*\n  // Node component receives all the data we created in the `treeWalker` +\n  // internal openness state (`isOpen`), function to change internal openness\n  // state (`toggle`) and `style` parameter that should be added to the root div.\n  const Node = ({data: {isLeaf, name, nestingLevel}, isOpen, style, toggle}) => {\n\n    const toogleAndUpdate = () => {\n      toggle()\n      setTimeout(updateHeight, 100)\n    }\n\n    return <div\n      style={{\n        ...style,\n        alignItems: 'center',\n        display: 'flex',\n        marginLeft: nestingLevel * 30 + (isLeaf ? 48 : 0),\n      }}\n    >\n      {!isLeaf && (\n        <div>\n          <button\n            type=\"button\"\n            onClick={toogleAndUpdate}\n            style={defaultButtonStyle}\n          >\n            {isOpen ? '-' : '+'}\n          </button>\n        </div>\n      )}\n      <div>{name}</div>\n    </div>\n  }\n*/\n","import { useState, useCallback, useRef, useEffect } from 'react'\nimport classes from './SidebarContent.module.css'\n\nimport {\n  MenuList,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from '@mui/material'\n\nimport {\n  MenuOpen as MenuOpenIcon,\n  Add as AddIcon,\n\n  Email as ContactIcon,\n  GitHub as SourceCodeIcon,\n  Login as LoginIcon,\n  Logout as LogoutIcon,\n\n  Help as HelpIcon,\n} from '@mui/icons-material'\n\nimport useSaveBlock from '../hooks/useSaveBlock.js'\n\nimport { useNavigate, useMatch } from 'react-router-dom'\n\nimport { Localized } from '../fluent/Localized.js'\nimport useUser from '../hooks/useUser.js'\nimport { useSidebarContext } from './Sidebar.js'\nimport AddMenu from './edit/AddMenu.js'\nimport BlockTree from './BlockTree.js'\n\nfunction debounce(func, wait, immediate) {\n  // Source: underscore.js\n\tvar timeout\n\treturn function() {\n\t\tvar context = this, args = arguments\n\t\tvar later = function() {\n\t\t\ttimeout = null\n\t\t\tif (!immediate) func.apply(context, args)\n\t\t}\n\t\tvar callNow = immediate && !timeout\n\t\tclearTimeout(timeout)\n\t\ttimeout = setTimeout(later, wait)\n\t\tif (callNow) func.apply(context, args)\n\t}\n}\n\nexport default function SidebarContent() {\n  const mounted = useRef(false)\n  useEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  const [showBlockTree, setShowBlockTree] = useState(false)\n  var efficientSetShowBlockTree = useCallback(()=>{\n    if (mounted.current) {\n      debounce(() => {\n        if (mounted.current) {\n\t        setShowBlockTree(true)\n        }\n      }, 10)()\n    }\n  }, [ setShowBlockTree, mounted ])\n  useEffect(() => {\n    efficientSetShowBlockTree()\n  }, [ efficientSetShowBlockTree ])\n  \n  const { loggedIn } = useUser()\n  const { toggleSidebar } = useSidebarContext()\n\n  const matchesStartpage = useMatch('/')\n\n  const saveBlock = useSaveBlock()\n  const navigate = useNavigate()\n\n  const createBlock = useCallback(newBlock => {\n    saveBlock(newBlock)\n      .then(gottenBlock => {\n        navigate(`/${gottenBlock._id}/edit`)\n      })\n      .catch(error => {\n        console.error(error)\n      })\n  }, [ saveBlock, navigate ])\n\n  const scrollContainerRef = useRef(null)\n\n  return <div ref={scrollContainerRef} className={classes.scrollContainer}>\n    <div className={classes.content}>\n    <header className={classes.header}>\n      <div className={classes.headerBar}>\n        {\n          matchesStartpage\n          ? <h1>VoltLink</h1>\n          : <button onClick={toggleSidebar} className=\"text hasIcon\" style={{ margin: '0' }}>\n              <MenuOpenIcon className=\"icon\" />\n            </button>\n        }\n\n        <AddMenu\n          trigger={triggerProps => (\n            <button className=\"default hasIcon\" {...triggerProps}>\n              <AddIcon className=\"icon\" />\n              {/* <span className=\"hideOnSmallScreen\" style={{verticalAlign: 'middle'}}>Add</span> */}\n            </button>\n          )}\n          createBlock={createBlock}\n        />\n      </div>\n    </header>\n\n      <MenuList style={{ maxWidth: '100%' }}>\n\n        {\n          loggedIn\n            ? <a href={`${window.domains.backend}logout?redirect_to=${encodeURIComponent(window.location.toString())}`}>\n                <MenuItem className=\"roundMenuItem\">\n                  <ListItemIcon>\n                    <LogoutIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={<Localized id=\"logout\" />} />\n                </MenuItem>\n              </a>\n            : <a href={`${window.domains.backend}login?redirect_to=${encodeURIComponent(window.location.toString())}`}>\n                <MenuItem className=\"roundMenuItem\">\n                  <ListItemIcon>\n                    <LoginIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={<Localized id=\"login\" />} />\n                </MenuItem>\n              </a>\n        }\n\n        {\n          loggedIn\n            ? <MenuItem\n                component=\"a\"\n                target=\"_blank\"\n                href='https://volteuropa.workplace.com/groups/voltlink'\n                className=\"roundMenuItem\"\n              >\n                <ListItemIcon>\n                  <HelpIcon />\n                </ListItemIcon>\n                <ListItemText primary={<Localized id=\"workplace_group\" />} />\n              </MenuItem>\n            : null\n        }\n\n        <a href=\"mailto:thomas.rosen@volteuropa.org\">\n          <MenuItem className=\"roundMenuItem\">\n            <ListItemIcon>\n              <ContactIcon />\n            </ListItemIcon>\n            <ListItemText primary={<Localized id=\"contact\" />} />\n          </MenuItem>\n        </a>\n\n        <a href=\"https://github.com/voltbonn/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <MenuItem className=\"roundMenuItem\">\n            <ListItemIcon>\n              <SourceCodeIcon />\n            </ListItemIcon>\n            <ListItemText primary={<Localized id=\"source_code\" />} />\n          </MenuItem>\n        </a>\n\n      </MenuList>\n\n      <br/>\n      <Divider style={{ opacity: 0.2 }} />\n      <br/>\n\n      {\n        showBlockTree\n        ? <BlockTree\n            showBlockMenu={true}\n            scrollContainer={scrollContainerRef}\n          />\n        : null\n      }\n    </div>\n  </div>\n}\n"],"sourceRoot":""}