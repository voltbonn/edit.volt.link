{"version":3,"sources":["components/edit/LocaleSelect.js","components/SidebarContent.module.css","components/BlockTree.module.css","components/BlockTree.js","components/BlocksLoader.js","components/SidebarContent.js"],"names":["locales","_","en","de","es","pt","fr","it","nl","da","sv","nb","fi","se","mt","pl","ru","bg","tr","ar","el","ro","sl","localesArray","Object","entries","map","code","nativeName","defaultOptions","keys","LocaleSelect","defaultValue","onChange","options","style","undefined","hasOwnProperty","length","useState","changedLocale","setChangedLocale","handleLocaleChange","useCallback","newLocale","trigger","triggerProps","isOpen","className","margin","flexShrink","width","textAlign","path","mdiTranslate","toUpperCase","marginLeft","lineHeight","verticalAlign","paperProps","sx","maxHeight","close","padding","filter","includes","onClick","selected","module","exports","treeWalker","blockTypeIcons","page","person","redirect","getViewportHeight","Math","max","document","documentElement","clientHeight","window","innerHeight","treeRoots","stack","treeRootsSorted","sort","a","b","block","metadata","modified","europaIndex","findIndex","root","properties","slug","slice","unshift","nestingLevel","node","f","pop","children","_id","isLeaf","childrenSorted","i","push","BlockRow","index","data","items","props","createBlock","toggleOpenById","refetchData","showBlockMenu","setItemSize","itemRef","useRef","useEffect","current","height","getBoundingClientRect","blockMenuIsOpen","setBlockMenuIsOpen","onBlockMenuToogle","newValue","setTimeout","toggleOpen","onReloadContext","force","rowContent","ViewerAuto","dragable","size","flexGrow","classes","blockRowActions","BlockMenu","onToogle","inset","ref","display","alignItems","flexDirection","minWidth","blockRow","fakeHover","getFilteredTypes","types","BlockTree","scrollContainer","getString","useLocalization","loggedIn","useUser","outerTreeRef","innerTreeRef","outerHeight","setOuterHeight","bottomMargin","setBottomMargin","nodes","setNodes","openById","setOpenById","treeNodes","setTreeNodes","prevFetchArguments","treeType","setTreeType","setTypes","filteredTypes","archived","setArchived","viewportHeight","setHeight","timeoutId","resizeListener","clearTimeout","addEventListener","removeEventListener","useViewportHeight","updateHeight","outerBounds","top","fullHeight","isNaN","newHeight","min","useScrollPosition","updateTree","parentBlock","parent","find","n","buildTree","JSON","parse","stringify","flatTree","walker","done","next","new_done","value","getFlatTree","loadBlocks","useLoadBlocks","roots","roles","then","loadedBlocks","catch","error","console","toggleType","type2toggle","newTypes","values","every","listRef","React","itemSizes","setSize","sizes","resetAfterIndex","getItemSize","refetchDataWithFilter","MultiButton","title","justifyContent","flexWrap","gap","buttonProps","PopoverMenu","FilterList","marginTop","type","MenuItem","marginBottom","ListItemIcon","ListItemText","Localized","id","Divider","opacity","oldArchived","Archive","marginRight","overflowY","overflowX","itemSize","itemData","itemCount","innerRef","estimatedItemSize","itemKey","fontWeight","BlocksLoader","slugs","mountedRef","blocks","setBlocks","apollo_client","useApolloClient","Array","isArray","query","getBlocks_Query","variables","errors","Error","e","message","join","SidebarContent","mounted","favoriteBlocks","setFavoriteBlocks","loadFavoriteBlocks","loadFavoriteBlockIds","icon","emoji","reactionFor","log","ids","userLocales","showBlockTree","setShowBlockTree","efficientSetShowBlockTree","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","debounce","toggleSidebar","useSidebarContext","matchesStartpage","useMatch","saveBlock","useSaveBlock","navigate","useNavigate","gottenBlock","scrollContainerRef","newEvent","CustomEvent","detail","locale","bubbles","cancelable","dispatchEvent","searchButtonRef","searchButtonSize","target","useLayoutEffect","useResizeObserver","entry","contentRect","useSize","isMacLike","test","navigator","userAgent","toLowerCase","ui_locales","choose_locale_information_string","content","header","headerBar","MenuOpen","AddMenu","Add","MenuList","maxWidth","event","boxShadow","background","borderRadius","Search","secondary","href","domains","backend","encodeURIComponent","location","toString","Logout","primary","Login","fontSize","whiteSpace","Boolean","Twemoji","emojiClassName"],"mappings":"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","file":"static/js/8.94f98136.chunk.js","sourcesContent":["import { useState, useCallback } from 'react'\n\nimport {\n  MenuItem,\n} from '@mui/material'\n\nimport PopoverMenu from '../PopoverMenu.js'\n\nimport MdiIcon from '@mdi/react'\nimport {\n  mdiTranslate,\n} from '@mdi/js'\n\nconst locales = {\n  _: '??',\n  en: 'English',\n  de: 'Deutsch',\n  es: 'Español',\n  pt: 'Português',\n  fr: 'Français',\n  it: 'Italiano',\n  nl: 'Nederlands', // Dutch\n  da: 'Dansk', // Danish\n  sv: 'Svenska', // Swedish\n  nb: 'Norsk bokmål', // Norwegian\n  fi: 'Suomi', // Finish\n  se: 'Davvisámegiella (Northern Sami)', // Northern Sami\n  mt: 'Malti', // Maltese\n  pl: 'Język polski', // Polish\n  ru: 'русский язык', // Russian\n  bg: 'български език', // Bulgarian\n  tr: 'Türkçe',\n  ar: 'اَلْعَرَبِيَّة', // Arabic\n  el: 'ελληνικά', // Greek\n  ro: 'limba română', // Romanian\n  sl: 'slovenščina', // Slovenian\n  // uk: 'украї́нська мо́ва', // Ukrainian\n  // cy: 'Cymraeg', // Welsh\n}\n\nconst localesArray = Object.entries(locales)\n.map(([code, nativeName]) => ({code, nativeName}))\n\nconst defaultOptions = Object.keys(locales)\n\nfunction LocaleSelect({\n  defaultValue,\n  onChange,\n  options = defaultOptions,\n  style,\n}) {\n  if (\n    defaultValue === null\n    || defaultValue === undefined\n    || defaultValue === ''\n    || locales.hasOwnProperty(defaultValue) === false\n  ) {\n    if (options.length > 0) {\n      defaultValue = options[0]\n    } else {\n      defaultValue = '_'\n    }\n  }\n\n  const [changedLocale, setChangedLocale] = useState(defaultValue)\n\n  const handleLocaleChange = useCallback(newLocale => {\n    // TODO: get best match with fluent\n\n    setChangedLocale(newLocale)\n    \n    if (newLocale === '_') {\n      newLocale = null\n    }\n\n    if (onChange) {\n      onChange(newLocale)\n    }\n  }, [ setChangedLocale, onChange ])\n\n  return (\n    <PopoverMenu\n      trigger={(triggerProps, { isOpen }) => (\n        <button\n          {...triggerProps}\n          className=\"default hasIcon\"\n          style={{\n            margin: '0',\n            flexShrink: '0',\n            ...style,\n          }}\n        >\n          <span style={{ width: '100%', textAlign: 'start' }}>\n          {\n            changedLocale === '_'\n            ? <MdiIcon\n              path={mdiTranslate}\n              className=\"icon\"\n            />\n            : changedLocale.toUpperCase()\n          }\n          </span>\n          <span style={{\n            marginLeft: 'var(--basis)',\n            lineHeight: '1',\n            verticalAlign: 'text-top',\n          }}>\n            { isOpen ? '▴' : '▾' }\n          </span>\n        </button>\n      )}\n      paperProps={{\n        sx: {\n          maxHeight: '300px',\n        }\n      }}\n    >\n      {({ close }) => (\n        <div style={{\n          padding: 'var(--basis_x2) 0',\n        }}>\n          {\n            localesArray\n            .filter(({ code }) => options.includes(code))\n            .map(({ code, nativeName }) => (\n              <MenuItem\n                key={code}\n                onClick={() => {\n                  handleLocaleChange(code)\n                  close()\n                }}\n                className=\"roundMenuItem\"\n                selected={code === changedLocale}\n              >\n                {code === '_' ? nativeName : `${code.toUpperCase()} — ${nativeName}`}\n              </MenuItem>\n            ))\n          }\n        </div>\n      )}\n    </PopoverMenu>    \n  )\n}\n\nexport default LocaleSelect\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"SidebarContent_content__RAi8X\",\"header\":\"SidebarContent_header__1pYRG\",\"headerBar\":\"SidebarContent_headerBar__2xkje\",\"scrollContainer\":\"SidebarContent_scrollContainer__2eS9U\",\"emoji\":\"SidebarContent_emoji__3twKX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockRow\":\"BlockTree_blockRow__80Vim\",\"blockRowActions\":\"BlockTree_blockRowActions__GDOGf\",\"fakeHover\":\"BlockTree_fakeHover__TKaWl\"};","import React, { useCallback, useEffect, useState, useRef } from 'react'\nimport { VariableSizeList } from 'react-window'\n\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position'\n\nimport BlockMenu from './edit/BlockMenu.js'\nimport ViewerAuto from './view/ViewerAuto.js'\nimport MultiButton from './MultiButton.js'\n\nimport { useLocalization, Localized } from '../fluent/Localized.js'\n\nimport classes from './BlockTree.module.css'\n\nimport {\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from '@mui/material'\n\nimport {\n  MoreVertSharp as BlockMenuIcon,\n  ArrowDropDownSharp as ExpandLessIcon,\n  ArrowRightSharp as ExpandMoreIcon,\n\n  // Replay as RequeryIcon,\n  FilterList as FilterListIcon,\n  Archive as ArchiveIcon,\n\n  InsertDriveFileSharp as PageIcon,\n  // AutoAwesomeSharp as ActionIcon,\n  LinkSharp as RedirectIcon,\n  PersonSharp as PersonIcon,\n  // Crop75Sharp as ButtonIcon,\n  // TitleSharp as HeadlineIcon,\n  // NotesSharp as TextIcon,\n  // Remove as DividerIcon,\n  // EditSharp as EditIcon,\n} from '@mui/icons-material'\n\nimport useLoadBlocks from '../hooks/useLoadBlocks.js'\nimport useUser from '../hooks/useUser.js'\n\nimport PopoverMenu from './PopoverMenu.js'\n\nconst blockTypeIcons = {\n  page: <PageIcon />,\n  person: <PersonIcon />,\n  redirect: <RedirectIcon />,\n}\n\n\nconst minItemSize = 41\n\n// const getWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n// const getHeight = () => window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n\n// const getViewportWidth = () => Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\nconst getViewportHeight = () => Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)\n\nfunction useViewportHeight() {\n  // save current window width in the state object\n  let [height, setHeight] = useState(getViewportHeight())\n\n  // in this case useEffect will execute only once because\n  // it does not have any dependencies.\n  useEffect(() => {\n    // timeoutId for debounce mechanism\n    let timeoutId = null\n    const resizeListener = () => {\n      // prevent execution of previous setTimeout\n      clearTimeout(timeoutId)\n      // change width from the state object after 150 milliseconds\n      timeoutId = setTimeout(() => {\n        setHeight(getViewportHeight())\n      }, 150)\n    }\n    // set resize listener\n    window.addEventListener('resize', resizeListener)\n\n    // clean up function\n    return () => {\n      // remove resize listener\n      window.removeEventListener('resize', resizeListener)\n    }\n  }, [])\n\n  return { height }\n}\n\nfunction buildTree(nodes){\n  // Build a tree from the blocks.\n  // Where each block has a parentId property.\n  // Each tree item should have the block itself, a list of children and a nesting level.\n  \n  const treeRoots = []\n\n  for (let node of nodes) {\n    let parentBlock = null\n    if (node.block.parent) {\n      parentBlock = nodes.find(n => n._id === node.block.parent)\n      // if (!parentBlock) {\n      //   console.error('Invalid parent:')\n      //   console.error('parentBlockt', parentBlock)\n      //   console.error('node.block.parent', node.block.parent)\n      // }\n    }\n\n    if (!parentBlock) {\n      treeRoots.push(node)\n    } else {\n      // If the parentBlock has no children, create the children array.\n      if (!parentBlock.children) {\n        parentBlock.children = []\n      }\n      parentBlock.children.push(node)\n    }\n  }\n\n  return treeRoots\n}\n\nfunction* treeWalker(treeRoots) {\n  const stack = []\n \n  let treeRootsSorted = treeRoots\n    .sort((a, b) => b.block.metadata.modified > a.block.metadata.modified ? 1 : -1)\n\n  // find the index of the root with block.properties.slug === 'europa'\n  const europaIndex = treeRootsSorted.findIndex(root => root?.block?.properties?.slug === 'europa')\n\n  // remove the root at index europaIndex\n  if (europaIndex > -1) {\n    treeRootsSorted[europaIndex] = {\n      ...treeRootsSorted[europaIndex],\n      isOpen: true,\n    }\n\n    treeRootsSorted = [\n      treeRootsSorted[europaIndex],\n      ...treeRootsSorted.slice(0, europaIndex),\n      ...treeRootsSorted.slice(europaIndex + 1)\n    ]\n  }\n      \n  // Remember all the necessary data of the first node in the stack.\n  for (const root of treeRootsSorted) {\n    stack.unshift({\n      nestingLevel: 0,\n      node: root,\n    })\n  }\n \n  // Walk through the tree until we have no nodes available.\n  while (stack.length !== 0) {\n    const {\n      node: {children = [], _id, block, isOpen},\n      nestingLevel,\n    } = stack.pop()\n\n    yield {\n      _id,\n      isLeaf: children.length === 0,\n      isOpen,\n      block,\n      nestingLevel,\n    }\n \n    // Basing on the node openness state we are deciding if we need to render\n    // the child nodes (if they exist).\n    if (children.length !== 0 && isOpen) {\n      // Since it is a stack structure, we need to put nodes we want to render\n      // first to the end of the stack.\n\n      const childrenSorted = children\n        .sort((a, b) => b.block.metadata.modified > a.block.metadata.modified ? 1 : -1)\n\n      for (let i = childrenSorted.length - 1; i >= 0; i--) {\n        stack.push({\n          nestingLevel: nestingLevel + 1,\n          node: childrenSorted[i],\n        });\n      }\n    }\n  }\n}\n\nfunction getFlatTree(treeRoots){\n  const flatTree = []\n\n  const walker = treeWalker(treeRoots)\n\n  let done = false\n  while (!done) {\n    const { done: new_done, value } = walker.next()\n    done = new_done\n    if (!done) {\n      flatTree.push(value)\n    }\n  }\n\n  return flatTree\n}\n\nconst BlockRow = ({\n  index,\n  style,\n  data,\n}) => {\n  const {\n    items,\n    props,\n  } = data || []\n\n  const {\n    createBlock,\n    toggleOpenById,\n    refetchData,\n    showBlockMenu,\n    setItemSize,\n  } = props || {}\n\n  const {\n    _id,\n    isLeaf,\n    isOpen,\n    block,\n    nestingLevel,\n  } = items[index] || {}\n\n  const itemRef = useRef()\n  useEffect(() => {\n    if (typeof setItemSize === 'function' && itemRef.current) {\n      const height = itemRef.current.getBoundingClientRect().height\n      if (height > 0) {\n        setItemSize(index, ~~height)\n      }\n    }\n  }, [index, block, setItemSize]) // mention block here, to recalc the height on new data\n  \n  const [blockMenuIsOpen, setBlockMenuIsOpen] = useState(false)\n\n  const onBlockMenuToogle = useCallback(newValue => {\n    if (newValue === false) {\n      setTimeout(() => {\n        setBlockMenuIsOpen(newValue)\n      }, 200) // The fade-out animation is 200ms. Only rerender after it, for it not to loose the element.\n    } else {\n      setBlockMenuIsOpen(newValue)\n    }\n  }, [ setBlockMenuIsOpen ])\n\n  const toggleOpen = useCallback(() => {\n    if (typeof toggleOpenById === 'function') {\n      toggleOpenById(_id)\n    }\n  }, [toggleOpenById, _id])\n  \n  const onReloadContext = useCallback(() => {\n    if (typeof refetchData === 'function') {\n      setTimeout(() => {\n        refetchData({ force: true })\n      }, 200) // The fade-out animation is 200ms. Only rerender after it, for it not to loose the element.\n    }\n  }, [ refetchData ])\n\n  const rowContent = <>\n    <ViewerAuto\n      dragable={true}\n      size=\"line\"\n      block={block}\n      style={{\n        flexGrow: '1',\n        width: '100%',\n      }}\n    />\n\n    {\n      showBlockMenu === true\n      && (\n        <div className={classes.blockRowActions}>\n          <BlockMenu\n            onToogle={onBlockMenuToogle}\n            onReloadContext={onReloadContext}\n            {...{\n              block,\n              createBlock,\n              // saveType,\n            }}\n            trigger={props => (\n              <button\n                {...props}\n                className={`text hasIcon ${blockMenuIsOpen ? 'fakeHover' : ''}`}\n                style={{\n                  margin: '0',\n                  padding: 'var(--basis) 0',\n                  flexShrink: '0',\n                }}\n              >\n                <BlockMenuIcon className=\"icon\" />\n              </button>\n            )}\n          />\n        </div>\n      )\n    }\n  </>\n\n  const inset = ~~(nestingLevel * 25 + (isLeaf ? 24 : 0))\n\n  return <div\n    ref={itemRef}\n    key={block._id}\n    style={{\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'row',\n      ...style,\n      height: 'auto',\n      marginLeft: inset,\n      minWidth: `calc(100% - ${(isLeaf ? 24 : 0)}px)`,\n      width: `calc(100% - ${inset}px)`,\n    }}\n    className={`${classes.blockRow} ${blockMenuIsOpen ? classes.fakeHover : ''}`}\n  >\n    {!isLeaf && (\n      <button\n        onClick={toggleOpen}\n        className=\"text hasIcon\"\n        style={{\n          margin: '0',\n          padding: 'var(--basis) 0',\n          flexShrink: '0',\n        }}\n      >\n        {\n          isOpen\n            ? <ExpandLessIcon style={{ verticalAlign: 'middle' }} />\n            : <ExpandMoreIcon style={{ verticalAlign: 'middle' }} />\n        }\n      </button>\n    )}\n    {rowContent}\n  </div>\n}\n\nconst getFilteredTypes = types => Object.entries(types)\n  .filter(([, value]) => value === true)\n  .map(([key, ]) => key)\n\nfunction BlockTree({\n  createBlock = ()=>{},\n  scrollContainer = window,\n  showBlockMenu = true,\n}) {\n  const { getString } = useLocalization()\n  const { loggedIn } = useUser()\n\n  const outerTreeRef = useRef(null)\n  const innerTreeRef = useRef(null)\n  const [outerHeight, setOuterHeight] = useState(minItemSize)\n  const [bottomMargin, setBottomMargin] = useState(0)\n  const [nodes, setNodes] = useState([])\n  const [openById, setOpenById] = useState({})\n  const [treeNodes, setTreeNodes] = useState([])\n\n  const prevFetchArguments = useRef({})\n\n  const [treeType, setTreeType] = useState('europa') // europa / people / own_blocks\n\n  const [types, setTypes] = useState({\n    person: true,\n    page: true,\n    redirect: true,\n  })\n  const filteredTypes = getFilteredTypes(types)\n  \n  const [archived, setArchived] = useState(false)\n  function toggleArchived() {\n    setArchived(oldArchived => !oldArchived)\n  }\n\n  /*\n  const sizeMap = useRef({})\n  const setSize = useCallback((index, size) => {\n    sizeMap.current = {\n      ...sizeMap.current,\n      [index]: size,\n    }\n  }, [])\n  const getSize = useCallback(index => sizeMap.current[index] || minItemSize, [])\n  */\n\n\n  const { height: viewportHeight } = useViewportHeight()\n\n  const updateHeight = useCallback(() => {\n    if (innerTreeRef.current && outerTreeRef.current) {\n      setTimeout(() => { // TODO remove this timeout (it's used to update the initial height)\n        const outerBounds = outerTreeRef.current.getBoundingClientRect()      \n        const maxHeight = viewportHeight - outerBounds.top\n\n        const innerBounds = innerTreeRef.current.getBoundingClientRect()\n        const fullHeight = innerBounds.height\n        if (typeof fullHeight === 'number' && !isNaN(fullHeight) && fullHeight > minItemSize) {\n          const newHeight = Math.min(maxHeight, fullHeight)\n          setOuterHeight(~~(newHeight))\n          setBottomMargin(~~(Math.max(fullHeight - newHeight, 0)))\n        }\n      }, 100)\n    }\n  }, [ viewportHeight, innerTreeRef, outerTreeRef, setOuterHeight, setBottomMargin ])\n\n  useScrollPosition(updateHeight, [updateHeight], null, false, 300, scrollContainer)\n\n  const updateTree = useCallback(nodes => {\n    if (nodes.length > 0) {\n      nodes = nodes.map(node => ({\n        ...node,\n        isOpen: openById.hasOwnProperty(node._id) ? openById[node._id] : false,\n      }))\n      \n      const treeRoots = buildTree(JSON.parse(JSON.stringify(nodes)))\n      const flatTree = getFlatTree(treeRoots)\n      setTreeNodes(flatTree)\n    } else {\n      setTreeNodes([])\n    }\n    updateHeight()\n  }, [setTreeNodes, updateHeight, openById])\n\n  const loadBlocks = useLoadBlocks()\n  const refetchData = useCallback(options => {\n    let {\n      force = false,\n      filteredTypes,\n      archived,\n    } = options || {}\n\n    let roots = null\n    let roles = ['viewer','editor','owner']\n\n    if (treeType === 'europa') {\n      roots = ['6249c879fcaf12b124914396'] // TODO: don't hard code the id of europa \n      filteredTypes = [\n        'page',\n        'redirect',\n      ]\n      archived = false\n    } else if (treeType === 'people') {\n      filteredTypes = [\n        'person',\n      ]\n      archived = false\n    } else if (treeType === 'own_blocks') {\n      roles = ['editor', 'owner']\n    }\n\n    if (\n      force === true\n      || prevFetchArguments.current.archived !== archived\n      || prevFetchArguments.current.types !== filteredTypes\n    ) {\n      prevFetchArguments.current.types = filteredTypes\n      prevFetchArguments.current.archived = archived\n      \n      loadBlocks({ types: filteredTypes, archived, roots, roles })\n        .then(async loadedBlocks => {\n          const nodes = loadedBlocks\n          .map(block => ({\n            _id: block._id,\n            block,\n            children: [],\n            isOpen: false,\n          }))\n\n          setNodes(nodes)\n          updateTree(nodes)\n        })\n        .catch(error => console.error(error))\n    }\n  }, [treeType, loadBlocks, setNodes, updateTree])\n\n  // useEffect(() => {\n  //   refetchData()\n  // }, [ refetchData ])\n\n\n\n\n\n  // START Filter\n\n  const toggleType = useCallback(type2toggle => {\n    const newTypes = { ...types }\n    newTypes[type2toggle] = !newTypes[type2toggle]\n\n    const typesValues = Object.values(newTypes)\n    if (!typesValues.every(value => value === false)) {\n      setTypes(newTypes)\n    }\n  }, [ types, setTypes ])\n\n  useEffect(() => {\n    refetchData({\n      filteredTypes: getFilteredTypes(types),\n      archived,\n    })\n  }, [ types, archived, refetchData ])\n\n  // END Filter\n\n\n\n  const listRef = useRef(null)\n  const [itemSizes, setSize] = React.useState([])\n  const setItemSize = React.useCallback((index, size) => {\n    if (typeof setSize === 'function') {\n      setSize(sizes => ({\n        ...sizes,\n        [index]: size\n      }))\n      if (!!listRef.current && typeof listRef.current.resetAfterIndex === 'function') {\n        listRef.current.resetAfterIndex(index, false)\n      }\n    }\n  }, [])\n  const getItemSize = React.useCallback(index => {\n    return itemSizes[index] || minItemSize\n  }, [itemSizes])\n\n\n\n\n  const toggleOpenById = useCallback((_id) => {\n    openById[_id] = !openById[_id]\n    setOpenById(openById)\n    updateTree(nodes)\n  }, [setOpenById, openById, updateTree, nodes])\n\n  const refetchDataWithFilter = useCallback(options => {\n    refetchData({\n      ...options,\n      filteredTypes: getFilteredTypes(types),\n      archived,\n    })\n  }, [ types, archived, refetchData ])\n  \n  return <>\n    <div>\n      <MultiButton\n        defaultValue={treeType}\n        items={\n          loggedIn\n            ? [\n              { value: 'europa', title: 'Volt Europa' },\n              { value: 'people', title: getString('block_menu_type_label_plural_person') },\n              { value: 'own_blocks', title: getString('block_tree_own_blocks') }\n            ]\n            : [\n              {value: 'europa', title: 'Volt Europa' },\n              {value: 'people', title: getString('block_menu_type_label_plural_person') },\n            ]\n        }\n        onChange={setTreeType}\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          margin: 'calc(-2 * var(--basis)) 0 var(--basis_x4) 0',\n          justifyContent: 'stretch',\n          flexWrap: 'wrap',\n          gap: 'var(--basis_x2)',\n        }}\n        buttonProps={{\n          style: {\n            flexGrow: 1,\n            justifyContent: 'center',\n            flexShrink: 0,\n            margin: 0,\n          }\n        }}\n      />\n    </div>\n\n    <div style={{\n      display: 'flex',\n      alignItems: 'center',\n      margin: '0 0 var(--basis_x2) 0',\n      gap: 'var(--basis)',\n    }}>\n\n      {\n        loggedIn && treeType === 'own_blocks'\n        ? <PopoverMenu\n          trigger={triggerProps => (\n            <button\n              {...triggerProps}\n              className=\"text hasIcon\"\n              style={{\n                flexShrink: '0',\n                margin: '0',\n              }}\n            >\n              <FilterListIcon className=\"icon\" />\n              <span style={{verticalAlign: 'middle'}}>Filter</span>\n            </button>\n          )}\n        >\n          {/*\n            { value: 'page', icon: <PageIcon className=\"icon\"/>, title: getString('block_menu_type_label_plural_page') },\n            { value: 'person', icon: <PersonIcon className=\"icon\" />, title: getString('block_menu_type_label_plural_person') },\n            { value: 'redirect', icon: <RedirectIcon className=\"icon\" />, title: getString('block_menu_type_label_plural_redirect') },\n          */}\n\n          <div style={{ marginTop: '8px' }}></div>\n\n          {\n            Object.keys(types)\n              .map(type => (\n                <MenuItem\n                  className=\"roundMenuItem\"\n                  key={type}\n                  onClick={() => toggleType(type)}\n                  selected={filteredTypes.includes(type)}\n                  sx={{\n                    marginTop: '2px !important',\n                    marginBottom: '2px !important',\n                  }}\n                >\n                  <ListItemIcon>\n                    {blockTypeIcons[type]}\n                  </ListItemIcon>\n                  <ListItemText>\n                    <Localized id={'block_menu_type_label_plural_'+type} />\n                  </ListItemText>\n                </MenuItem>\n              ))\n          }\n\n          <Divider style={{ opacity: 'var(--alpha-less)'}} />\n\n          <MenuItem\n            className=\"roundMenuItem\"\n            onClick={toggleArchived}\n            selected={archived === true}\n            sx={{\n              marginBottom: '2px !important',\n            }}\n          >\n            <ListItemIcon>\n              <ArchiveIcon className=\"icon\" />\n            </ListItemIcon>\n            <ListItemText>\n              <Localized id={archived === true ? 'filter_menu_showing_archiv' : 'filter_menu_show_archiv'} />\n            </ListItemText>\n          </MenuItem>\n\n        </PopoverMenu>\n        : null\n      }\n\n      {/*\n      <button\n        className=\"text hasIcon\"\n        onClick={refetchDataWithFilter}\n        style={{\n          flexShrink: '0',\n          margin: '0px',\n        }}\n      >\n        <RequeryIcon className=\"icon\" />\n        <span style={{verticalAlign: 'middle'}}>Reload</span>\n      </button>\n      */}\n    </div>\n\n    <div\n      style={{\n        height: outerHeight,\n        marginRight: '-12px',\n        marginLeft: '-12px',\n        marginBottom: bottomMargin,\n        overflowY: 'visible',\n        overflowX: 'auto',\n      }}\n      ref={outerTreeRef}\n    >\n      <VariableSizeList\n        ref={listRef}\n        itemSize={getItemSize}\n        itemData={{\n          items: treeNodes,\n          props: {\n            createBlock,\n            toggleOpenById,\n            refetchData: refetchDataWithFilter,\n            showBlockMenu,\n            setItemSize,\n          }\n        }}\n        itemCount={treeNodes.length}\n        innerRef={innerTreeRef}\n        // onScroll={updateHeight}\n        height={outerHeight}\n        width=\"auto\"\n        style={{\n          // overflow: 'visible',\n          overflowY: 'hidden',\n          overflowX: 'visible',\n          // overflowX: 'hidden',\n        }}\n        estimatedItemSize={minItemSize}\n        itemKey={(index, data) => data.items[index]._id}\n      >\n        {BlockRow}\n      </VariableSizeList>\n      {\n        treeNodes.length === 0\n          ? <p style={{\n            textAlign: 'center',\n            fontWeight: 'bold',\n          }}><Localized id=\"blocktree_no_nodes_to_show\" /></p>\n          : null\n      }\n    </div>\n  </>\n}\n\nexport default BlockTree\n\n\n\n// const defaultButtonStyle = { fontFamily: 'Courier New' }\n\n// Tree component can work with any possible tree structure because it uses an\n// iterator function that the user provides. Structure, approach, and iterator\n// function below is just one of many possible variants.\n// const defaultTree = {\n//   name: 'Root #1',\n//   id: 'root-1',\n//   children: [\n//     {\n//       children: [\n//         {id: 'child-2', name: 'Child #2'},\n//         {id: 'child-3', name: 'Child #3'},\n//         {id: 'child-5', name: 'Child #3'},\n//         {id: 'child-6', name: 'Child #3'},\n//         {id: 'child-7', name: 'Child #3'},\n//         {id: 'child-8', name: 'Child #3'},\n//         {id: 'child-9', name: 'Child #3'},\n//         {id: 'child-10', name: 'Child #3'},\n//         {id: 'child-11', name: 'Child #3'},\n//       ],\n//       id: 'child-1',\n//       name: 'Child #1',\n//     },\n//   ],\n// }\n\n  /*\nasync function* treeWalker(refresh) {\n  const stack = []\n \n  // Remember all the necessary data of the first node in the stack.\n  stack.push({\n    nestingLevel: 0,\n    node: tree,\n  })\n \n  // Walk through the tree until we have no nodes available.\n  while (stack.length !== 0) {\n    const {\n      node: {children = [], id, name},\n      nestingLevel,\n    } = stack.pop()\n \n    // Here we are sending the information about the node to the Tree component\n    // and receive an information about the openness state from it. The\n    // `refresh` parameter tells us if the full update of the tree is requested;\n    // basing on it we decide to return the full node data or only the node\n    // id to update the nodes order.\n    const isOpened = yield refresh\n      ? {\n          id,\n          isLeaf: children.length === 0,\n          isOpenByDefault: false,\n          name,\n          nestingLevel,\n        }\n      : id\n \n    // Basing on the node openness state we are deciding if we need to render\n    // the child nodes (if they exist).\n    if (children.length !== 0 && isOpened) {\n      // Since it is a stack structure, we need to put nodes we want to render\n      // first to the end of the stack.\n      for (let i = children.length - 1; i >= 0; i--) {\n        stack.push({\n          nestingLevel: nestingLevel + 1,\n          node: children[i],\n        });\n      }\n    }\n  }\n}\n*/\n\n  /*\n  // Node component receives all the data we created in the `treeWalker` +\n  // internal openness state (`isOpen`), function to change internal openness\n  // state (`toggle`) and `style` parameter that should be added to the root div.\n  const Node = ({data: {isLeaf, name, nestingLevel}, isOpen, style, toggle}) => {\n\n    const toogleAndUpdate = () => {\n      toggle()\n      setTimeout(updateHeight, 100)\n    }\n\n    return <div\n      style={{\n        ...style,\n        alignItems: 'center',\n        display: 'flex',\n        marginLeft: nestingLevel * 30 + (isLeaf ? 48 : 0),\n      }}\n    >\n      {!isLeaf && (\n        <div>\n          <button\n            type=\"button\"\n            onClick={toogleAndUpdate}\n            style={defaultButtonStyle}\n          >\n            {isOpen ? '-' : '+'}\n          </button>\n        </div>\n      )}\n      <div>{name}</div>\n    </div>\n  }\n*/\n","import { useRef, useState, useEffect } from 'react'\n\nimport { useApolloClient } from '@apollo/client'\nimport { getBlocks_Query } from '../graphql/queries'\n\nexport default function BlocksLoader({ slugs = [], children, ...props }) {\n  const mountedRef = useRef(false)\n  useEffect(() => {\n    mountedRef.current = true\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  const [blocks, setBlocks] = useState([])\n\n  const apollo_client = useApolloClient()\n\n  useEffect(() => {\n    if (Array.isArray(slugs) && slugs.length > 0) {\n      apollo_client.query({\n        query: getBlocks_Query,\n        variables: {\n          slugs,\n        },\n      })\n        .then(async ({ errors, data }) => {\n          if (mountedRef.current === true) {\n            if (Array.isArray(errors) || !Array.isArray(data.blocks)) {\n              throw new Error(errors.map(e => e.message).join('\\n'))\n            } else {\n              setBlocks(data.blocks)\n            }\n          }\n        })\n        .catch(async error => {\n          console.error('error', error)\n          setBlocks([])\n        })\n    } else {\n      setBlocks([])\n    }\n  }, [slugs, apollo_client])\n\n  if (blocks === null || blocks.length === 0) {\n    return null\n  }\n\n  if (typeof children !== 'function') {\n    return null\n  }\n\n  return children({...props, blocks, slugs})\n}\n","import React, { useState, useCallback, useRef, useEffect } from 'react'\nimport classes from './SidebarContent.module.css'\n\nimport {\n  MenuList,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from '@mui/material'\n\nimport {\n  MenuOpen as MenuOpenIcon,\n  Add as AddIcon,\n\n  Login as LoginIcon,\n  Logout as LogoutIcon,\n\n  LanguageSharp as LocaleChooserIcon,\n  Search as SearchIcon,\n} from '@mui/icons-material'\n\nimport useSaveBlock from '../hooks/useSaveBlock.js'\n\nimport { useNavigate, useMatch } from 'react-router-dom'\n\nimport { Localized, useLocalization } from '../fluent/Localized.js'\nimport useUser from '../hooks/useUser.js'\nimport useLoadBlocks from '../hooks/useLoadBlocks.js'\nimport { useSidebarContext } from './Sidebar.js'\nimport AddMenu from './edit/AddMenu.js'\nimport BlockTree from './BlockTree.js'\nimport BlocksLoader from './BlocksLoader.js'\nimport Twemoji from './Twemoji.js'\nimport ViewerAuto from './view/ViewerAuto.js'\n\nimport LocaleSelect from './edit/LocaleSelect.js'\nimport { locales } from '../fluent/l10n.js'\n\nimport useResizeObserver from '@react-hook/resize-observer'\n\nconst useSize = target => {\n  const mountedRef = React.useRef(false)\n  useEffect(() => {\n    mountedRef.current = true\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  const [size, setSize] = React.useState()\n\n  React.useLayoutEffect(() => {\n    if (mountedRef.current === true) {\n      setSize(target.current.getBoundingClientRect())\n    }\n  }, [target])\n\n  // Where the magic happens\n  useResizeObserver(target, (entry) => {\n    if (mountedRef.current === true) {\n      setSize(entry.contentRect)\n    }\n  })\n  return size\n}\n\nfunction debounce(func, wait, immediate) {\n  // Source: underscore.js\n\tvar timeout\n\treturn function() {\n\t\tvar context = this, args = arguments\n\t\tvar later = function() {\n\t\t\ttimeout = null\n\t\t\tif (!immediate) func.apply(context, args)\n\t\t}\n\t\tvar callNow = immediate && !timeout\n\t\tclearTimeout(timeout)\n\t\ttimeout = setTimeout(later, wait)\n\t\tif (callNow) func.apply(context, args)\n\t}\n}\n\nexport default function SidebarContent() {\n  const mounted = useRef(false)\n  useEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  const [favoriteBlocks, setFavoriteBlocks] = useState([])\n  const loadBlocks = useLoadBlocks()\n  useEffect(() => {\n    if (mounted.current) {\n      const loadFavoriteBlocks = async () => {\n        const loadFavoriteBlockIds = (await loadBlocks({\n          types: ['reaction'],\n          roles: ['owner'],\n          archived: false,\n        }))\n          .filter(block => block.properties?.icon?.emoji === '⭐️')\n          .map(block => block.properties.reactionFor)\n        console.log('loadFavoriteBlockIds', loadFavoriteBlockIds)\n\n        const favoriteBlocks = await loadBlocks({\n          ids: loadFavoriteBlockIds\n        })\n        console.log('favoriteBlocks', favoriteBlocks)\n        setFavoriteBlocks(favoriteBlocks)\n      }\n      loadFavoriteBlocks()\n    }\n  }, [loadBlocks])\n\n  const {\n    getString,\n    userLocales = [],\n  } = useLocalization()\n\n  const [showBlockTree, setShowBlockTree] = useState(false)\n  var efficientSetShowBlockTree = useCallback(()=>{\n    if (mounted.current) {\n      debounce(() => {\n        if (mounted.current) {\n\t        setShowBlockTree(true)\n        }\n      }, 10)()\n    }\n  }, [ setShowBlockTree, mounted ])\n  useEffect(() => {\n    efficientSetShowBlockTree()\n  }, [ efficientSetShowBlockTree ])\n  \n  const { loggedIn } = useUser()\n  const { toggleSidebar } = useSidebarContext()\n\n  const matchesStartpage = useMatch('/')\n\n  const saveBlock = useSaveBlock()\n  const navigate = useNavigate()\n\n  const createBlock = useCallback(({ type }) => {\n    if (typeof type === 'string' && type.length > 0) {\n      saveBlock({\n        type,\n      })\n        .then(gottenBlock => {\n          navigate(`/${gottenBlock._id}/edit`)\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    }\n  }, [saveBlock, navigate])\n\n  const scrollContainerRef = useRef(null)\n\n  const handleLocaleChange = useCallback(newLocale => {\n    const newEvent = new CustomEvent('change_locale', {\n      detail: {\n        locale: newLocale,\n      },\n      bubbles: true,\n      cancelable: false,\n    })\n    document.dispatchEvent(newEvent)\n  }, [])\n\n  const searchButtonRef = useRef(null)\n  const searchButtonSize = useSize(searchButtonRef)\n\n  const openSearch = () => {\n    const event = new CustomEvent('open_search')\n    window.dispatchEvent(event)\n  }\n  // const isMacLike = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform) // source: https://stackoverflow.com/questions/10527983/best-way-to-detect-mac-os-x-or-windows-computers-with-javascript-or-jquery?noredirect=1&lq=1\n  const isMacLike = /(macintosh|macintel|macppc|mac68k|macos|iphone|ipad|ipod)/i.test(window.navigator.userAgent.toLowerCase())\n\n  const ui_locales = [\n    '_',\n    ...Object.keys(locales),\n  ]\n\n  const choose_locale_information_string = getString('choose_locale_information')\n\n  return <div ref={scrollContainerRef} className={classes.scrollContainer}>\n    <div className={classes.content}>\n    <header className={classes.header}>\n      <div className={classes.headerBar}>\n        {\n          !matchesStartpage\n          ? <button onClick={toggleSidebar} className=\"text hasIcon\" style={{ margin: '0' }}>\n              <MenuOpenIcon className=\"icon\" />\n            </button>\n          : null\n        }\n\n          {\n            matchesStartpage\n              ? <h1>Volt.Link</h1>\n              : <h2 style={{ margin: 0 }}>Volt.Link</h2>\n          }\n\n          <AddMenu\n            trigger={triggerProps => (\n              <button className=\"default hasIcon\" {...triggerProps}>\n                <AddIcon className=\"icon\" />\n                {/* <span className=\"hideOnSmallScreen\" style={{verticalAlign: 'middle'}}>Add</span> */}\n              </button>\n            )}\n            createBlock={createBlock}\n          />\n      </div>\n    </header>\n\n      <MenuList style={{ maxWidth: '100%' }}>\n\n        <MenuItem\n          ref={searchButtonRef}\n          onClick={openSearch}\n          style={{\n            width: '100%',\n            justifyContent: 'space-between',\n            // boxShadow: 'inset 0 0 0 1px rgba(var(--background-rgb), var(--alpha))',\n            boxShadow: '0 0 0 1px var(--background)',\n            background: 'var(--background)',\n\n            // the following replaces the roundMenuItem-css-class\n            borderRadius: 'var(--basis)',\n            margin: '0',\n            padding: 'var(--basis) var(--basis_x2)',\n            // end of the roundMenuItem-css-class stuff\n          }}\n        >\n          <ListItemIcon>\n            <SearchIcon />\n          </ListItemIcon>\n          <ListItemText\n            secondary={<span style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}>\n              <Localized id=\"search\" />\n\n              {\n                searchButtonSize?.width > 500\n                  ? (\n                    isMacLike\n                      ? <kbd>⌘ K</kbd>\n                      : <kbd>Ctrl+K</kbd>\n                  )\n                  : null\n              }\n              {/*\n              Command / Cmd: ⌘\n              Shift: ⇧\n              Option / Alt: ⌥\n              Control / Ctrl: ⌃\n              Caps Lock: ⇪\n            */}\n            </span>}\n          />\n        </MenuItem>\n\n        <br />\n\n        {\n          loggedIn\n            ? <a href={`${window.domains.backend}logout?redirect_to=${encodeURIComponent(window.location.toString())}`}>\n              <MenuItem className=\"clickable_card\" style={{\n                // the following replaces the roundMenuItem-css-class\n                borderRadius: 'var(--basis)',\n                margin: '0',\n                padding: 'var(--basis) var(--basis_x2)',\n                // end of the roundMenuItem-css-class stuff\n              }}>\n                <ListItemIcon>\n                  <LogoutIcon />\n                </ListItemIcon>\n                <ListItemText primary={<Localized id=\"logout\" />} />\n              </MenuItem>\n            </a>\n            : <a href={`${window.domains.backend}login?redirect_to=${encodeURIComponent(window.location.toString())}`}>\n              <MenuItem className=\"clickable_card\" style={{\n                // the following replaces the roundMenuItem-css-class\n                borderRadius: 'var(--basis)',\n                margin: '0',\n                padding: 'var(--basis) var(--basis_x2)',\n                // end of the roundMenuItem-css-class stuff\n              }}>\n                <ListItemIcon>\n                  <LoginIcon />\n                </ListItemIcon>\n                <ListItemText primary={<Localized id=\"login\" />} />\n              </MenuItem>\n            </a>\n        }\n\n        <MenuItem\n          className=\"clickable_card\"\n          style={{\n            // the following replaces the roundMenuItem-css-class\n            borderRadius: 'var(--basis)',\n            margin: '0',\n            padding: 'var(--basis) var(--basis_x2)',\n            // end of the roundMenuItem-css-class stuff\n          }}\n        >\n          <ListItemIcon>\n            <LocaleChooserIcon />\n          </ListItemIcon>\n          <ListItemText\n            primary={<>\n              <span style={{\n                marginRight: 'var(--basis_x2)',\n                verticalAlign: 'middle',\n              }}>\n                <Localized id=\"choose_locale\" />\n              </span>\n              <LocaleSelect\n                onChange={handleLocaleChange}\n                defaultValue={userLocales[0]}\n                options={ui_locales}\n                style={{\n                  fontSize: 'inherit',\n                  padding: '4px 8px',\n                  verticalAlign: 'middle',\n                }}\n              />\n            </>}\n            secondary={<>\n              {\n                typeof choose_locale_information_string === 'string'\n                  && choose_locale_information_string !== ''\n                  ? <span style={{ marginBottom: '0', whiteSpace: 'normal' }}>\n                    <Localized id=\"choose_locale_information\" />\n                  </span>\n                  : null\n              }\n            </>}\n          />\n        </MenuItem>\n\n        <br />\n\n        <BlocksLoader slugs={[\n          'glossary',\n          'vip',\n          'tools',\n        ]}>\n          {({ blocks, slugs }) => {\n            return slugs\n              .map(slug => {\n                const block = blocks.find(block => block?.properties?.slug === slug)\n                if (block) {\n                  return <ViewerAuto key={block._id} block={block} />\n                }\n                return null\n              })\n              .filter(Boolean)\n          }}\n        </BlocksLoader>\n\n        <br />\n\n        <BlocksLoader slugs={[\n          'volt_link_workplace_group',\n          'stats',\n          'volt_link_source_code',\n          'volt_link_contact',\n          'imprint',\n          'privacy_policy',\n        ]}>\n          {({ blocks, slugs }) => {\n            return slugs\n              .map(slug => {\n                const block = blocks.find(block => block?.properties?.slug === slug)\n                if (block) {\n                  return <ViewerAuto key={block._id} block={block} />\n                }\n                return null\n              })\n              .filter(Boolean)\n          }}\n        </BlocksLoader>\n\n      </MenuList>\n\n\n      {\n        loggedIn\n          ? <>\n            <br />\n            <Divider style={{ opacity: 0.2, borderRadius: '10px' }} />\n            <br />\n            <h2 style={{ margin: '0 calc(1.85 * var(--basis)) var(--basis_x2) calc(1.85 * var(--basis))' }}>\n              <Twemoji emojiClassName={classes.emoji} emoji=\"⭐️\" /> <Localized id=\"favorites_heading\" />\n            </h2>\n            <p className=\"body2\" style={{ opacity: 0.8, margin: '0 calc(1.85 * var(--basis)) var(--basis_x2) calc(1.85 * var(--basis))' }}>\n              <Localized id=\"favorites_description\" />\n            </p>\n            {\n              favoriteBlocks.length > 0\n                ? favoriteBlocks\n                  .map(block => {\n                    if (block) {\n                      return <ViewerAuto key={block._id} block={block} />\n                    }\n                    return null\n                  })\n                  .filter(Boolean)\n              : null\n            }\n          </>\n          : null\n      }\n\n      <br />\n      <Divider style={{ opacity: 0.2, borderRadius: '10px' }} />\n      <br />\n      <br />\n\n      {/* All blocks: */}\n      {\n        showBlockTree\n        ? <BlockTree\n            showBlockMenu={true}\n            scrollContainer={scrollContainerRef}\n          />\n        : null\n      }\n    </div>\n  </div>\n}\n"],"sourceRoot":""}