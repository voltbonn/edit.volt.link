{"version":3,"sources":["hooks/useSaveBlock.js","components/edit/LocaleSelect.js","components/SidebarContent.module.css","components/BlockTree.module.css","components/BlockTree.js","components/BlocksLoader.js","components/SidebarContent.js"],"names":["removeProperty","obj","prop","i","JSON","parse","stringify","hasOwnProperty","useSaveBlock","getString","useLocalization","apollo_client","useApolloClient","useSnackbar","enqueueSnackbar","closeSnackbar","handleSaveBlock","useCallback","initialBlock","Promise","final_resolve","snackbarKey","newBlock","Array","isArray","content","map","contentConfig","blockId","loadingDataPromise","resolve","mutate","mutation","saveBlock_Mutation","variables","block","then","a","data","error","variant","preventDuplicate","autoHideDuration","saveBlock","catch","console","message","race","setTimeout","response","persist","locales","_","en","de","es","pt","fr","it","nl","da","sv","nb","fi","se","mt","pl","ru","bg","tr","ar","el","ro","sl","localesArray","Object","entries","code","nativeName","defaultOptions","keys","LocaleSelect","defaultValue","onChange","options","style","undefined","length","useState","changedLocale","setChangedLocale","handleLocaleChange","newLocale","trigger","triggerProps","isOpen","className","margin","flexShrink","width","textAlign","path","mdiTranslate","toUpperCase","marginLeft","lineHeight","verticalAlign","paperProps","sx","maxHeight","close","padding","filter","includes","onClick","selected","module","exports","treeWalker","blockTypeIcons","page","person","redirect","getViewportHeight","Math","max","document","documentElement","clientHeight","window","innerHeight","treeRoots","stack","treeRootsSorted","sort","b","metadata","modified","europaIndex","findIndex","root","properties","slug","slice","unshift","nestingLevel","node","f","pop","children","_id","isLeaf","childrenSorted","push","BlockRow","index","items","props","createBlock","toggleOpenById","refetchData","showBlockMenu","setItemSize","itemRef","useRef","useEffect","current","height","getBoundingClientRect","blockMenuIsOpen","setBlockMenuIsOpen","onBlockMenuToogle","newValue","toggleOpen","onReloadContext","force","rowContent","ViewerAuto","dragable","size","flexGrow","classes","blockRowActions","BlockMenu","onToogle","inset","ref","display","alignItems","flexDirection","minWidth","blockRow","fakeHover","getFilteredTypes","types","BlockTree","scrollContainer","loggedIn","useUser","searchButtonRef","searchButtonSize","target","mountedRef","React","setSize","useLayoutEffect","useResizeObserver","entry","contentRect","useSize","outerTreeRef","innerTreeRef","outerHeight","setOuterHeight","bottomMargin","setBottomMargin","nodes","setNodes","openById","setOpenById","treeNodes","setTreeNodes","prevFetchArguments","treeType","setTreeType","setTypes","filteredTypes","archived","setArchived","viewportHeight","setHeight","timeoutId","resizeListener","clearTimeout","addEventListener","removeEventListener","useViewportHeight","updateHeight","outerBounds","top","fullHeight","isNaN","newHeight","min","useScrollPosition","updateTree","parentBlock","parent","find","n","buildTree","flatTree","walker","done","next","new_done","value","getFlatTree","loadBlocks","useLoadBlocks","roots","roles","loadedBlocks","toggleType","type2toggle","newTypes","values","every","listRef","itemSizes","sizes","resetAfterIndex","getItemSize","refetchDataWithFilter","isMacLike","test","navigator","userAgent","toLowerCase","MultiButton","title","justifyContent","flexWrap","gap","buttonProps","MenuItem","event","CustomEvent","dispatchEvent","boxShadow","background","borderRadius","ListItemIcon","Search","ListItemText","secondary","Localized","id","PopoverMenu","FilterList","marginTop","type","marginBottom","Divider","opacity","oldArchived","Archive","marginRight","overflowY","overflowX","itemSize","itemData","itemCount","innerRef","estimatedItemSize","itemKey","fontWeight","BlocksLoader","slugs","blocks","setBlocks","query","getBlocks_Query","errors","Error","e","join","SidebarContent","mounted","userLocales","showBlockTree","setShowBlockTree","efficientSetShowBlockTree","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","debounce","toggleSidebar","useSidebarContext","matchesStartpage","useMatch","navigate","useNavigate","gottenBlock","scrollContainerRef","newEvent","detail","locale","bubbles","cancelable","ui_locales","choose_locale_information_string","header","headerBar","MenuOpen","AddMenu","Add","MenuList","maxWidth","href","domains","backend","encodeURIComponent","location","toString","Logout","primary","Login","fontSize","Boolean"],"mappings":"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","file":"static/js/8.f367b68f.chunk.js","sourcesContent":["import { useCallback } from 'react'\n\nimport { useLocalization } from '../fluent/Localized.js'\n\nimport { useApolloClient } from '@apollo/client'\nimport { saveBlock_Mutation } from '../graphql/mutations.js'\n\nimport { useSnackbar } from 'notistack'\n\nfunction removeProperty(obj, prop) {\n  // remove property from objects, arrays and sub-objects\n\n  obj = JSON.parse(JSON.stringify(obj)) // clone object to make everything mutable\n\n  if (obj.hasOwnProperty(prop)) {\n    delete obj[prop]\n  }\n  for (const i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (typeof obj[i] == 'object' && obj[i] !== null) {\n        removeProperty(obj[i], prop)\n      }\n    }\n  }\n\n  return obj\n}\n\nfunction useSaveBlock() {\n  const { getString } = useLocalization()\n\n  const apollo_client = useApolloClient()\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n\n  const handleSaveBlock = useCallback((initialBlock) => {\n    return new Promise(final_resolve => {\n      let snackbarKey = null\n\n      let newBlock = {...initialBlock}\n      newBlock = removeProperty(newBlock, '__typename')\n      if (newBlock.hasOwnProperty('content') && Array.isArray(newBlock.content)) {\n        newBlock.content = newBlock.content.map(contentConfig => ({\n          blockId: contentConfig.blockId,\n        }))\n      }\n\n      const loadingDataPromise = new Promise(resolve => {\n        apollo_client.mutate({\n          mutation: saveBlock_Mutation,\n          variables: {\n            block: newBlock\n          },\n        })\n          .then(async ({ data }) => {\n            resolve('got-data')\n\n            if (snackbarKey !== null) {\n              closeSnackbar(snackbarKey)\n            }\n\n            if (typeof data.error === 'string') {\n              if (data.error === 'no_edit_permission') {\n                enqueueSnackbar(getString('path_editor_edit_permission_error'), {\n                  variant: 'error',\n                  preventDuplicate: true,\n                  autoHideDuration: 2000,\n                })\n              } else {\n                enqueueSnackbar('' + data.error, {\n                  variant: 'error',\n                  preventDuplicate: true,\n                  autoHideDuration: 2000,\n                })\n              }\n            } else {\n              const block = data.saveBlock\n\n              final_resolve(block)\n\n              enqueueSnackbar(getString('path_editor_status_saved'), {\n                variant: 'success',\n                preventDuplicate: false,\n                autoHideDuration: 2000,\n              })\n            }\n          })\n          .catch(async error => {\n            console.error(error)\n            resolve('got-error')\n\n            if (snackbarKey !== null) {\n              closeSnackbar(snackbarKey)\n            }\n\n            enqueueSnackbar(getString('path_editor_status_error_while_saving', {\n              error: error.message,\n            }), {\n              variant: 'error',\n              preventDuplicate: true,\n              autoHideDuration: 2000,\n            })\n          })\n      })\n\n      // Show a loading-info-snackbar if loading the data takes too long.\n      Promise.race([\n        new Promise(resolve => {\n          setTimeout(() => {\n            resolve('show-loading')\n          }, 300)\n        }),\n        loadingDataPromise,\n      ])\n        .then(response => {\n          if (response === 'show-loading') {\n            snackbarKey = enqueueSnackbar(getString('path_editor_status_started_saving'), {\n              persist: true,\n              preventDuplicate: true,\n            })\n          }\n        })\n        .catch(console.error)\n\n    })\n  }, [\n    enqueueSnackbar,\n    closeSnackbar,\n    apollo_client,\n    getString,\n  ])\n\n  return handleSaveBlock\n}\n\nexport default useSaveBlock\n","import { useState, useCallback } from 'react'\n\nimport {\n  MenuItem,\n} from '@mui/material'\n\nimport PopoverMenu from '../PopoverMenu.js'\n\nimport MdiIcon from '@mdi/react'\nimport {\n  mdiTranslate,\n} from '@mdi/js'\n\nconst locales = {\n  _: '??',\n  en: 'English',\n  de: 'Deutsch',\n  es: 'Español',\n  pt: 'Português',\n  fr: 'Français',\n  it: 'Italiano',\n  nl: 'Nederlands', // Dutch\n  da: 'Dansk', // Danish\n  sv: 'Svenska', // Swedish\n  nb: 'Norsk bokmål', // Norwegian\n  fi: 'Suomi', // Finish\n  se: 'Davvisámegiella (Northern Sami)', // Northern Sami\n  mt: 'Malti', // Maltese\n  pl: 'Język polski', // Polish\n  ru: 'русский язык', // Russian\n  bg: 'български език', // Bulgarian\n  tr: 'Türkçe',\n  ar: 'اَلْعَرَبِيَّة', // Arabic\n  el: 'ελληνικά', // Greek\n  ro: 'limba română', // Romanian\n  sl: 'slovenščina', // Slovenian\n  // uk: 'украї́нська мо́ва', // Ukrainian\n  // cy: 'Cymraeg', // Welsh\n}\n\nconst localesArray = Object.entries(locales)\n.map(([code, nativeName]) => ({code, nativeName}))\n\nconst defaultOptions = Object.keys(locales)\n\nfunction LocaleSelect({\n  defaultValue,\n  onChange,\n  options = defaultOptions,\n  style,\n}) {\n  if (\n    defaultValue === null\n    || defaultValue === undefined\n    || defaultValue === ''\n    || locales.hasOwnProperty(defaultValue) === false\n  ) {\n    if (options.length > 0) {\n      defaultValue = options[0]\n    } else {\n      defaultValue = '_'\n    }\n  }\n\n  const [changedLocale, setChangedLocale] = useState(defaultValue)\n\n  const handleLocaleChange = useCallback(newLocale => {\n    // TODO: get best match with fluent\n\n    setChangedLocale(newLocale)\n    \n    if (newLocale === '_') {\n      newLocale = null\n    }\n\n    if (onChange) {\n      onChange(newLocale)\n    }\n  }, [ setChangedLocale, onChange ])\n\n  return (\n    <PopoverMenu\n      trigger={(triggerProps, { isOpen }) => (\n        <button\n          {...triggerProps}\n          className=\"default hasIcon\"\n          style={{\n            margin: '0',\n            flexShrink: '0',\n            ...style,\n          }}\n        >\n          <span style={{ width: '100%', textAlign: 'start' }}>\n          {\n            changedLocale === '_'\n            ? <MdiIcon\n              path={mdiTranslate}\n              className=\"icon\"\n            />\n            : changedLocale.toUpperCase()\n          }\n          </span>\n          <span style={{\n            marginLeft: 'var(--basis)',\n            lineHeight: '1',\n            verticalAlign: 'text-top',\n          }}>\n            { isOpen ? '▴' : '▾' }\n          </span>\n        </button>\n      )}\n      paperProps={{\n        sx: {\n          maxHeight: '300px',\n        }\n      }}\n    >\n      {({ close }) => (\n        <div style={{\n          padding: 'var(--basis_x2) 0',\n        }}>\n          {\n            localesArray\n            .filter(({ code }) => options.includes(code))\n            .map(({ code, nativeName }) => (\n              <MenuItem\n                key={code}\n                onClick={() => {\n                  handleLocaleChange(code)\n                  close()\n                }}\n                className=\"roundMenuItem\"\n                selected={code === changedLocale}\n              >\n                {code === '_' ? nativeName : `${code.toUpperCase()} — ${nativeName}`}\n              </MenuItem>\n            ))\n          }\n        </div>\n      )}\n    </PopoverMenu>    \n  )\n}\n\nexport default LocaleSelect\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"SidebarContent_content__RAi8X\",\"header\":\"SidebarContent_header__1pYRG\",\"headerBar\":\"SidebarContent_headerBar__2xkje\",\"scrollContainer\":\"SidebarContent_scrollContainer__2eS9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockRow\":\"BlockTree_blockRow__80Vim\",\"blockRowActions\":\"BlockTree_blockRowActions__GDOGf\",\"fakeHover\":\"BlockTree_fakeHover__TKaWl\"};","import React, { useCallback, useEffect, useState, useRef } from 'react'\nimport { VariableSizeList } from 'react-window'\n\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position'\n\nimport BlockMenu from './edit/BlockMenu.js'\nimport ViewerAuto from './view/ViewerAuto.js'\nimport MultiButton from './MultiButton.js'\n\nimport { useLocalization, Localized } from '../fluent/Localized.js'\n\nimport classes from './BlockTree.module.css'\n\nimport {\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from '@mui/material'\n\nimport {\n  MoreVertSharp as BlockMenuIcon,\n  ArrowDropDownSharp as ExpandLessIcon,\n  ArrowRightSharp as ExpandMoreIcon,\n\n  Replay as RequeryIcon,\n  FilterList as FilterListIcon,\n  Archive as ArchiveIcon,\n\n  InsertDriveFileSharp as PageIcon,\n  // AutoAwesomeSharp as ActionIcon,\n  LinkSharp as RedirectIcon,\n  PersonSharp as PersonIcon,\n  // Crop75Sharp as ButtonIcon,\n  // TitleSharp as HeadlineIcon,\n  // NotesSharp as TextIcon,\n  // Remove as DividerIcon,\n  // EditSharp as EditIcon,\n\n  Search as SearchIcon,\n} from '@mui/icons-material'\n\nimport useLoadBlocks from '../hooks/useLoadBlocks.js'\nimport useUser from '../hooks/useUser.js'\n\nimport PopoverMenu from './PopoverMenu.js'\n\nimport useResizeObserver from '@react-hook/resize-observer'\n\nconst useSize = target => {\n  const mountedRef = React.useRef(false)\n  useEffect(() => {\n    mountedRef.current = true\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  const [size, setSize] = React.useState()\n\n  React.useLayoutEffect(() => {\n    if (mountedRef.current === true) {\n      setSize(target.current.getBoundingClientRect())\n    }\n  }, [target])\n\n  // Where the magic happens\n  useResizeObserver(target, (entry) => {\n    if (mountedRef.current === true) {\n      setSize(entry.contentRect)\n    }\n  })\n  return size\n}\n\nconst blockTypeIcons = {\n  page: <PageIcon />,\n  person: <PersonIcon />,\n  redirect: <RedirectIcon />,\n}\n\n\nconst minItemSize = 41\n\n// const getWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n// const getHeight = () => window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n\n// const getViewportWidth = () => Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\nconst getViewportHeight = () => Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)\n\nfunction useViewportHeight() {\n  // save current window width in the state object\n  let [height, setHeight] = useState(getViewportHeight())\n\n  // in this case useEffect will execute only once because\n  // it does not have any dependencies.\n  useEffect(() => {\n    // timeoutId for debounce mechanism\n    let timeoutId = null\n    const resizeListener = () => {\n      // prevent execution of previous setTimeout\n      clearTimeout(timeoutId)\n      // change width from the state object after 150 milliseconds\n      timeoutId = setTimeout(() => {\n        setHeight(getViewportHeight())\n      }, 150)\n    }\n    // set resize listener\n    window.addEventListener('resize', resizeListener)\n\n    // clean up function\n    return () => {\n      // remove resize listener\n      window.removeEventListener('resize', resizeListener)\n    }\n  }, [])\n\n  return { height }\n}\n\nfunction buildTree(nodes){\n  // Build a tree from the blocks.\n  // Where each block has a parentId property.\n  // Each tree item should have the block itself, a list of children and a nesting level.\n  \n  const treeRoots = []\n\n  for (let node of nodes) {\n    let parentBlock = null\n    if (node.block.parent) {\n      parentBlock = nodes.find(n => n._id === node.block.parent)\n      // if (!parentBlock) {\n      //   console.error('Invalid parent:')\n      //   console.error('parentBlockt', parentBlock)\n      //   console.error('node.block.parent', node.block.parent)\n      // }\n    }\n\n    if (!parentBlock) {\n      treeRoots.push(node)\n    } else {\n      // If the parentBlock has no children, create the children array.\n      if (!parentBlock.children) {\n        parentBlock.children = []\n      }\n      parentBlock.children.push(node)\n    }\n  }\n\n  return treeRoots\n}\n\nfunction* treeWalker(treeRoots) {\n  const stack = []\n \n  let treeRootsSorted = treeRoots\n    .sort((a, b) => b.block.metadata.modified > a.block.metadata.modified ? 1 : -1)\n\n  // find the index of the root with block.properties.slug === 'europa'\n  const europaIndex = treeRootsSorted.findIndex(root => root?.block?.properties?.slug === 'europa')\n\n  // remove the root at index europaIndex\n  if (europaIndex > -1) {\n    treeRootsSorted[europaIndex] = {\n      ...treeRootsSorted[europaIndex],\n      isOpen: true,\n    }\n\n    treeRootsSorted = [\n      treeRootsSorted[europaIndex],\n      ...treeRootsSorted.slice(0, europaIndex),\n      ...treeRootsSorted.slice(europaIndex + 1)\n    ]\n  }\n      \n  // Remember all the necessary data of the first node in the stack.\n  for (const root of treeRootsSorted) {\n    stack.unshift({\n      nestingLevel: 0,\n      node: root,\n    })\n  }\n \n  // Walk through the tree until we have no nodes available.\n  while (stack.length !== 0) {\n    const {\n      node: {children = [], _id, block, isOpen},\n      nestingLevel,\n    } = stack.pop()\n\n    yield {\n      _id,\n      isLeaf: children.length === 0,\n      isOpen,\n      block,\n      nestingLevel,\n    }\n \n    // Basing on the node openness state we are deciding if we need to render\n    // the child nodes (if they exist).\n    if (children.length !== 0 && isOpen) {\n      // Since it is a stack structure, we need to put nodes we want to render\n      // first to the end of the stack.\n\n      const childrenSorted = children\n        .sort((a, b) => b.block.metadata.modified > a.block.metadata.modified ? 1 : -1)\n\n      for (let i = childrenSorted.length - 1; i >= 0; i--) {\n        stack.push({\n          nestingLevel: nestingLevel + 1,\n          node: childrenSorted[i],\n        });\n      }\n    }\n  }\n}\n\nfunction getFlatTree(treeRoots){\n  const flatTree = []\n\n  const walker = treeWalker(treeRoots)\n\n  let done = false\n  while (!done) {\n    const { done: new_done, value } = walker.next()\n    done = new_done\n    if (!done) {\n      flatTree.push(value)\n    }\n  }\n\n  return flatTree\n}\n\nconst BlockRow = ({\n  index,\n  style,\n  data,\n}) => {\n  const {\n    items,\n    props,\n  } = data || []\n\n  const {\n    createBlock,\n    toggleOpenById,\n    refetchData,\n    showBlockMenu,\n    setItemSize,\n  } = props || {}\n\n  const {\n    _id,\n    isLeaf,\n    isOpen,\n    block,\n    nestingLevel,\n  } = items[index] || {}\n\n  const itemRef = useRef()\n  useEffect(() => {\n    if (typeof setItemSize === 'function' && itemRef.current) {\n      const height = itemRef.current.getBoundingClientRect().height\n      if (height > 0) {\n        setItemSize(index, ~~height)\n      }\n    }\n  }, [index, block, setItemSize]) // mention block here, to recalc the height on new data\n  \n  const [blockMenuIsOpen, setBlockMenuIsOpen] = useState(false)\n\n  const onBlockMenuToogle = useCallback(newValue => {\n    if (newValue === false) {\n      setTimeout(() => {\n        setBlockMenuIsOpen(newValue)\n      }, 200) // The fade-out animation is 200ms. Only rerender after it, for it not to loose the element.\n    } else {\n      setBlockMenuIsOpen(newValue)\n    }\n  }, [ setBlockMenuIsOpen ])\n\n  const toggleOpen = useCallback(() => {\n    if (typeof toggleOpenById === 'function') {\n      toggleOpenById(_id)\n    }\n  }, [toggleOpenById, _id])\n  \n  const onReloadContext = useCallback(() => {\n    if (typeof refetchData === 'function') {\n      setTimeout(() => {\n        refetchData({ force: true })\n      }, 200) // The fade-out animation is 200ms. Only rerender after it, for it not to loose the element.\n    }\n  }, [ refetchData ])\n\n  const rowContent = <>\n    <ViewerAuto\n      dragable={true}\n      size=\"line\"\n      block={block}\n      style={{\n        flexGrow: '1',\n        width: '100%',\n      }}\n    />\n\n    {\n      showBlockMenu === true\n      && (\n        <div className={classes.blockRowActions}>\n          <BlockMenu\n            onToogle={onBlockMenuToogle}\n            onReloadContext={onReloadContext}\n            {...{\n              block,\n              createBlock,\n              // saveType,\n            }}\n            trigger={props => (\n              <button\n                {...props}\n                className={`text hasIcon ${blockMenuIsOpen ? 'fakeHover' : ''}`}\n                style={{\n                  margin: '0',\n                  padding: 'var(--basis) 0',\n                  flexShrink: '0',\n                }}\n              >\n                <BlockMenuIcon className=\"icon\" />\n              </button>\n            )}\n          />\n        </div>\n      )\n    }\n  </>\n\n  const inset = ~~(nestingLevel * 25 + (isLeaf ? 24 : 0))\n\n  return <div\n    ref={itemRef}\n    key={block._id}\n    style={{\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'row',\n      ...style,\n      height: 'auto',\n      marginLeft: inset,\n      minWidth: `calc(100% - ${(isLeaf ? 24 : 0)}px)`,\n      width: `calc(100% - ${inset}px)`,\n    }}\n    className={`${classes.blockRow} ${blockMenuIsOpen ? classes.fakeHover : ''}`}\n  >\n    {!isLeaf && (\n      <button\n        onClick={toggleOpen}\n        className=\"text hasIcon\"\n        style={{\n          margin: '0',\n          padding: 'var(--basis) 0',\n          flexShrink: '0',\n        }}\n      >\n        {\n          isOpen\n            ? <ExpandLessIcon style={{ verticalAlign: 'middle' }} />\n            : <ExpandMoreIcon style={{ verticalAlign: 'middle' }} />\n        }\n      </button>\n    )}\n    {rowContent}\n  </div>\n}\n\nconst getFilteredTypes = types => Object.entries(types)\n  .filter(([, value]) => value === true)\n  .map(([key, ]) => key)\n\nfunction BlockTree({\n  createBlock = ()=>{},\n  scrollContainer = window,\n  showBlockMenu = true,\n}) {\n  const { getString } = useLocalization()\n  const { loggedIn } = useUser()\n\n  const searchButtonRef = useRef(null)\n  const searchButtonSize = useSize(searchButtonRef)\n\n  const outerTreeRef = useRef(null)\n  const innerTreeRef = useRef(null)\n  const [outerHeight, setOuterHeight] = useState(minItemSize)\n  const [bottomMargin, setBottomMargin] = useState(0)\n  const [nodes, setNodes] = useState([])\n  const [openById, setOpenById] = useState({})\n  const [treeNodes, setTreeNodes] = useState([])\n\n  const prevFetchArguments = useRef({})\n\n  const [treeType, setTreeType] = useState('europa') // europa / people / own_blocks\n\n  const [types, setTypes] = useState({\n    person: true,\n    page: true,\n    redirect: true,\n  })\n  const filteredTypes = getFilteredTypes(types)\n  \n  const [archived, setArchived] = useState(false)\n  function toggleArchived() {\n    setArchived(oldArchived => !oldArchived)\n  }\n\n\n  const openSearch = () => {\n    const event = new CustomEvent('open_search')\n    window.dispatchEvent(event)\n  }\n  /*\n  const sizeMap = useRef({})\n  const setSize = useCallback((index, size) => {\n    sizeMap.current = {\n      ...sizeMap.current,\n      [index]: size,\n    }\n  }, [])\n  const getSize = useCallback(index => sizeMap.current[index] || minItemSize, [])\n  */\n\n\n  const { height: viewportHeight } = useViewportHeight()\n\n  const updateHeight = useCallback(() => {\n    if (innerTreeRef.current && outerTreeRef.current) {\n      setTimeout(() => { // TODO remove this timeout (it's used to update the initial height)\n        const outerBounds = outerTreeRef.current.getBoundingClientRect()      \n        const maxHeight = viewportHeight - outerBounds.top\n\n        const innerBounds = innerTreeRef.current.getBoundingClientRect()\n        const fullHeight = innerBounds.height\n        if (typeof fullHeight === 'number' && !isNaN(fullHeight) && fullHeight > minItemSize) {\n          const newHeight = Math.min(maxHeight, fullHeight)\n          setOuterHeight(~~(newHeight))\n          setBottomMargin(~~(Math.max(fullHeight - newHeight, 0)))\n        }\n      }, 100)\n    }\n  }, [ viewportHeight, innerTreeRef, outerTreeRef, setOuterHeight, setBottomMargin ])\n\n  useScrollPosition(updateHeight, [updateHeight], null, false, 300, scrollContainer)\n\n  const updateTree = useCallback(nodes => {\n    if (nodes.length > 0) {\n      nodes = nodes.map(node => ({\n        ...node,\n        isOpen: openById.hasOwnProperty(node._id) ? openById[node._id] : false,\n      }))\n      \n      const treeRoots = buildTree(JSON.parse(JSON.stringify(nodes)))\n      const flatTree = getFlatTree(treeRoots)\n      setTreeNodes(flatTree)\n    } else {\n      setTreeNodes([])\n    }\n    updateHeight()\n  }, [setTreeNodes, updateHeight, openById])\n\n  const loadBlocks = useLoadBlocks()\n  const refetchData = useCallback(options => {\n    let {\n      force = false,\n      filteredTypes,\n      archived,\n    } = options || {}\n\n    let roots = null\n    let roles = ['viewer','editor','owner']\n\n    if (treeType === 'europa') {\n      roots = ['6249c879fcaf12b124914396'] // TODO: don't hard code the id of europa \n      filteredTypes = [\n        'page',\n        'redirect',\n      ]\n      archived = false\n    } else if (treeType === 'people') {\n      filteredTypes = [\n        'person'\n      ]\n      archived = false\n    } else if (treeType === 'own_blocks') {\n      roles = ['editor', 'owner']\n    }\n\n    if (\n      force === true\n      || prevFetchArguments.current.archived !== archived\n      || prevFetchArguments.current.types !== filteredTypes\n    ) {\n      prevFetchArguments.current.types = filteredTypes\n      prevFetchArguments.current.archived = archived\n      \n      loadBlocks({ types: filteredTypes, archived, roots, roles })\n        .then(async loadedBlocks => {\n          const nodes = loadedBlocks\n          .map(block => ({\n            _id: block._id,\n            block,\n            children: [],\n            isOpen: false,\n          }))\n\n          setNodes(nodes)\n          updateTree(nodes)\n        })\n        .catch(error => console.error(error))\n    }\n  }, [treeType, loadBlocks, setNodes, updateTree])\n\n  // useEffect(() => {\n  //   refetchData()\n  // }, [ refetchData ])\n\n\n\n\n\n  // START Filter\n\n  const toggleType = useCallback(type2toggle => {\n    const newTypes = { ...types }\n    newTypes[type2toggle] = !newTypes[type2toggle]\n\n    const typesValues = Object.values(newTypes)\n    if (!typesValues.every(value => value === false)) {\n      setTypes(newTypes)\n    }\n  }, [ types, setTypes ])\n\n  useEffect(() => {\n    refetchData({\n      filteredTypes: getFilteredTypes(types),\n      archived,\n    })\n  }, [ types, archived, refetchData ])\n\n  // END Filter\n\n\n\n  const listRef = useRef(null)\n  const [itemSizes, setSize] = React.useState([])\n  const setItemSize = React.useCallback((index, size) => {\n    if (typeof setSize === 'function') {\n      setSize(sizes => ({\n        ...sizes,\n        [index]: size\n      }))\n      if (!!listRef.current && typeof listRef.current.resetAfterIndex === 'function') {\n        listRef.current.resetAfterIndex(index, false)\n      }\n    }\n  }, [])\n  const getItemSize = React.useCallback(index => {\n    return itemSizes[index] || minItemSize\n  }, [itemSizes])\n\n\n\n\n  const toggleOpenById = useCallback((_id) => {\n    openById[_id] = !openById[_id]\n    setOpenById(openById)\n    updateTree(nodes)\n  }, [setOpenById, openById, updateTree, nodes])\n\n  const refetchDataWithFilter = useCallback(options => {\n    refetchData({\n      ...options,\n      filteredTypes: getFilteredTypes(types),\n      archived,\n    })\n  }, [ types, archived, refetchData ])\n\n\n  // const isMacLike = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform) // source: https://stackoverflow.com/questions/10527983/best-way-to-detect-mac-os-x-or-windows-computers-with-javascript-or-jquery?noredirect=1&lq=1\n  const isMacLike = /(macintosh|macintel|macppc|mac68k|macos|iphone|ipad|ipod)/i.test(window.navigator.userAgent.toLowerCase())\n  \n  return <>\n    <div>\n      <MultiButton\n        defaultValue={treeType}\n        items={\n          loggedIn\n            ? [\n              { value: 'europa', title: 'Volt Europa' },\n              { value: 'people', title: getString('block_menu_type_label_plural_person') },\n              { value: 'own_blocks', title: getString('block_tree_own_blocks') }\n            ]\n            : [\n              {value: 'europa', title: 'Volt Europa' },\n              {value: 'people', title: getString('block_menu_type_label_plural_person') },\n            ]\n        }\n        onChange={setTreeType}\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          margin: 'calc(-2 * var(--basis)) 0 var(--basis_x4) 0',\n          justifyContent: 'stretch',\n          flexWrap: 'wrap',\n          gap: 'var(--basis_x2)',\n        }}\n        buttonProps={{\n          style: {\n            flexGrow: 1,\n            justifyContent: 'center',\n            flexShrink: 0,\n            margin: 0,\n          }\n        }}\n      />\n    </div>\n\n    <div style={{\n      display: 'flex',\n      alignItems: 'center',\n      margin: '0 0 var(--basis_x2) 0',\n      gap: 'var(--basis)',\n    }}>\n\n      <MenuItem\n        ref={searchButtonRef}\n        onClick={openSearch}\n        style={{\n          width: '100%',\n          justifyContent: 'space-between',\n          // boxShadow: 'inset 0 0 0 1px rgba(var(--background-rgb), var(--alpha))',\n          boxShadow: '0 0 0 1px var(--background)',\n          background: 'var(--background)',\n\n          // the following replaces the roundMenuItem-css-class\n          borderRadius: 'var(--basis)',\n          margin: '0',\n          padding: 'var(--basis) var(--basis_x2)',\n          // end of the roundMenuItem-css-class stuff\n\n        }}\n      >\n        <ListItemIcon>\n          <SearchIcon />\n        </ListItemIcon>\n        <ListItemText\n          secondary={<span style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n          }}>\n            <Localized id=\"search\" />\n\n            {\n              searchButtonSize?.width > 500\n                ? (\n                  isMacLike\n                    ? <kbd>⌘ K</kbd>\n                    : <kbd>Ctrl+K</kbd>\n                )\n                : null\n            }\n            {/*\n              Command / Cmd: ⌘\n              Shift: ⇧\n              Option / Alt: ⌥\n              Control / Ctrl: ⌃\n              Caps Lock: ⇪\n            */}\n          </span>}\n        />\n      </MenuItem>\n\n      {\n        loggedIn && treeType === 'own_blocks'\n        ? <PopoverMenu\n          trigger={triggerProps => (\n            <button\n              {...triggerProps}\n              className=\"text hasIcon\"\n              style={{\n                flexShrink: '0',\n                margin: '0',\n              }}\n            >\n              <FilterListIcon className=\"icon\" />\n              {/* <span className=\"hideOnSmallScreen\" style={{verticalAlign: 'middle'}}>Filter</span> */}\n            </button>\n          )}\n        >\n          {/*\n            { value: 'page', icon: <PageIcon className=\"icon\"/>, title: getString('block_menu_type_label_plural_page') },\n            { value: 'person', icon: <PersonIcon className=\"icon\" />, title: getString('block_menu_type_label_plural_person') },\n            { value: 'redirect', icon: <RedirectIcon className=\"icon\" />, title: getString('block_menu_type_label_plural_redirect') },\n          */}\n\n          <div style={{ marginTop: '8px' }}></div>\n\n          {\n            Object.keys(types)\n              .map(type => (\n                <MenuItem\n                  className=\"roundMenuItem\"\n                  key={type}\n                  onClick={() => toggleType(type)}\n                  selected={filteredTypes.includes(type)}\n                  sx={{\n                    marginTop: '2px !important',\n                    marginBottom: '2px !important',\n                  }}\n                >\n                  <ListItemIcon>\n                    {blockTypeIcons[type]}\n                  </ListItemIcon>\n                  <ListItemText>\n                    <Localized id={'block_menu_type_label_plural_'+type} />\n                  </ListItemText>\n                </MenuItem>\n              ))\n          }\n\n          <Divider style={{ opacity: 'var(--alpha-less)'}} />\n\n          <MenuItem\n            className=\"roundMenuItem\"\n            onClick={toggleArchived}\n            selected={archived === true}\n            sx={{\n              marginBottom: '2px !important',\n            }}\n          >\n            <ListItemIcon>\n              <ArchiveIcon className=\"icon\" />\n            </ListItemIcon>\n            <ListItemText>\n              <Localized id={archived === true ? 'filter_menu_showing_archiv' : 'filter_menu_show_archiv'} />\n            </ListItemText>\n          </MenuItem>\n\n        </PopoverMenu>\n        : null\n      }\n\n      <button\n        className=\"text hasIcon\"\n        onClick={refetchDataWithFilter}\n        style={{\n          flexShrink: '0',\n          margin: '0px',\n        }}\n      >\n        <RequeryIcon className=\"icon\" />\n        {/* <span className=\"hideOnSmallScreen\" style={{verticalAlign: 'middle'}}>Reload</span> */}\n      </button>\n    </div>\n\n    <div\n      style={{\n        height: outerHeight,\n        marginRight: '-12px',\n        marginLeft: '-12px',\n        marginBottom: bottomMargin,\n        overflowY: 'visible',\n        overflowX: 'auto',\n      }}\n      ref={outerTreeRef}\n    >\n      <VariableSizeList\n        ref={listRef}\n        itemSize={getItemSize}\n        itemData={{\n          items: treeNodes,\n          props: {\n            createBlock,\n            toggleOpenById,\n            refetchData: refetchDataWithFilter,\n            showBlockMenu,\n            setItemSize,\n          }\n        }}\n        itemCount={treeNodes.length}\n        innerRef={innerTreeRef}\n        // onScroll={updateHeight}\n        height={outerHeight}\n        width=\"auto\"\n        style={{\n          // overflow: 'visible',\n          overflowY: 'hidden',\n          overflowX: 'visible',\n          // overflowX: 'hidden',\n        }}\n        estimatedItemSize={minItemSize}\n        itemKey={(index, data) => data.items[index]._id}\n      >\n        {BlockRow}\n      </VariableSizeList>\n      {\n        treeNodes.length === 0\n          ? <p style={{\n            textAlign: 'center',\n            fontWeight: 'bold',\n          }}><Localized id=\"blocktree_no_nodes_to_show\" /></p>\n          : null\n      }\n    </div>\n  </>\n}\n\nexport default BlockTree\n\n\n\n// const defaultButtonStyle = { fontFamily: 'Courier New' }\n\n// Tree component can work with any possible tree structure because it uses an\n// iterator function that the user provides. Structure, approach, and iterator\n// function below is just one of many possible variants.\n// const defaultTree = {\n//   name: 'Root #1',\n//   id: 'root-1',\n//   children: [\n//     {\n//       children: [\n//         {id: 'child-2', name: 'Child #2'},\n//         {id: 'child-3', name: 'Child #3'},\n//         {id: 'child-5', name: 'Child #3'},\n//         {id: 'child-6', name: 'Child #3'},\n//         {id: 'child-7', name: 'Child #3'},\n//         {id: 'child-8', name: 'Child #3'},\n//         {id: 'child-9', name: 'Child #3'},\n//         {id: 'child-10', name: 'Child #3'},\n//         {id: 'child-11', name: 'Child #3'},\n//       ],\n//       id: 'child-1',\n//       name: 'Child #1',\n//     },\n//   ],\n// }\n\n  /*\nasync function* treeWalker(refresh) {\n  const stack = []\n \n  // Remember all the necessary data of the first node in the stack.\n  stack.push({\n    nestingLevel: 0,\n    node: tree,\n  })\n \n  // Walk through the tree until we have no nodes available.\n  while (stack.length !== 0) {\n    const {\n      node: {children = [], id, name},\n      nestingLevel,\n    } = stack.pop()\n \n    // Here we are sending the information about the node to the Tree component\n    // and receive an information about the openness state from it. The\n    // `refresh` parameter tells us if the full update of the tree is requested;\n    // basing on it we decide to return the full node data or only the node\n    // id to update the nodes order.\n    const isOpened = yield refresh\n      ? {\n          id,\n          isLeaf: children.length === 0,\n          isOpenByDefault: false,\n          name,\n          nestingLevel,\n        }\n      : id\n \n    // Basing on the node openness state we are deciding if we need to render\n    // the child nodes (if they exist).\n    if (children.length !== 0 && isOpened) {\n      // Since it is a stack structure, we need to put nodes we want to render\n      // first to the end of the stack.\n      for (let i = children.length - 1; i >= 0; i--) {\n        stack.push({\n          nestingLevel: nestingLevel + 1,\n          node: children[i],\n        });\n      }\n    }\n  }\n}\n*/\n\n  /*\n  // Node component receives all the data we created in the `treeWalker` +\n  // internal openness state (`isOpen`), function to change internal openness\n  // state (`toggle`) and `style` parameter that should be added to the root div.\n  const Node = ({data: {isLeaf, name, nestingLevel}, isOpen, style, toggle}) => {\n\n    const toogleAndUpdate = () => {\n      toggle()\n      setTimeout(updateHeight, 100)\n    }\n\n    return <div\n      style={{\n        ...style,\n        alignItems: 'center',\n        display: 'flex',\n        marginLeft: nestingLevel * 30 + (isLeaf ? 48 : 0),\n      }}\n    >\n      {!isLeaf && (\n        <div>\n          <button\n            type=\"button\"\n            onClick={toogleAndUpdate}\n            style={defaultButtonStyle}\n          >\n            {isOpen ? '-' : '+'}\n          </button>\n        </div>\n      )}\n      <div>{name}</div>\n    </div>\n  }\n*/\n","import { useRef, useState, useEffect } from 'react'\n\nimport { useApolloClient } from '@apollo/client'\nimport { getBlocks_Query } from '../graphql/queries'\n\nexport default function BlocksLoader({ slugs = [], children, ...props }) {\n  const mountedRef = useRef(false)\n  useEffect(() => {\n    mountedRef.current = true\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  const [blocks, setBlocks] = useState([])\n\n  const apollo_client = useApolloClient()\n\n  useEffect(() => {\n    if (Array.isArray(slugs) && slugs.length > 0) {\n      apollo_client.query({\n        query: getBlocks_Query,\n        variables: {\n          slugs,\n        },\n      })\n        .then(async ({ errors, data }) => {\n          if (mountedRef.current === true) {\n            if (Array.isArray(errors) || !Array.isArray(data.blocks)) {\n              throw new Error(errors.map(e => e.message).join('\\n'))\n            } else {\n              setBlocks(data.blocks)\n            }\n          }\n        })\n        .catch(async error => {\n          console.error('error', error)\n          setBlocks([])\n        })\n    } else {\n      setBlocks([])\n    }\n  }, [slugs, apollo_client])\n\n  if (blocks === null || blocks.length === 0) {\n    return null\n  }\n\n  if (typeof children !== 'function') {\n    return null\n  }\n\n  return children({...props, blocks, slugs})\n}\n","import { useState, useCallback, useRef, useEffect } from 'react'\nimport classes from './SidebarContent.module.css'\n\nimport {\n  MenuList,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from '@mui/material'\n\nimport {\n  MenuOpen as MenuOpenIcon,\n  Add as AddIcon,\n\n  Login as LoginIcon,\n  Logout as LogoutIcon,\n\n  LanguageSharp as LocaleChooserIcon,\n  Search as SearchIcon,\n} from '@mui/icons-material'\n\nimport useSaveBlock from '../hooks/useSaveBlock.js'\n\nimport { useNavigate, useMatch } from 'react-router-dom'\n\nimport { Localized, useLocalization } from '../fluent/Localized.js'\nimport useUser from '../hooks/useUser.js'\nimport { useSidebarContext } from './Sidebar.js'\nimport AddMenu from './edit/AddMenu.js'\nimport BlockTree from './BlockTree.js'\nimport BlocksLoader from './BlocksLoader.js'\n\nimport ViewerAuto from './view/ViewerAuto.js'\n\nimport LocaleSelect from './edit/LocaleSelect.js'\nimport { locales } from '../fluent/l10n.js'\n\nfunction debounce(func, wait, immediate) {\n  // Source: underscore.js\n\tvar timeout\n\treturn function() {\n\t\tvar context = this, args = arguments\n\t\tvar later = function() {\n\t\t\ttimeout = null\n\t\t\tif (!immediate) func.apply(context, args)\n\t\t}\n\t\tvar callNow = immediate && !timeout\n\t\tclearTimeout(timeout)\n\t\ttimeout = setTimeout(later, wait)\n\t\tif (callNow) func.apply(context, args)\n\t}\n}\n\nexport default function SidebarContent() {\n  const mounted = useRef(false)\n  useEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  const {\n    getString,\n    userLocales = [],\n  } = useLocalization()\n\n  const [showBlockTree, setShowBlockTree] = useState(false)\n  var efficientSetShowBlockTree = useCallback(()=>{\n    if (mounted.current) {\n      debounce(() => {\n        if (mounted.current) {\n\t        setShowBlockTree(true)\n        }\n      }, 10)()\n    }\n  }, [ setShowBlockTree, mounted ])\n  useEffect(() => {\n    efficientSetShowBlockTree()\n  }, [ efficientSetShowBlockTree ])\n  \n  const { loggedIn } = useUser()\n  const { toggleSidebar } = useSidebarContext()\n\n  const matchesStartpage = useMatch('/')\n\n  const saveBlock = useSaveBlock()\n  const navigate = useNavigate()\n\n  const createBlock = useCallback(({ type }) => {\n    if (typeof type === 'string' && type.length > 0) {\n      saveBlock({\n        type,\n      })\n        .then(gottenBlock => {\n          navigate(`/${gottenBlock._id}/edit`)\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    }\n  }, [saveBlock, navigate])\n\n  const scrollContainerRef = useRef(null)\n\n  const handleLocaleChange = useCallback(newLocale => {\n    const newEvent = new CustomEvent('change_locale', {\n      detail: {\n        locale: newLocale,\n      },\n      bubbles: true,\n      cancelable: false,\n    })\n    document.dispatchEvent(newEvent)\n  }, [])\n\n  const openSearch = () => {\n    const event = new CustomEvent('open_search')\n    window.dispatchEvent(event)\n  }\n\n  const ui_locales = [\n    '_',\n    ...Object.keys(locales),\n  ]\n\n  const choose_locale_information_string = getString('choose_locale_information')\n\n  return <div ref={scrollContainerRef} className={classes.scrollContainer}>\n    <div className={classes.content}>\n    <header className={classes.header}>\n      <div className={classes.headerBar}>\n        {\n          !matchesStartpage\n          ? <button onClick={toggleSidebar} className=\"text hasIcon\" style={{ margin: '0' }}>\n              <MenuOpenIcon className=\"icon\" />\n            </button>\n          : null\n        }\n\n          {\n            matchesStartpage\n              ? <h1>Volt.Link</h1>\n              : <h2 style={{ margin: 0 }}>Volt.Link</h2>\n          }\n\n          <div>\n            {\n              matchesStartpage\n                ? <button className=\"text hasIcon\" onClick={openSearch} title=\"Search (⌘K / Ctrl+K)\">\n                    <SearchIcon className=\"icon\" />\n                  </button>\n                : null\n            }\n\n\n            <AddMenu\n              trigger={triggerProps => (\n                <button className=\"default hasIcon\" {...triggerProps}>\n                  <AddIcon className=\"icon\" />\n                  {/* <span className=\"hideOnSmallScreen\" style={{verticalAlign: 'middle'}}>Add</span> */}\n                </button>\n              )}\n              createBlock={createBlock}\n            />\n          </div>\n      </div>\n    </header>\n\n      <MenuList style={{ maxWidth: '100%' }}>\n\n        {\n          loggedIn\n            ? <a href={`${window.domains.backend}logout?redirect_to=${encodeURIComponent(window.location.toString())}`}>\n                <MenuItem className=\"roundMenuItem\">\n                  <ListItemIcon>\n                    <LogoutIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={<Localized id=\"logout\" />} />\n                </MenuItem>\n              </a>\n            : <a href={`${window.domains.backend}login?redirect_to=${encodeURIComponent(window.location.toString())}`}>\n                <MenuItem className=\"roundMenuItem\">\n                  <ListItemIcon>\n                    <LoginIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={<Localized id=\"login\" />} />\n                </MenuItem>\n              </a>\n        }\n\n        <MenuItem\n          className=\"roundMenuItem\"\n        >\n          <ListItemIcon>\n            <LocaleChooserIcon />\n          </ListItemIcon>\n          <ListItemText\n            primary={<>\n              <span style={{\n                marginRight: 'var(--basis_x2)',\n                verticalAlign: 'middle',\n              }}>\n                <Localized id=\"choose_locale\" />\n              </span>\n              <LocaleSelect\n                onChange={handleLocaleChange}\n                defaultValue={userLocales[0]}\n                options={ui_locales}\n                style={{\n                  fontSize: 'inherit',\n                  padding: '4px 8px',\n                  verticalAlign: 'middle',\n                }}\n              />\n            </>}\n            secondary={<>\n              {\n                typeof choose_locale_information_string === 'string'\n                  && choose_locale_information_string !== ''\n                  ? <span style={{ marginBottom: '0' }}>\n                    <Localized id=\"choose_locale_information\" />\n                  </span>\n                  : null\n              }\n            </>}\n          />\n        </MenuItem>\n\n        <br />\n\n        <BlocksLoader slugs={[\n          'glossary',\n          'vip',\n          'tools',\n        ]}>\n          {({ blocks, slugs }) => {\n            return slugs\n              .map(slug => {\n                const block = blocks.find(block => block?.properties?.slug === slug)\n                if (block) {\n                  return <ViewerAuto key={block._id} block={block} />\n                }\n                return null\n              })\n              .filter(Boolean)\n          }}\n        </BlocksLoader>\n\n        <br />\n\n        <BlocksLoader slugs={[\n          'volt_link_workplace_group',\n          'stats',\n          'volt_link_source_code',\n          'volt_link_contact',\n          'imprint',\n          'privacy_policy',\n        ]}>\n          {({ blocks, slugs }) => {\n            return slugs\n              .map(slug => {\n                const block = blocks.find(block => block?.properties?.slug === slug)\n                if (block) {\n                  return <ViewerAuto key={block._id} block={block} />\n                }\n                return null\n              })\n              .filter(Boolean)\n          }}\n        </BlocksLoader>\n\n      </MenuList>\n\n      <br />\n      <Divider style={{ opacity: 0.2 }} />\n      <br/>\n\n      {/* All blocks: */}\n      {\n        showBlockTree\n        ? <BlockTree\n            showBlockMenu={true}\n            scrollContainer={scrollContainerRef}\n          />\n        : null\n      }\n    </div>\n  </div>\n}\n"],"sourceRoot":""}